/*
Import APIs for TiDB Cloud Serverless

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package consoleimportapi

import (
	"encoding/json"
)

// checks if the ImportsGetTableColumnsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportsGetTableColumnsResp{}

// ImportsGetTableColumnsResp struct for ImportsGetTableColumnsResp
type ImportsGetTableColumnsResp struct {
	Table    *FullTable `json:"table,omitempty"`
	BaseResp *BaseResp  `json:"base_resp,omitempty"`
}

// NewImportsGetTableColumnsResp instantiates a new ImportsGetTableColumnsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportsGetTableColumnsResp() *ImportsGetTableColumnsResp {
	this := ImportsGetTableColumnsResp{}
	return &this
}

// NewImportsGetTableColumnsRespWithDefaults instantiates a new ImportsGetTableColumnsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportsGetTableColumnsRespWithDefaults() *ImportsGetTableColumnsResp {
	this := ImportsGetTableColumnsResp{}
	return &this
}

// GetTable returns the Table field value if set, zero value otherwise.
func (o *ImportsGetTableColumnsResp) GetTable() FullTable {
	if o == nil || IsNil(o.Table) {
		var ret FullTable
		return ret
	}
	return *o.Table
}

// GetTableOk returns a tuple with the Table field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportsGetTableColumnsResp) GetTableOk() (*FullTable, bool) {
	if o == nil || IsNil(o.Table) {
		return nil, false
	}
	return o.Table, true
}

// HasTable returns a boolean if a field has been set.
func (o *ImportsGetTableColumnsResp) HasTable() bool {
	if o != nil && !IsNil(o.Table) {
		return true
	}

	return false
}

// SetTable gets a reference to the given FullTable and assigns it to the Table field.
func (o *ImportsGetTableColumnsResp) SetTable(v FullTable) {
	o.Table = &v
}

// GetBaseResp returns the BaseResp field value if set, zero value otherwise.
func (o *ImportsGetTableColumnsResp) GetBaseResp() BaseResp {
	if o == nil || IsNil(o.BaseResp) {
		var ret BaseResp
		return ret
	}
	return *o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportsGetTableColumnsResp) GetBaseRespOk() (*BaseResp, bool) {
	if o == nil || IsNil(o.BaseResp) {
		return nil, false
	}
	return o.BaseResp, true
}

// HasBaseResp returns a boolean if a field has been set.
func (o *ImportsGetTableColumnsResp) HasBaseResp() bool {
	if o != nil && !IsNil(o.BaseResp) {
		return true
	}

	return false
}

// SetBaseResp gets a reference to the given BaseResp and assigns it to the BaseResp field.
func (o *ImportsGetTableColumnsResp) SetBaseResp(v BaseResp) {
	o.BaseResp = &v
}

func (o ImportsGetTableColumnsResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportsGetTableColumnsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Table) {
		toSerialize["table"] = o.Table
	}
	if !IsNil(o.BaseResp) {
		toSerialize["base_resp"] = o.BaseResp
	}
	return toSerialize, nil
}

type NullableImportsGetTableColumnsResp struct {
	value *ImportsGetTableColumnsResp
	isSet bool
}

func (v NullableImportsGetTableColumnsResp) Get() *ImportsGetTableColumnsResp {
	return v.value
}

func (v *NullableImportsGetTableColumnsResp) Set(val *ImportsGetTableColumnsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableImportsGetTableColumnsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableImportsGetTableColumnsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportsGetTableColumnsResp(val *ImportsGetTableColumnsResp) *NullableImportsGetTableColumnsResp {
	return &NullableImportsGetTableColumnsResp{value: val, isSet: true}
}

func (v NullableImportsGetTableColumnsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportsGetTableColumnsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
