/*
Import APIs for TiDB Cloud Serverless

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package consoleimportapi

import (
	"encoding/json"
	"time"
)

// checks if the Import type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Import{}

// Import struct for Import
type Import struct {
	// The ID of the import.
	Id *string `json:"id,omitempty"`
	// The display name of the import.
	DisplayName *string `json:"display_name,omitempty"`
	// The ID of the cluster to import into.
	ClusterId *string `json:"cluster_id,omitempty"`
	// The total size of the data imported.
	TotalSize *string `json:"total_size,omitempty"`
	// The time the import was created.
	CreateTime *time.Time `json:"create_time,omitempty"`
	// The time the import was completed.
	CompleteTime *time.Time       `json:"complete_time,omitempty"`
	State        *ImportStateEnum `json:"state,omitempty"`
	// The process in percent of the import job, but doesn't include the post-processing progress.
	CompletePercent *int64 `json:"complete_percent,omitempty"`
	// The output message of the import.
	Message *string `json:"message,omitempty"`
	// The user who created the import.
	CreatedBy       *string          `json:"created_by,omitempty"`
	CreationDetails *CreationDetails `json:"creation_details,omitempty"`
	// The overall validation progress of the import task after the data has been imported into the target cluster.
	PostImportCompletedPercent *int64 `json:"post_import_completed_percent,omitempty"`
	// The `uint64` identifier for the upload, provided to ensure compatibility with the RPC call from the dataflow-svc v1beta OPENAPI.
	CompatibleId *string `json:"compatible_id,omitempty"`
	// The start time of the import.
	StartTime *time.Time `json:"start_time,omitempty"`
	// The total tables count of the import.
	TotalTablesCount *int64 `json:"total_tables_count,omitempty"`
	// The completed tables info of the import.
	AllCompletedTables []ConsoleImportTableCompletionInfo `json:"all_completed_tables,omitempty"`
	BaseResp           *BaseResp                          `json:"base_resp,omitempty"`
}

// NewImport instantiates a new Import object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImport() *Import {
	this := Import{}
	return &this
}

// NewImportWithDefaults instantiates a new Import object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportWithDefaults() *Import {
	this := Import{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Import) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Import) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Import) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Import) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Import) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Import) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *Import) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *Import) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *Import) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *Import) GetTotalSize() string {
	if o == nil || IsNil(o.TotalSize) {
		var ret string
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetTotalSizeOk() (*string, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *Import) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given string and assigns it to the TotalSize field.
func (o *Import) SetTotalSize(v string) {
	o.TotalSize = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *Import) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *Import) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *Import) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetCompleteTime returns the CompleteTime field value if set, zero value otherwise.
func (o *Import) GetCompleteTime() time.Time {
	if o == nil || IsNil(o.CompleteTime) {
		var ret time.Time
		return ret
	}
	return *o.CompleteTime
}

// GetCompleteTimeOk returns a tuple with the CompleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCompleteTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompleteTime) {
		return nil, false
	}
	return o.CompleteTime, true
}

// HasCompleteTime returns a boolean if a field has been set.
func (o *Import) HasCompleteTime() bool {
	if o != nil && !IsNil(o.CompleteTime) {
		return true
	}

	return false
}

// SetCompleteTime gets a reference to the given time.Time and assigns it to the CompleteTime field.
func (o *Import) SetCompleteTime(v time.Time) {
	o.CompleteTime = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Import) GetState() ImportStateEnum {
	if o == nil || IsNil(o.State) {
		var ret ImportStateEnum
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetStateOk() (*ImportStateEnum, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Import) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given ImportStateEnum and assigns it to the State field.
func (o *Import) SetState(v ImportStateEnum) {
	o.State = &v
}

// GetCompletePercent returns the CompletePercent field value if set, zero value otherwise.
func (o *Import) GetCompletePercent() int64 {
	if o == nil || IsNil(o.CompletePercent) {
		var ret int64
		return ret
	}
	return *o.CompletePercent
}

// GetCompletePercentOk returns a tuple with the CompletePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCompletePercentOk() (*int64, bool) {
	if o == nil || IsNil(o.CompletePercent) {
		return nil, false
	}
	return o.CompletePercent, true
}

// HasCompletePercent returns a boolean if a field has been set.
func (o *Import) HasCompletePercent() bool {
	if o != nil && !IsNil(o.CompletePercent) {
		return true
	}

	return false
}

// SetCompletePercent gets a reference to the given int64 and assigns it to the CompletePercent field.
func (o *Import) SetCompletePercent(v int64) {
	o.CompletePercent = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *Import) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *Import) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *Import) SetMessage(v string) {
	o.Message = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Import) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Import) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Import) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreationDetails returns the CreationDetails field value if set, zero value otherwise.
func (o *Import) GetCreationDetails() CreationDetails {
	if o == nil || IsNil(o.CreationDetails) {
		var ret CreationDetails
		return ret
	}
	return *o.CreationDetails
}

// GetCreationDetailsOk returns a tuple with the CreationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCreationDetailsOk() (*CreationDetails, bool) {
	if o == nil || IsNil(o.CreationDetails) {
		return nil, false
	}
	return o.CreationDetails, true
}

// HasCreationDetails returns a boolean if a field has been set.
func (o *Import) HasCreationDetails() bool {
	if o != nil && !IsNil(o.CreationDetails) {
		return true
	}

	return false
}

// SetCreationDetails gets a reference to the given CreationDetails and assigns it to the CreationDetails field.
func (o *Import) SetCreationDetails(v CreationDetails) {
	o.CreationDetails = &v
}

// GetPostImportCompletedPercent returns the PostImportCompletedPercent field value if set, zero value otherwise.
func (o *Import) GetPostImportCompletedPercent() int64 {
	if o == nil || IsNil(o.PostImportCompletedPercent) {
		var ret int64
		return ret
	}
	return *o.PostImportCompletedPercent
}

// GetPostImportCompletedPercentOk returns a tuple with the PostImportCompletedPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetPostImportCompletedPercentOk() (*int64, bool) {
	if o == nil || IsNil(o.PostImportCompletedPercent) {
		return nil, false
	}
	return o.PostImportCompletedPercent, true
}

// HasPostImportCompletedPercent returns a boolean if a field has been set.
func (o *Import) HasPostImportCompletedPercent() bool {
	if o != nil && !IsNil(o.PostImportCompletedPercent) {
		return true
	}

	return false
}

// SetPostImportCompletedPercent gets a reference to the given int64 and assigns it to the PostImportCompletedPercent field.
func (o *Import) SetPostImportCompletedPercent(v int64) {
	o.PostImportCompletedPercent = &v
}

// GetCompatibleId returns the CompatibleId field value if set, zero value otherwise.
func (o *Import) GetCompatibleId() string {
	if o == nil || IsNil(o.CompatibleId) {
		var ret string
		return ret
	}
	return *o.CompatibleId
}

// GetCompatibleIdOk returns a tuple with the CompatibleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetCompatibleIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompatibleId) {
		return nil, false
	}
	return o.CompatibleId, true
}

// HasCompatibleId returns a boolean if a field has been set.
func (o *Import) HasCompatibleId() bool {
	if o != nil && !IsNil(o.CompatibleId) {
		return true
	}

	return false
}

// SetCompatibleId gets a reference to the given string and assigns it to the CompatibleId field.
func (o *Import) SetCompatibleId(v string) {
	o.CompatibleId = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *Import) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *Import) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *Import) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetTotalTablesCount returns the TotalTablesCount field value if set, zero value otherwise.
func (o *Import) GetTotalTablesCount() int64 {
	if o == nil || IsNil(o.TotalTablesCount) {
		var ret int64
		return ret
	}
	return *o.TotalTablesCount
}

// GetTotalTablesCountOk returns a tuple with the TotalTablesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetTotalTablesCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalTablesCount) {
		return nil, false
	}
	return o.TotalTablesCount, true
}

// HasTotalTablesCount returns a boolean if a field has been set.
func (o *Import) HasTotalTablesCount() bool {
	if o != nil && !IsNil(o.TotalTablesCount) {
		return true
	}

	return false
}

// SetTotalTablesCount gets a reference to the given int64 and assigns it to the TotalTablesCount field.
func (o *Import) SetTotalTablesCount(v int64) {
	o.TotalTablesCount = &v
}

// GetAllCompletedTables returns the AllCompletedTables field value if set, zero value otherwise.
func (o *Import) GetAllCompletedTables() []ConsoleImportTableCompletionInfo {
	if o == nil || IsNil(o.AllCompletedTables) {
		var ret []ConsoleImportTableCompletionInfo
		return ret
	}
	return o.AllCompletedTables
}

// GetAllCompletedTablesOk returns a tuple with the AllCompletedTables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetAllCompletedTablesOk() ([]ConsoleImportTableCompletionInfo, bool) {
	if o == nil || IsNil(o.AllCompletedTables) {
		return nil, false
	}
	return o.AllCompletedTables, true
}

// HasAllCompletedTables returns a boolean if a field has been set.
func (o *Import) HasAllCompletedTables() bool {
	if o != nil && !IsNil(o.AllCompletedTables) {
		return true
	}

	return false
}

// SetAllCompletedTables gets a reference to the given []ConsoleImportTableCompletionInfo and assigns it to the AllCompletedTables field.
func (o *Import) SetAllCompletedTables(v []ConsoleImportTableCompletionInfo) {
	o.AllCompletedTables = v
}

// GetBaseResp returns the BaseResp field value if set, zero value otherwise.
func (o *Import) GetBaseResp() BaseResp {
	if o == nil || IsNil(o.BaseResp) {
		var ret BaseResp
		return ret
	}
	return *o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Import) GetBaseRespOk() (*BaseResp, bool) {
	if o == nil || IsNil(o.BaseResp) {
		return nil, false
	}
	return o.BaseResp, true
}

// HasBaseResp returns a boolean if a field has been set.
func (o *Import) HasBaseResp() bool {
	if o != nil && !IsNil(o.BaseResp) {
		return true
	}

	return false
}

// SetBaseResp gets a reference to the given BaseResp and assigns it to the BaseResp field.
func (o *Import) SetBaseResp(v BaseResp) {
	o.BaseResp = &v
}

func (o Import) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Import) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.TotalSize) {
		toSerialize["total_size"] = o.TotalSize
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.CompleteTime) {
		toSerialize["complete_time"] = o.CompleteTime
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.CompletePercent) {
		toSerialize["complete_percent"] = o.CompletePercent
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.CreationDetails) {
		toSerialize["creation_details"] = o.CreationDetails
	}
	if !IsNil(o.PostImportCompletedPercent) {
		toSerialize["post_import_completed_percent"] = o.PostImportCompletedPercent
	}
	if !IsNil(o.CompatibleId) {
		toSerialize["compatible_id"] = o.CompatibleId
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.TotalTablesCount) {
		toSerialize["total_tables_count"] = o.TotalTablesCount
	}
	if !IsNil(o.AllCompletedTables) {
		toSerialize["all_completed_tables"] = o.AllCompletedTables
	}
	if !IsNil(o.BaseResp) {
		toSerialize["base_resp"] = o.BaseResp
	}
	return toSerialize, nil
}

type NullableImport struct {
	value *Import
	isSet bool
}

func (v NullableImport) Get() *Import {
	return v.value
}

func (v *NullableImport) Set(val *Import) {
	v.value = val
	v.isSet = true
}

func (v NullableImport) IsSet() bool {
	return v.isSet
}

func (v *NullableImport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImport(val *Import) *NullableImport {
	return &NullableImport{value: val, isSet: true}
}

func (v NullableImport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
