/*
Import APIs for TiDB Cloud Serverless

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package consoleimportapi

import (
	"encoding/json"
)

// checks if the ConsoleListImportsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsoleListImportsResp{}

// ConsoleListImportsResp struct for ConsoleListImportsResp
type ConsoleListImportsResp struct {
	// The imports.
	Imports []Import `json:"imports,omitempty"`
	// The total size of the imports.
	TotalSize *int64 `json:"total_size,omitempty"`
	// The next page token.
	NextPageToken *string   `json:"next_page_token,omitempty"`
	BaseResp      *BaseResp `json:"base_resp,omitempty"`
}

// NewConsoleListImportsResp instantiates a new ConsoleListImportsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsoleListImportsResp() *ConsoleListImportsResp {
	this := ConsoleListImportsResp{}
	return &this
}

// NewConsoleListImportsRespWithDefaults instantiates a new ConsoleListImportsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsoleListImportsRespWithDefaults() *ConsoleListImportsResp {
	this := ConsoleListImportsResp{}
	return &this
}

// GetImports returns the Imports field value if set, zero value otherwise.
func (o *ConsoleListImportsResp) GetImports() []Import {
	if o == nil || IsNil(o.Imports) {
		var ret []Import
		return ret
	}
	return o.Imports
}

// GetImportsOk returns a tuple with the Imports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleListImportsResp) GetImportsOk() ([]Import, bool) {
	if o == nil || IsNil(o.Imports) {
		return nil, false
	}
	return o.Imports, true
}

// HasImports returns a boolean if a field has been set.
func (o *ConsoleListImportsResp) HasImports() bool {
	if o != nil && !IsNil(o.Imports) {
		return true
	}

	return false
}

// SetImports gets a reference to the given []Import and assigns it to the Imports field.
func (o *ConsoleListImportsResp) SetImports(v []Import) {
	o.Imports = v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *ConsoleListImportsResp) GetTotalSize() int64 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int64
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleListImportsResp) GetTotalSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *ConsoleListImportsResp) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int64 and assigns it to the TotalSize field.
func (o *ConsoleListImportsResp) SetTotalSize(v int64) {
	o.TotalSize = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ConsoleListImportsResp) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleListImportsResp) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ConsoleListImportsResp) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ConsoleListImportsResp) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetBaseResp returns the BaseResp field value if set, zero value otherwise.
func (o *ConsoleListImportsResp) GetBaseResp() BaseResp {
	if o == nil || IsNil(o.BaseResp) {
		var ret BaseResp
		return ret
	}
	return *o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleListImportsResp) GetBaseRespOk() (*BaseResp, bool) {
	if o == nil || IsNil(o.BaseResp) {
		return nil, false
	}
	return o.BaseResp, true
}

// HasBaseResp returns a boolean if a field has been set.
func (o *ConsoleListImportsResp) HasBaseResp() bool {
	if o != nil && !IsNil(o.BaseResp) {
		return true
	}

	return false
}

// SetBaseResp gets a reference to the given BaseResp and assigns it to the BaseResp field.
func (o *ConsoleListImportsResp) SetBaseResp(v BaseResp) {
	o.BaseResp = &v
}

func (o ConsoleListImportsResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsoleListImportsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Imports) {
		toSerialize["imports"] = o.Imports
	}
	if !IsNil(o.TotalSize) {
		toSerialize["total_size"] = o.TotalSize
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	if !IsNil(o.BaseResp) {
		toSerialize["base_resp"] = o.BaseResp
	}
	return toSerialize, nil
}

type NullableConsoleListImportsResp struct {
	value *ConsoleListImportsResp
	isSet bool
}

func (v NullableConsoleListImportsResp) Get() *ConsoleListImportsResp {
	return v.value
}

func (v *NullableConsoleListImportsResp) Set(val *ConsoleListImportsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableConsoleListImportsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableConsoleListImportsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsoleListImportsResp(val *ConsoleListImportsResp) *NullableConsoleListImportsResp {
	return &NullableConsoleListImportsResp{value: val, isSet: true}
}

func (v NullableConsoleListImportsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsoleListImportsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
