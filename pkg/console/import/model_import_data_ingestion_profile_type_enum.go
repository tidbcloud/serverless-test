/*
Import APIs for TiDB Cloud Serverless

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package consoleimportapi

import (
	"encoding/json"
	"fmt"
)

// ImportDataIngestionProfileTypeEnum  - S3: S3 source.
type ImportDataIngestionProfileTypeEnum string

// List of ImportDataIngestionProfileType.Enum
const (
	IMPORTDATAINGESTIONPROFILETYPEENUM_S3 ImportDataIngestionProfileTypeEnum = "S3"
)

// All allowed values of ImportDataIngestionProfileTypeEnum enum
var AllowedImportDataIngestionProfileTypeEnumEnumValues = []ImportDataIngestionProfileTypeEnum{
	"S3",
}

func (v *ImportDataIngestionProfileTypeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ImportDataIngestionProfileTypeEnum(value)
	for _, existing := range AllowedImportDataIngestionProfileTypeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ImportDataIngestionProfileTypeEnum", value)
}

// NewImportDataIngestionProfileTypeEnumFromValue returns a pointer to a valid ImportDataIngestionProfileTypeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewImportDataIngestionProfileTypeEnumFromValue(v string) (*ImportDataIngestionProfileTypeEnum, error) {
	ev := ImportDataIngestionProfileTypeEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ImportDataIngestionProfileTypeEnum: valid values are %v", v, AllowedImportDataIngestionProfileTypeEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ImportDataIngestionProfileTypeEnum) IsValid() bool {
	for _, existing := range AllowedImportDataIngestionProfileTypeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ImportDataIngestionProfileType.Enum value
func (v ImportDataIngestionProfileTypeEnum) Ptr() *ImportDataIngestionProfileTypeEnum {
	return &v
}

type NullableImportDataIngestionProfileTypeEnum struct {
	value *ImportDataIngestionProfileTypeEnum
	isSet bool
}

func (v NullableImportDataIngestionProfileTypeEnum) Get() *ImportDataIngestionProfileTypeEnum {
	return v.value
}

func (v *NullableImportDataIngestionProfileTypeEnum) Set(val *ImportDataIngestionProfileTypeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableImportDataIngestionProfileTypeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableImportDataIngestionProfileTypeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportDataIngestionProfileTypeEnum(val *ImportDataIngestionProfileTypeEnum) *NullableImportDataIngestionProfileTypeEnum {
	return &NullableImportDataIngestionProfileTypeEnum{value: val, isSet: true}
}

func (v NullableImportDataIngestionProfileTypeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportDataIngestionProfileTypeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
