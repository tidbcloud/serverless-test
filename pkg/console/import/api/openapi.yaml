openapi: 3.0.1
info:
  title: Import APIs for TiDB Cloud Serverless
  version: alpha
servers:
- url: /
tags:
- name: ImportService
paths:
  /api/v1/serverless/imports:listSupportedDataTypes:
    get:
      operationId: ImportService_ListSupportedDataTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportsSupportedDataTypesResp'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List the data types supported by the import.
      tags:
      - ImportService
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports:
    get:
      operationId: ImportService_ListImports
      parameters:
      - description: Required. The organize ID of import.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID of import.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The ID of the cluster to import into.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: "Optional. The page token, default is empty."
        in: query
        name: page_token
        schema:
          type: string
      - description: "Optional. The page size, default is 10."
        in: query
        name: page_size
        schema:
          format: int32
          type: integer
      - description: "Optional. List imports order by, separated by comma, default\
          \ is ascending. Example: \"foo, bar desc\". Supported field: create_time"
        in: query
        name: order_by
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/console.ListImportsResp'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Provides a list of import jobs.
      tags:
      - ImportService
    post:
      operationId: ImportService_CreateImport
      parameters:
      - description: Required. The organize ID of import.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID of import.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: The ID of the cluster to import into.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/console.ImportService.CreateImportBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create an import job.
      tags:
      - ImportService
      x-codegen-request-body-name: body
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports/{id}:
    get:
      operationId: ImportService_GetImport
      parameters:
      - description: Required. The organize ID of import.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID of import.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The ID of the cluster to import into.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: Required. The ID of the import.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get an import detailed information.
      tags:
      - ImportService
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports/{id}:cancel:
    post:
      operationId: ImportService_CancelImport
      parameters:
      - description: Required. The organize ID of import.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID of import.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The ID of the cluster to import into.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: Required. The ID of the import.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/console.ImportService.CancelImportBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Import'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Cancel an import job.
      tags:
      - ImportService
      x-codegen-request-body-name: body
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports:getDataIngestionProfile:
    get:
      operationId: ImportService_GetDataIngestionProfile
      parameters:
      - description: Required. The organize ID of cluster.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID of cluster.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The ID of the cluster to import into.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataIngestionProfile'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the data ingestion profile of a cluster.
      tags:
      - ImportService
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports:getTableColumns:
    get:
      operationId: ImportService_GetTableColumns
      parameters:
      - description: Required. The organize ID.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The cluster ID.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: Required. The database name.
        in: query
        name: database
        required: true
        schema:
          type: string
      - description: Required. The table name.
        in: query
        name: table
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportsGetTableColumnsResp'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get the columns of a table.
      tags:
      - ImportService
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports:listTargetTables:
    get:
      operationId: ImportService_ListTargetTables
      parameters:
      - description: Required. The organize ID.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The cluster ID.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetTablesResp'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List the target tables.
      tags:
      - ImportService
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports:precheck:
    post:
      operationId: ImportService_Precheck
      parameters:
      - description: Required. The organization ID.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The cluster ID.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportService.PrecheckBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrecheckResp'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Precheck and return the scan result.
      tags:
      - ImportService
      x-codegen-request-body-name: body
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports:previewLocal:
    post:
      operationId: ImportService_PreviewLocal
      parameters:
      - description: Required. The organize ID.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The cluster ID.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportService.PreviewLocalBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportsPreviewLocalResp'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Preview the local import result.
      tags:
      - ImportService
      x-codegen-request-body-name: body
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports:upload:
    post:
      operationId: ImportService_Upload
      parameters:
      - description: Required. The organize ID of cluster.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID of cluster.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The ID of the cluster to import into.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportService.UploadBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Generate Upload url for importing data.
      tags:
      - ImportService
      x-codegen-request-body-name: body
  /api/v1/serverless/orgs/{org_id}/projects/{project_id}/clusters/{cluster_id}/imports:validate:
    post:
      operationId: ImportService_ValidateImport
      parameters:
      - description: Required. The organize ID.
        in: path
        name: org_id
        required: true
        schema:
          type: string
      - description: Required. The project ID.
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Required. The cluster ID.
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportService.ValidateImportBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateImportResp'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Validate the import.
      tags:
      - ImportService
      x-codegen-request-body-name: body
components:
  schemas:
    Any:
      additionalProperties:
        type: object
      example:
        '@type': '@type'
      properties:
        '@type':
          type: string
      type: object
    AzureBlobSource:
      example:
        sas_token: sas_token
        auth_type: SAS_TOKEN
        target_table_infos:
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        uri: uri
      properties:
        auth_type:
          $ref: '#/components/schemas/ImportAzureBlobAuthType.Enum'
        sas_token:
          description: The sas token. This field is input-only.
          type: string
        uri:
          description: "The Azure Blob URI of the import source. For example: azure://<account>.blob.core.windows.net/<container>/<path>."
          type: string
        target_table_infos:
          description: The target table information of the import.
          items:
            $ref: '#/components/schemas/ImportTargetTableInfo'
          type: array
      required:
      - auth_type
      - uri
      type: object
    BaseResp:
      example:
        err_msg: err_msg
        err_code: err_code
        tags:
          key: tags
      properties:
        tags:
          additionalProperties:
            type: string
          title: "such as: request_id, trace_id"
          type: object
        err_code:
          format: int64
          type: string
        err_msg:
          type: string
      type: object
    CSVFormat:
      example:
        "null": "null"
        trim_last_separator: true
        delimiter: delimiter
        not_null: true
        header: true
        separator: separator
        backslash_escape: true
      properties:
        separator:
          description: "Separator of each value in CSV files. Default is ','."
          type: string
        delimiter:
          description: Delimiter of string type variables in CSV files. Default is
            '"'.
          type: string
        header:
          description: Import CSV files of the tables with header. Default is true.
          type: boolean
        not_null:
          description: Whether the columns in CSV files can be null. Default is false.
          type: boolean
        "null":
          description: Representation of null values in CSV files. Default is "\N".
          type: string
        backslash_escape:
          description: Whether to escape backslashes in CSV files. Default is true.
          type: boolean
        trim_last_separator:
          description: Whether to trim the last separator in CSV files. Default is
            false.
          type: boolean
      type: object
    ColumnInfo:
      example:
        column_name: column_name
        column_type: column_type
      properties:
        column_name:
          description: The name of the column.
          type: string
        column_type:
          description: The type of the column.
          type: string
      type: object
    CreationDetails:
      example:
        import_options:
          file_type: CSV
          need_drop_table: true
          display_name: display_name
          csv_format:
            "null": "null"
            trim_last_separator: true
            delimiter: delimiter
            not_null: true
            header: true
            separator: separator
            backslash_escape: true
        source:
          s3:
            auth_type: ROLE_ARN
            role_arn: role_arn
            target_table_infos:
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            access_key:
              id: id
              secret: secret
            uri: uri
          gcs:
            auth_type: SERVICE_ACCOUNT_KEY
            service_account_key: service_account_key
            target_table_infos:
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            uri: uri
          s3_compatible:
            auth_type: ACCESS_KEY
            endpoint: endpoint
            target_table_infos:
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            access_key:
              id: id
              secret: secret
            uri: uri
          type: LOCAL
          local:
            target_database: target_database
            upload_id: upload_id
            file_name: file_name
            columns:
            - column_name: column_name
              column_type: column_type
            - column_name: column_name
              column_type: column_type
            target_table: target_table
            pk_columns:
            - pk_columns
            - pk_columns
          azure_blob:
            sas_token: sas_token
            auth_type: SAS_TOKEN
            target_table_infos:
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            uri: uri
          oss:
            auth_type: ACCESS_KEY
            role_arn: role_arn
            target_table_infos:
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            - target_table:
                database: database
                table: table
              custom_file: custom_file
            access_key:
              id: id
              secret: secret
            uri: uri
      properties:
        import_options:
          $ref: '#/components/schemas/ImportOptions'
        source:
          $ref: '#/components/schemas/ImportSource'
      type: object
    DataIngestionProfile:
      example:
        s3_profile:
          aws_account_id: aws_account_id
          aws_external_id: aws_external_id
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
        type: S3
      properties:
        type:
          $ref: '#/components/schemas/ImportDataIngestionProfileType.Enum'
        s3_profile:
          $ref: '#/components/schemas/S3Profile'
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    Database:
      example:
        database: database
        tables:
        - tables
        - tables
      properties:
        database:
          description: The database name.
          type: string
        tables:
          description: The list of tables.
          items:
            type: string
          type: array
      type: object
    FullTable:
      example:
        column_is_pk:
        - true
        - true
        database_name: database_name
        row_values:
        - column_values:
          - column_values
          - column_values
        - column_values:
          - column_values
          - column_values
        row_headers:
        - row_headers
        - row_headers
        row_data_types:
        - row_data_types
        - row_data_types
        column_auto_gen:
        - true
        - true
        table_name: table_name
      properties:
        database_name:
          description: The database name.
          type: string
        table_name:
          description: The table name.
          type: string
        row_headers:
          description: The headers of the table.
          items:
            type: string
          type: array
        row_values:
          description: The columns of the table.
          items:
            $ref: '#/components/schemas/Row'
          type: array
        row_data_types:
          description: The data types of the columns.
          items:
            type: string
          type: array
        column_is_pk:
          description: |-
            A boolean flag indicating whether each column is part of the primary key.
            True if the column is a primary key; false otherwise.
          items:
            type: boolean
          type: array
        column_auto_gen:
          items:
            type: boolean
          title: column_auto_gen represents column is auto_increment or auto_random
          type: array
      type: object
    GCSSource:
      example:
        auth_type: SERVICE_ACCOUNT_KEY
        service_account_key: service_account_key
        target_table_infos:
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        uri: uri
      properties:
        uri:
          description: The GCS URI of the import source.
          type: string
        auth_type:
          $ref: '#/components/schemas/ImportGcsAuthType.Enum'
        service_account_key:
          title: The service account key
          type: string
        target_table_infos:
          description: The target table information of the import.
          items:
            $ref: '#/components/schemas/ImportTargetTableInfo'
          type: array
      required:
      - auth_type
      - uri
      type: object
    Import:
      example:
        post_import_completed_percent: 6
        create_time: 2000-01-23T04:56:07.000+00:00
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
        complete_percent: 0
        total_tables_count: 1
        total_size: total_size
        display_name: display_name
        message: message
        created_by: created_by
        start_time: 2000-01-23T04:56:07.000+00:00
        cluster_id: cluster_id
        compatible_id: compatible_id
        all_completed_tables:
        - result: SUCCESS
          message: message
          data_file_pattern: data_file_pattern
          table_name: table_name
        - result: SUCCESS
          message: message
          data_file_pattern: data_file_pattern
          table_name: table_name
        complete_time: 2000-01-23T04:56:07.000+00:00
        creation_details:
          import_options:
            file_type: CSV
            need_drop_table: true
            display_name: display_name
            csv_format:
              "null": "null"
              trim_last_separator: true
              delimiter: delimiter
              not_null: true
              header: true
              separator: separator
              backslash_escape: true
          source:
            s3:
              auth_type: ROLE_ARN
              role_arn: role_arn
              target_table_infos:
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              access_key:
                id: id
                secret: secret
              uri: uri
            gcs:
              auth_type: SERVICE_ACCOUNT_KEY
              service_account_key: service_account_key
              target_table_infos:
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              uri: uri
            s3_compatible:
              auth_type: ACCESS_KEY
              endpoint: endpoint
              target_table_infos:
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              access_key:
                id: id
                secret: secret
              uri: uri
            type: LOCAL
            local:
              target_database: target_database
              upload_id: upload_id
              file_name: file_name
              columns:
              - column_name: column_name
                column_type: column_type
              - column_name: column_name
                column_type: column_type
              target_table: target_table
              pk_columns:
              - pk_columns
              - pk_columns
            azure_blob:
              sas_token: sas_token
              auth_type: SAS_TOKEN
              target_table_infos:
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              uri: uri
            oss:
              auth_type: ACCESS_KEY
              role_arn: role_arn
              target_table_infos:
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              - target_table:
                  database: database
                  table: table
                custom_file: custom_file
              access_key:
                id: id
                secret: secret
              uri: uri
        id: id
        state: PREPARING
      properties:
        id:
          description: The ID of the import.
          readOnly: true
          type: string
        display_name:
          description: The display name of the import.
          readOnly: true
          type: string
        cluster_id:
          description: The ID of the cluster to import into.
          readOnly: true
          type: string
        total_size:
          description: The total size of the data imported.
          format: uint64
          readOnly: true
          type: string
        create_time:
          description: The time the import was created.
          format: date-time
          readOnly: true
          type: string
        complete_time:
          description: The time the import was completed.
          format: date-time
          readOnly: true
          type: string
        state:
          $ref: '#/components/schemas/ImportState.Enum'
        complete_percent:
          description: "The process in percent of the import job, but doesn't include\
            \ the post-processing progress."
          format: int64
          readOnly: true
          type: integer
        message:
          description: The output message of the import.
          readOnly: true
          type: string
        created_by:
          description: The user who created the import.
          readOnly: true
          type: string
        creation_details:
          $ref: '#/components/schemas/CreationDetails'
        post_import_completed_percent:
          description: The overall validation progress of the import task after the
            data has been imported into the target cluster.
          format: int64
          readOnly: true
          type: integer
        compatible_id:
          description: |-
            The `uint64` identifier for the upload, provided to ensure compatibility
            with the RPC call from the dataflow-svc v1beta OPENAPI.
          format: uint64
          readOnly: true
          type: string
        start_time:
          description: The start time of the import.
          format: date-time
          readOnly: true
          type: string
        total_tables_count:
          description: The total tables count of the import.
          format: int64
          type: integer
        all_completed_tables:
          description: The completed tables info of the import.
          items:
            $ref: '#/components/schemas/console.ImportTableCompletionInfo'
          type: array
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    ImportAzureBlobAuthType.Enum:
      description: " - SAS_TOKEN: The access method is sas token."
      enum:
      - SAS_TOKEN
      type: string
    ImportDataIngestionProfileType.Enum:
      description: " - S3: S3 source."
      enum:
      - S3
      type: string
    ImportFileType.Enum:
      description: |2-
         - CSV: CSV type.
         - SQL: SQL type.
         - AURORA_SNAPSHOT: Aurora snapshot type.
         - PARQUET: Parquet type.
      enum:
      - CSV
      - SQL
      - AURORA_SNAPSHOT
      - PARQUET
      type: string
    ImportGcsAuthType.Enum:
      description: " - SERVICE_ACCOUNT_KEY: The access method is service account key."
      enum:
      - SERVICE_ACCOUNT_KEY
      type: string
    ImportOSSAuthType.Enum:
      description: |2-
         - ACCESS_KEY: The access method is access key.
         - ROLE_ARN: The access method is role arn.
      enum:
      - ACCESS_KEY
      - ROLE_ARN
      type: string
    ImportOptions:
      example:
        file_type: CSV
        need_drop_table: true
        display_name: display_name
        csv_format:
          "null": "null"
          trim_last_separator: true
          delimiter: delimiter
          not_null: true
          header: true
          separator: separator
          backslash_escape: true
      properties:
        file_type:
          $ref: '#/components/schemas/ImportFileType.Enum'
        csv_format:
          $ref: '#/components/schemas/CSVFormat'
        need_drop_table:
          description: Optional. Only used in tutorial.
          type: boolean
        display_name:
          description: Optional. The display name of the import.
          type: string
      required:
      - file_type
      type: object
    ImportS3AuthType.Enum:
      description: |2-
         - ROLE_ARN: The access method is role arn.
         - ACCESS_KEY: The access method is access key.
      enum:
      - ROLE_ARN
      - ACCESS_KEY
      type: string
    ImportS3CompatibleAuthType.Enum:
      description: " - ACCESS_KEY: The access method is access key."
      enum:
      - ACCESS_KEY
      type: string
    ImportService.PrecheckBody:
      properties:
        import_options:
          $ref: '#/components/schemas/ImportOptions'
        source:
          $ref: '#/components/schemas/ImportSource'
      required:
      - import_options
      - source
      type: object
    ImportService.PreviewLocalBody:
      properties:
        upload_id:
          description: Required. The source of the import.
          type: string
        file_type:
          $ref: '#/components/schemas/ImportFileType.Enum'
        csv_format:
          $ref: '#/components/schemas/CSVFormat'
      required:
      - file_type
      - upload_id
      type: object
    ImportService.UploadBody:
      properties:
        file_name:
          description: Required. The name of the file to import.
          type: string
      required:
      - file_name
      type: object
    ImportService.ValidateImportBody:
      properties:
        validation_type:
          $ref: '#/components/schemas/ImportValidationType.Enum'
        source:
          $ref: '#/components/schemas/ImportSource'
      required:
      - source
      - validation_type
      type: object
    ImportSource:
      example:
        s3:
          auth_type: ROLE_ARN
          role_arn: role_arn
          target_table_infos:
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          access_key:
            id: id
            secret: secret
          uri: uri
        gcs:
          auth_type: SERVICE_ACCOUNT_KEY
          service_account_key: service_account_key
          target_table_infos:
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          uri: uri
        s3_compatible:
          auth_type: ACCESS_KEY
          endpoint: endpoint
          target_table_infos:
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          access_key:
            id: id
            secret: secret
          uri: uri
        type: LOCAL
        local:
          target_database: target_database
          upload_id: upload_id
          file_name: file_name
          columns:
          - column_name: column_name
            column_type: column_type
          - column_name: column_name
            column_type: column_type
          target_table: target_table
          pk_columns:
          - pk_columns
          - pk_columns
        azure_blob:
          sas_token: sas_token
          auth_type: SAS_TOKEN
          target_table_infos:
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          uri: uri
        oss:
          auth_type: ACCESS_KEY
          role_arn: role_arn
          target_table_infos:
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          - target_table:
              database: database
              table: table
            custom_file: custom_file
          access_key:
            id: id
            secret: secret
          uri: uri
      properties:
        type:
          $ref: '#/components/schemas/ImportSourceType.Enum'
        local:
          $ref: '#/components/schemas/LocalSource'
        s3:
          $ref: '#/components/schemas/S3Source'
        gcs:
          $ref: '#/components/schemas/GCSSource'
        azure_blob:
          $ref: '#/components/schemas/AzureBlobSource'
        s3_compatible:
          $ref: '#/components/schemas/S3CompatibleSource'
        oss:
          $ref: '#/components/schemas/OSSSource'
      required:
      - type
      type: object
    ImportSourceType.Enum:
      enum:
      - LOCAL
      - S3
      - GCS
      - AZURE_BLOB
      - S3_COMPATIBLE
      - OSS
      title: |-
        - LOCAL: Local source.
         - S3: S3 source.
         - GCS: gcs source
         - AZURE_BLOB: azure blob source
         - S3_COMPATIBLE: S3 compatible source
         - OSS: OSS source
      type: string
    ImportState.Enum:
      description: |2-
         - PREPARING: The import is preparing.
         - IMPORTING: The import is importing.
         - COMPLETED: The import is completed.
         - FAILED: The import is failed.
         - CANCELING: The import is canceling.
         - CANCELED: The import is canceled.
      enum:
      - PREPARING
      - IMPORTING
      - COMPLETED
      - FAILED
      - CANCELING
      - CANCELED
      type: string
    ImportTargetTableInfo:
      example:
        target_table:
          database: database
          table: table
        custom_file: custom_file
      properties:
        target_table:
          $ref: '#/components/schemas/console.Table'
        custom_file:
          description: "If the custom_file is empty, will use the default rule to\
            \ import data."
          type: string
      type: object
    ImportValidationType.Enum:
      description: |2-
         - SOURCE_ACCESS_CHECK: The validation ensures that the source is accessible.
         - TABLE_EMPTY_CHECK: The validation ensures that the target table is empty.
      enum:
      - SOURCE_ACCESS_CHECK
      - TABLE_EMPTY_CHECK
      type: string
    ImportsGetTableColumnsResp:
      example:
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
        table:
          column_is_pk:
          - true
          - true
          database_name: database_name
          row_values:
          - column_values:
            - column_values
            - column_values
          - column_values:
            - column_values
            - column_values
          row_headers:
          - row_headers
          - row_headers
          row_data_types:
          - row_data_types
          - row_data_types
          column_auto_gen:
          - true
          - true
          table_name: table_name
      properties:
        table:
          $ref: '#/components/schemas/FullTable'
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    ImportsPreviewLocalResp:
      example:
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
        table:
          column_is_pk:
          - true
          - true
          database_name: database_name
          row_values:
          - column_values:
            - column_values
            - column_values
          - column_values:
            - column_values
            - column_values
          row_headers:
          - row_headers
          - row_headers
          row_data_types:
          - row_data_types
          - row_data_types
          column_auto_gen:
          - true
          - true
          table_name: table_name
      properties:
        table:
          $ref: '#/components/schemas/FullTable'
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    ImportsSupportedDataTypesResp:
      example:
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
        data_types:
        - data_types
        - data_types
      properties:
        data_types:
          description: The list of supported data types.
          items:
            type: string
          type: array
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    ListTargetTablesResp:
      example:
        databases:
        - database: database
          tables:
          - tables
          - tables
        - database: database
          tables:
          - tables
          - tables
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
      properties:
        databases:
          description: The list of tables.
          items:
            $ref: '#/components/schemas/Database'
          type: array
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    LocalSource:
      example:
        target_database: target_database
        upload_id: upload_id
        file_name: file_name
        columns:
        - column_name: column_name
          column_type: column_type
        - column_name: column_name
          column_type: column_type
        target_table: target_table
        pk_columns:
        - pk_columns
        - pk_columns
      properties:
        upload_id:
          description: The upload id of import source file.
          type: string
        target_database:
          description: The target database of import.
          type: string
        target_table:
          description: The target table of import.
          type: string
        file_name:
          description: The file name of import source file.
          readOnly: true
          type: string
        columns:
          description: INPUT_ONLY. The columns definition of the target table.
          items:
            $ref: '#/components/schemas/ColumnInfo'
          type: array
        pk_columns:
          description: INPUT_ONLY. The primary key columns of the target table.
          items:
            type: string
          type: array
      required:
      - columns
      - pk_columns
      - target_database
      - target_table
      - upload_id
      type: object
    OSSSource:
      example:
        auth_type: ACCESS_KEY
        role_arn: role_arn
        target_table_infos:
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        access_key:
          id: id
          secret: secret
        uri: uri
      properties:
        uri:
          description: The OSS URI of the import source.
          type: string
        auth_type:
          $ref: '#/components/schemas/ImportOSSAuthType.Enum'
        access_key:
          $ref: '#/components/schemas/OSSSource.AccessKey'
        role_arn:
          type: string
        target_table_infos:
          description: The target table information of the import.
          items:
            $ref: '#/components/schemas/ImportTargetTableInfo'
          type: array
      required:
      - auth_type
      - uri
      type: object
    OSSSource.AccessKey:
      example:
        id: id
        secret: secret
      properties:
        id:
          description: The accessKey id.
          type: string
        secret:
          description: The accessKey secret. This field is input-only.
          type: string
      required:
      - id
      - secret
      type: object
    PrecheckResp:
      example:
        error_message: error_message
        target_tables:
        - error_message: error_message
          matched_data_files:
          - matched_data_files
          - matched_data_files
          use_schema_file: true
          target_table:
            database: database
            table: table
          matched_schema_file: matched_schema_file
        - error_message: error_message
          matched_data_files:
          - matched_data_files
          - matched_data_files
          use_schema_file: true
          target_table:
            database: database
            table: table
          matched_schema_file: matched_schema_file
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
        total_tables_count: total_tables_count
        is_truncated: true
        total_data_files_count: total_data_files_count
      properties:
        target_tables:
          description: The list of tables which has matched data files.
          items:
            $ref: '#/components/schemas/TableResult'
          type: array
        error_message:
          description: The error message consists of the unmatched tables.
          type: string
        total_data_files_count:
          description: The total data files count.
          format: uint64
          type: string
        total_tables_count:
          description: The total tables count.
          format: uint64
          type: string
        is_truncated:
          description: If the result is truncated.
          type: boolean
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    Row:
      example:
        column_values:
        - column_values
        - column_values
      properties:
        column_values:
          description: The values of the row.
          items:
            type: string
          type: array
      type: object
    S3CompatibleSource:
      example:
        auth_type: ACCESS_KEY
        endpoint: endpoint
        target_table_infos:
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        access_key:
          id: id
          secret: secret
        uri: uri
      properties:
        uri:
          description: The S3 compatible URI of the import source.
          type: string
        auth_type:
          $ref: '#/components/schemas/ImportS3CompatibleAuthType.Enum'
        access_key:
          $ref: '#/components/schemas/S3CompatibleSource.AccessKey'
        target_table_infos:
          description: The target table information of the import.
          items:
            $ref: '#/components/schemas/ImportTargetTableInfo'
          type: array
        endpoint:
          description: |-
            The custom S3 endpoint (HTTPS only).
            Used for connecting to non-AWS S3-compatible storage, such as Cloudflare or other cloud providers.
            Ensure the endpoint is a valid HTTPS URL (e.g., "https://custom-s3.example.com").
          type: string
      required:
      - auth_type
      - uri
      type: object
    S3CompatibleSource.AccessKey:
      example:
        id: id
        secret: secret
      properties:
        id:
          description: The access key id.
          type: string
        secret:
          description: The secret access key. This field is input-only.
          type: string
      required:
      - id
      - secret
      type: object
    S3Profile:
      example:
        aws_account_id: aws_account_id
        aws_external_id: aws_external_id
      properties:
        aws_account_id:
          description: The aws account id.
          type: string
        aws_external_id:
          description: The aws external id.
          type: string
      type: object
    S3Source:
      example:
        auth_type: ROLE_ARN
        role_arn: role_arn
        target_table_infos:
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        - target_table:
            database: database
            table: table
          custom_file: custom_file
        access_key:
          id: id
          secret: secret
        uri: uri
      properties:
        uri:
          description: The S3 URI of the import source.
          type: string
        auth_type:
          $ref: '#/components/schemas/ImportS3AuthType.Enum'
        role_arn:
          title: The role arn
          type: string
        access_key:
          $ref: '#/components/schemas/S3Source.AccessKey'
        target_table_infos:
          description: The target table information of the import.
          items:
            $ref: '#/components/schemas/ImportTargetTableInfo'
          type: array
      required:
      - auth_type
      - uri
      type: object
    S3Source.AccessKey:
      example:
        id: id
        secret: secret
      properties:
        id:
          description: The access key id.
          type: string
        secret:
          description: The secret access key. This field is input-only.
          type: string
      required:
      - id
      - secret
      type: object
    Status:
      example:
        code: 0
        details:
        - '@type': '@type'
        - '@type': '@type'
        message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/Any'
          type: array
      type: object
    TableResult:
      example:
        error_message: error_message
        matched_data_files:
        - matched_data_files
        - matched_data_files
        use_schema_file: true
        target_table:
          database: database
          table: table
        matched_schema_file: matched_schema_file
      properties:
        target_table:
          $ref: '#/components/schemas/console.Table'
        error_message:
          description: The error message.
          type: string
        matched_data_files:
          description: The matched data files.
          items:
            type: string
          type: array
        matched_schema_file:
          description: The matched schema file.
          type: string
        use_schema_file:
          description: whether the matched schema file is used in import.
          type: boolean
      type: object
    UploadResponse:
      example:
        upload_id: upload_id
        compatible_id: compatible_id
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
        upload_url: upload_url
      properties:
        upload_url:
          description: The URL to upload the file to.
          readOnly: true
          type: string
        upload_id:
          description: The ID of the upload.
          readOnly: true
          type: string
        compatible_id:
          description: |-
            The `uint64` identifier for the upload, provided to ensure compatibility
            with the RPC call from the dataflow-svc v1beta OPENAPI.
          format: uint64
          readOnly: true
          type: string
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    ValidateImportResp:
      example:
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
      properties:
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    console.ImportService.CancelImportBody:
      type: object
    console.ImportService.CreateImportBody:
      properties:
        import_options:
          $ref: '#/components/schemas/ImportOptions'
        source:
          $ref: '#/components/schemas/ImportSource'
        creator:
          description: Optional. The creator identity. Only use with the RPC call
            from the dataflow-svc v1beta OPENAPI.
          type: string
      required:
      - import_options
      - source
      type: object
    console.ImportTableCompletionInfo:
      example:
        result: SUCCESS
        message: message
        data_file_pattern: data_file_pattern
        table_name: table_name
      properties:
        table_name:
          description: The table name.
          type: string
        result:
          $ref: '#/components/schemas/console.ImportTableCompletionInfo.Result'
        message:
          description: The message of the table import.
          type: string
        data_file_pattern:
          description: The data file pattern.
          type: string
      type: object
    console.ImportTableCompletionInfo.Result:
      enum:
      - SUCCESS
      - WARNING
      - ERROR
      type: string
    console.ListImportsResp:
      example:
        imports:
        - post_import_completed_percent: 6
          create_time: 2000-01-23T04:56:07.000+00:00
          base_resp:
            err_msg: err_msg
            err_code: err_code
            tags:
              key: tags
          complete_percent: 0
          total_tables_count: 1
          total_size: total_size
          display_name: display_name
          message: message
          created_by: created_by
          start_time: 2000-01-23T04:56:07.000+00:00
          cluster_id: cluster_id
          compatible_id: compatible_id
          all_completed_tables:
          - result: SUCCESS
            message: message
            data_file_pattern: data_file_pattern
            table_name: table_name
          - result: SUCCESS
            message: message
            data_file_pattern: data_file_pattern
            table_name: table_name
          complete_time: 2000-01-23T04:56:07.000+00:00
          creation_details:
            import_options:
              file_type: CSV
              need_drop_table: true
              display_name: display_name
              csv_format:
                "null": "null"
                trim_last_separator: true
                delimiter: delimiter
                not_null: true
                header: true
                separator: separator
                backslash_escape: true
            source:
              s3:
                auth_type: ROLE_ARN
                role_arn: role_arn
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                access_key:
                  id: id
                  secret: secret
                uri: uri
              gcs:
                auth_type: SERVICE_ACCOUNT_KEY
                service_account_key: service_account_key
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                uri: uri
              s3_compatible:
                auth_type: ACCESS_KEY
                endpoint: endpoint
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                access_key:
                  id: id
                  secret: secret
                uri: uri
              type: LOCAL
              local:
                target_database: target_database
                upload_id: upload_id
                file_name: file_name
                columns:
                - column_name: column_name
                  column_type: column_type
                - column_name: column_name
                  column_type: column_type
                target_table: target_table
                pk_columns:
                - pk_columns
                - pk_columns
              azure_blob:
                sas_token: sas_token
                auth_type: SAS_TOKEN
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                uri: uri
              oss:
                auth_type: ACCESS_KEY
                role_arn: role_arn
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                access_key:
                  id: id
                  secret: secret
                uri: uri
          id: id
          state: PREPARING
        - post_import_completed_percent: 6
          create_time: 2000-01-23T04:56:07.000+00:00
          base_resp:
            err_msg: err_msg
            err_code: err_code
            tags:
              key: tags
          complete_percent: 0
          total_tables_count: 1
          total_size: total_size
          display_name: display_name
          message: message
          created_by: created_by
          start_time: 2000-01-23T04:56:07.000+00:00
          cluster_id: cluster_id
          compatible_id: compatible_id
          all_completed_tables:
          - result: SUCCESS
            message: message
            data_file_pattern: data_file_pattern
            table_name: table_name
          - result: SUCCESS
            message: message
            data_file_pattern: data_file_pattern
            table_name: table_name
          complete_time: 2000-01-23T04:56:07.000+00:00
          creation_details:
            import_options:
              file_type: CSV
              need_drop_table: true
              display_name: display_name
              csv_format:
                "null": "null"
                trim_last_separator: true
                delimiter: delimiter
                not_null: true
                header: true
                separator: separator
                backslash_escape: true
            source:
              s3:
                auth_type: ROLE_ARN
                role_arn: role_arn
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                access_key:
                  id: id
                  secret: secret
                uri: uri
              gcs:
                auth_type: SERVICE_ACCOUNT_KEY
                service_account_key: service_account_key
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                uri: uri
              s3_compatible:
                auth_type: ACCESS_KEY
                endpoint: endpoint
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                access_key:
                  id: id
                  secret: secret
                uri: uri
              type: LOCAL
              local:
                target_database: target_database
                upload_id: upload_id
                file_name: file_name
                columns:
                - column_name: column_name
                  column_type: column_type
                - column_name: column_name
                  column_type: column_type
                target_table: target_table
                pk_columns:
                - pk_columns
                - pk_columns
              azure_blob:
                sas_token: sas_token
                auth_type: SAS_TOKEN
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                uri: uri
              oss:
                auth_type: ACCESS_KEY
                role_arn: role_arn
                target_table_infos:
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                - target_table:
                    database: database
                    table: table
                  custom_file: custom_file
                access_key:
                  id: id
                  secret: secret
                uri: uri
          id: id
          state: PREPARING
        next_page_token: next_page_token
        base_resp:
          err_msg: err_msg
          err_code: err_code
          tags:
            key: tags
        total_size: 5
      properties:
        imports:
          description: The imports.
          items:
            $ref: '#/components/schemas/Import'
          readOnly: true
          type: array
        total_size:
          description: The total size of the imports.
          format: int64
          readOnly: true
          type: integer
        next_page_token:
          description: The next page token.
          readOnly: true
          type: string
        base_resp:
          $ref: '#/components/schemas/BaseResp'
      type: object
    console.Table:
      example:
        database: database
        table: table
      properties:
        database:
          description: The database name.
          type: string
        table:
          description: The table name.
          type: string
      type: object
  securitySchemes:
    bearer:
      description: "Authentication token, prefixed by Bearer: 'Bearer token'"
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
