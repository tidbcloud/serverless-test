/*
Import APIs for TiDB Cloud Serverless

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package consoleimportapi

import (
	"encoding/json"
)

// checks if the DataIngestionProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataIngestionProfile{}

// DataIngestionProfile struct for DataIngestionProfile
type DataIngestionProfile struct {
	Type      *ImportDataIngestionProfileTypeEnum `json:"type,omitempty"`
	S3Profile *S3Profile                          `json:"s3_profile,omitempty"`
	BaseResp  *BaseResp                           `json:"base_resp,omitempty"`
}

// NewDataIngestionProfile instantiates a new DataIngestionProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataIngestionProfile() *DataIngestionProfile {
	this := DataIngestionProfile{}
	return &this
}

// NewDataIngestionProfileWithDefaults instantiates a new DataIngestionProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataIngestionProfileWithDefaults() *DataIngestionProfile {
	this := DataIngestionProfile{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DataIngestionProfile) GetType() ImportDataIngestionProfileTypeEnum {
	if o == nil || IsNil(o.Type) {
		var ret ImportDataIngestionProfileTypeEnum
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIngestionProfile) GetTypeOk() (*ImportDataIngestionProfileTypeEnum, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DataIngestionProfile) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ImportDataIngestionProfileTypeEnum and assigns it to the Type field.
func (o *DataIngestionProfile) SetType(v ImportDataIngestionProfileTypeEnum) {
	o.Type = &v
}

// GetS3Profile returns the S3Profile field value if set, zero value otherwise.
func (o *DataIngestionProfile) GetS3Profile() S3Profile {
	if o == nil || IsNil(o.S3Profile) {
		var ret S3Profile
		return ret
	}
	return *o.S3Profile
}

// GetS3ProfileOk returns a tuple with the S3Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIngestionProfile) GetS3ProfileOk() (*S3Profile, bool) {
	if o == nil || IsNil(o.S3Profile) {
		return nil, false
	}
	return o.S3Profile, true
}

// HasS3Profile returns a boolean if a field has been set.
func (o *DataIngestionProfile) HasS3Profile() bool {
	if o != nil && !IsNil(o.S3Profile) {
		return true
	}

	return false
}

// SetS3Profile gets a reference to the given S3Profile and assigns it to the S3Profile field.
func (o *DataIngestionProfile) SetS3Profile(v S3Profile) {
	o.S3Profile = &v
}

// GetBaseResp returns the BaseResp field value if set, zero value otherwise.
func (o *DataIngestionProfile) GetBaseResp() BaseResp {
	if o == nil || IsNil(o.BaseResp) {
		var ret BaseResp
		return ret
	}
	return *o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIngestionProfile) GetBaseRespOk() (*BaseResp, bool) {
	if o == nil || IsNil(o.BaseResp) {
		return nil, false
	}
	return o.BaseResp, true
}

// HasBaseResp returns a boolean if a field has been set.
func (o *DataIngestionProfile) HasBaseResp() bool {
	if o != nil && !IsNil(o.BaseResp) {
		return true
	}

	return false
}

// SetBaseResp gets a reference to the given BaseResp and assigns it to the BaseResp field.
func (o *DataIngestionProfile) SetBaseResp(v BaseResp) {
	o.BaseResp = &v
}

func (o DataIngestionProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataIngestionProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.S3Profile) {
		toSerialize["s3_profile"] = o.S3Profile
	}
	if !IsNil(o.BaseResp) {
		toSerialize["base_resp"] = o.BaseResp
	}
	return toSerialize, nil
}

type NullableDataIngestionProfile struct {
	value *DataIngestionProfile
	isSet bool
}

func (v NullableDataIngestionProfile) Get() *DataIngestionProfile {
	return v.value
}

func (v *NullableDataIngestionProfile) Set(val *DataIngestionProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableDataIngestionProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableDataIngestionProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataIngestionProfile(val *DataIngestionProfile) *NullableDataIngestionProfile {
	return &NullableDataIngestionProfile{value: val, isSet: true}
}

func (v NullableDataIngestionProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataIngestionProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
