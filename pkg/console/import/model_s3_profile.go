/*
Import APIs for TiDB Cloud Serverless

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package consoleimportapi

import (
	"encoding/json"
)

// checks if the S3Profile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3Profile{}

// S3Profile struct for S3Profile
type S3Profile struct {
	// The aws account id.
	AwsAccountId *string `json:"aws_account_id,omitempty"`
	// The aws external id.
	AwsExternalId *string `json:"aws_external_id,omitempty"`
}

// NewS3Profile instantiates a new S3Profile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3Profile() *S3Profile {
	this := S3Profile{}
	return &this
}

// NewS3ProfileWithDefaults instantiates a new S3Profile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3ProfileWithDefaults() *S3Profile {
	this := S3Profile{}
	return &this
}

// GetAwsAccountId returns the AwsAccountId field value if set, zero value otherwise.
func (o *S3Profile) GetAwsAccountId() string {
	if o == nil || IsNil(o.AwsAccountId) {
		var ret string
		return ret
	}
	return *o.AwsAccountId
}

// GetAwsAccountIdOk returns a tuple with the AwsAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3Profile) GetAwsAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccountId) {
		return nil, false
	}
	return o.AwsAccountId, true
}

// HasAwsAccountId returns a boolean if a field has been set.
func (o *S3Profile) HasAwsAccountId() bool {
	if o != nil && !IsNil(o.AwsAccountId) {
		return true
	}

	return false
}

// SetAwsAccountId gets a reference to the given string and assigns it to the AwsAccountId field.
func (o *S3Profile) SetAwsAccountId(v string) {
	o.AwsAccountId = &v
}

// GetAwsExternalId returns the AwsExternalId field value if set, zero value otherwise.
func (o *S3Profile) GetAwsExternalId() string {
	if o == nil || IsNil(o.AwsExternalId) {
		var ret string
		return ret
	}
	return *o.AwsExternalId
}

// GetAwsExternalIdOk returns a tuple with the AwsExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3Profile) GetAwsExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwsExternalId) {
		return nil, false
	}
	return o.AwsExternalId, true
}

// HasAwsExternalId returns a boolean if a field has been set.
func (o *S3Profile) HasAwsExternalId() bool {
	if o != nil && !IsNil(o.AwsExternalId) {
		return true
	}

	return false
}

// SetAwsExternalId gets a reference to the given string and assigns it to the AwsExternalId field.
func (o *S3Profile) SetAwsExternalId(v string) {
	o.AwsExternalId = &v
}

func (o S3Profile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3Profile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsAccountId) {
		toSerialize["aws_account_id"] = o.AwsAccountId
	}
	if !IsNil(o.AwsExternalId) {
		toSerialize["aws_external_id"] = o.AwsExternalId
	}
	return toSerialize, nil
}

type NullableS3Profile struct {
	value *S3Profile
	isSet bool
}

func (v NullableS3Profile) Get() *S3Profile {
	return v.value
}

func (v *NullableS3Profile) Set(val *S3Profile) {
	v.value = val
	v.isSet = true
}

func (v NullableS3Profile) IsSet() bool {
	return v.isSet
}

func (v *NullableS3Profile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3Profile(val *S3Profile) *NullableS3Profile {
	return &NullableS3Profile{value: val, isSet: true}
}

func (v NullableS3Profile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3Profile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
