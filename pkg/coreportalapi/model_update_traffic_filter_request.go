/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateTrafficFilterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTrafficFilterRequest{}

// UpdateTrafficFilterRequest struct for UpdateTrafficFilterRequest
type UpdateTrafficFilterRequest struct {
	TrafficFilters CentralTrafficFilterList `json:"traffic_filters"`
}

type _UpdateTrafficFilterRequest UpdateTrafficFilterRequest

// NewUpdateTrafficFilterRequest instantiates a new UpdateTrafficFilterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTrafficFilterRequest(trafficFilters CentralTrafficFilterList) *UpdateTrafficFilterRequest {
	this := UpdateTrafficFilterRequest{}
	this.TrafficFilters = trafficFilters
	return &this
}

// NewUpdateTrafficFilterRequestWithDefaults instantiates a new UpdateTrafficFilterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTrafficFilterRequestWithDefaults() *UpdateTrafficFilterRequest {
	this := UpdateTrafficFilterRequest{}
	return &this
}

// GetTrafficFilters returns the TrafficFilters field value
func (o *UpdateTrafficFilterRequest) GetTrafficFilters() CentralTrafficFilterList {
	if o == nil {
		var ret CentralTrafficFilterList
		return ret
	}

	return o.TrafficFilters
}

// GetTrafficFiltersOk returns a tuple with the TrafficFilters field value
// and a boolean to check if the value has been set.
func (o *UpdateTrafficFilterRequest) GetTrafficFiltersOk() (*CentralTrafficFilterList, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrafficFilters, true
}

// SetTrafficFilters sets field value
func (o *UpdateTrafficFilterRequest) SetTrafficFilters(v CentralTrafficFilterList) {
	o.TrafficFilters = v
}

func (o UpdateTrafficFilterRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTrafficFilterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["traffic_filters"] = o.TrafficFilters
	return toSerialize, nil
}

func (o *UpdateTrafficFilterRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"traffic_filters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateTrafficFilterRequest := _UpdateTrafficFilterRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateTrafficFilterRequest)

	if err != nil {
		return err
	}

	*o = UpdateTrafficFilterRequest(varUpdateTrafficFilterRequest)

	return err
}

type NullableUpdateTrafficFilterRequest struct {
	value *UpdateTrafficFilterRequest
	isSet bool
}

func (v NullableUpdateTrafficFilterRequest) Get() *UpdateTrafficFilterRequest {
	return v.value
}

func (v *NullableUpdateTrafficFilterRequest) Set(val *UpdateTrafficFilterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTrafficFilterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTrafficFilterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTrafficFilterRequest(val *UpdateTrafficFilterRequest) *NullableUpdateTrafficFilterRequest {
	return &NullableUpdateTrafficFilterRequest{value: val, isSet: true}
}

func (v NullableUpdateTrafficFilterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTrafficFilterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
