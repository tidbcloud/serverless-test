/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CentralAuditLogAccessRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralAuditLogAccessRecord{}

// CentralAuditLogAccessRecord struct for CentralAuditLogAccessRecord
type CentralAuditLogAccessRecord struct {
	Id             string   `json:"id"`
	UserExpr       string   `json:"user_expr"`
	DbExpr         string   `json:"db_expr"`
	TableExpr      string   `json:"table_expr"`
	AccessTypeList []string `json:"access_type_list"`
}

type _CentralAuditLogAccessRecord CentralAuditLogAccessRecord

// NewCentralAuditLogAccessRecord instantiates a new CentralAuditLogAccessRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralAuditLogAccessRecord(id string, userExpr string, dbExpr string, tableExpr string, accessTypeList []string) *CentralAuditLogAccessRecord {
	this := CentralAuditLogAccessRecord{}
	this.Id = id
	this.UserExpr = userExpr
	this.DbExpr = dbExpr
	this.TableExpr = tableExpr
	this.AccessTypeList = accessTypeList
	return &this
}

// NewCentralAuditLogAccessRecordWithDefaults instantiates a new CentralAuditLogAccessRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralAuditLogAccessRecordWithDefaults() *CentralAuditLogAccessRecord {
	this := CentralAuditLogAccessRecord{}
	return &this
}

// GetId returns the Id field value
func (o *CentralAuditLogAccessRecord) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CentralAuditLogAccessRecord) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CentralAuditLogAccessRecord) SetId(v string) {
	o.Id = v
}

// GetUserExpr returns the UserExpr field value
func (o *CentralAuditLogAccessRecord) GetUserExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserExpr
}

// GetUserExprOk returns a tuple with the UserExpr field value
// and a boolean to check if the value has been set.
func (o *CentralAuditLogAccessRecord) GetUserExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserExpr, true
}

// SetUserExpr sets field value
func (o *CentralAuditLogAccessRecord) SetUserExpr(v string) {
	o.UserExpr = v
}

// GetDbExpr returns the DbExpr field value
func (o *CentralAuditLogAccessRecord) GetDbExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DbExpr
}

// GetDbExprOk returns a tuple with the DbExpr field value
// and a boolean to check if the value has been set.
func (o *CentralAuditLogAccessRecord) GetDbExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DbExpr, true
}

// SetDbExpr sets field value
func (o *CentralAuditLogAccessRecord) SetDbExpr(v string) {
	o.DbExpr = v
}

// GetTableExpr returns the TableExpr field value
func (o *CentralAuditLogAccessRecord) GetTableExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TableExpr
}

// GetTableExprOk returns a tuple with the TableExpr field value
// and a boolean to check if the value has been set.
func (o *CentralAuditLogAccessRecord) GetTableExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TableExpr, true
}

// SetTableExpr sets field value
func (o *CentralAuditLogAccessRecord) SetTableExpr(v string) {
	o.TableExpr = v
}

// GetAccessTypeList returns the AccessTypeList field value
func (o *CentralAuditLogAccessRecord) GetAccessTypeList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AccessTypeList
}

// GetAccessTypeListOk returns a tuple with the AccessTypeList field value
// and a boolean to check if the value has been set.
func (o *CentralAuditLogAccessRecord) GetAccessTypeListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessTypeList, true
}

// SetAccessTypeList sets field value
func (o *CentralAuditLogAccessRecord) SetAccessTypeList(v []string) {
	o.AccessTypeList = v
}

func (o CentralAuditLogAccessRecord) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralAuditLogAccessRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["user_expr"] = o.UserExpr
	toSerialize["db_expr"] = o.DbExpr
	toSerialize["table_expr"] = o.TableExpr
	toSerialize["access_type_list"] = o.AccessTypeList
	return toSerialize, nil
}

func (o *CentralAuditLogAccessRecord) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"user_expr",
		"db_expr",
		"table_expr",
		"access_type_list",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralAuditLogAccessRecord := _CentralAuditLogAccessRecord{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralAuditLogAccessRecord)

	if err != nil {
		return err
	}

	*o = CentralAuditLogAccessRecord(varCentralAuditLogAccessRecord)

	return err
}

type NullableCentralAuditLogAccessRecord struct {
	value *CentralAuditLogAccessRecord
	isSet bool
}

func (v NullableCentralAuditLogAccessRecord) Get() *CentralAuditLogAccessRecord {
	return v.value
}

func (v *NullableCentralAuditLogAccessRecord) Set(val *CentralAuditLogAccessRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralAuditLogAccessRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralAuditLogAccessRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralAuditLogAccessRecord(val *CentralAuditLogAccessRecord) *NullableCentralAuditLogAccessRecord {
	return &NullableCentralAuditLogAccessRecord{value: val, isSet: true}
}

func (v NullableCentralAuditLogAccessRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralAuditLogAccessRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
