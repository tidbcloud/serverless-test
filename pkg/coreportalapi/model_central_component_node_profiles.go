/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CentralComponentNodeProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralComponentNodeProfiles{}

// CentralComponentNodeProfiles struct for CentralComponentNodeProfiles
type CentralComponentNodeProfiles struct {
	ComponentType      CentralComponentType        `json:"component_type"`
	Profiles           []CentralClusterNodeProfile `json:"profiles"`
	DefaultProfileName string                      `json:"default_profile_name"`
}

type _CentralComponentNodeProfiles CentralComponentNodeProfiles

// NewCentralComponentNodeProfiles instantiates a new CentralComponentNodeProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralComponentNodeProfiles(componentType CentralComponentType, profiles []CentralClusterNodeProfile, defaultProfileName string) *CentralComponentNodeProfiles {
	this := CentralComponentNodeProfiles{}
	this.ComponentType = componentType
	this.Profiles = profiles
	this.DefaultProfileName = defaultProfileName
	return &this
}

// NewCentralComponentNodeProfilesWithDefaults instantiates a new CentralComponentNodeProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralComponentNodeProfilesWithDefaults() *CentralComponentNodeProfiles {
	this := CentralComponentNodeProfiles{}
	var componentType CentralComponentType = CENTRALCOMPONENTTYPE_COMPONENT_TYPE_UNSPECIFIED
	this.ComponentType = componentType
	return &this
}

// GetComponentType returns the ComponentType field value
func (o *CentralComponentNodeProfiles) GetComponentType() CentralComponentType {
	if o == nil {
		var ret CentralComponentType
		return ret
	}

	return o.ComponentType
}

// GetComponentTypeOk returns a tuple with the ComponentType field value
// and a boolean to check if the value has been set.
func (o *CentralComponentNodeProfiles) GetComponentTypeOk() (*CentralComponentType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentType, true
}

// SetComponentType sets field value
func (o *CentralComponentNodeProfiles) SetComponentType(v CentralComponentType) {
	o.ComponentType = v
}

// GetProfiles returns the Profiles field value
func (o *CentralComponentNodeProfiles) GetProfiles() []CentralClusterNodeProfile {
	if o == nil {
		var ret []CentralClusterNodeProfile
		return ret
	}

	return o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value
// and a boolean to check if the value has been set.
func (o *CentralComponentNodeProfiles) GetProfilesOk() ([]CentralClusterNodeProfile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Profiles, true
}

// SetProfiles sets field value
func (o *CentralComponentNodeProfiles) SetProfiles(v []CentralClusterNodeProfile) {
	o.Profiles = v
}

// GetDefaultProfileName returns the DefaultProfileName field value
func (o *CentralComponentNodeProfiles) GetDefaultProfileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultProfileName
}

// GetDefaultProfileNameOk returns a tuple with the DefaultProfileName field value
// and a boolean to check if the value has been set.
func (o *CentralComponentNodeProfiles) GetDefaultProfileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultProfileName, true
}

// SetDefaultProfileName sets field value
func (o *CentralComponentNodeProfiles) SetDefaultProfileName(v string) {
	o.DefaultProfileName = v
}

func (o CentralComponentNodeProfiles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralComponentNodeProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["component_type"] = o.ComponentType
	toSerialize["profiles"] = o.Profiles
	toSerialize["default_profile_name"] = o.DefaultProfileName
	return toSerialize, nil
}

func (o *CentralComponentNodeProfiles) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component_type",
		"profiles",
		"default_profile_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralComponentNodeProfiles := _CentralComponentNodeProfiles{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralComponentNodeProfiles)

	if err != nil {
		return err
	}

	*o = CentralComponentNodeProfiles(varCentralComponentNodeProfiles)

	return err
}

type NullableCentralComponentNodeProfiles struct {
	value *CentralComponentNodeProfiles
	isSet bool
}

func (v NullableCentralComponentNodeProfiles) Get() *CentralComponentNodeProfiles {
	return v.value
}

func (v *NullableCentralComponentNodeProfiles) Set(val *CentralComponentNodeProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralComponentNodeProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralComponentNodeProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralComponentNodeProfiles(val *CentralComponentNodeProfiles) *NullableCentralComponentNodeProfiles {
	return &NullableCentralComponentNodeProfiles{value: val, isSet: true}
}

func (v NullableCentralComponentNodeProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralComponentNodeProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
