/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralMaintenanceWindow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralMaintenanceWindow{}

// CentralMaintenanceWindow struct for CentralMaintenanceWindow
type CentralMaintenanceWindow struct {
	DayOfWeek    *int32 `json:"day_of_week,omitempty"`
	HourOfDay    *int32 `json:"hour_of_day,omitempty"`
	MinuteOfHour *int32 `json:"minute_of_hour,omitempty"`
}

// NewCentralMaintenanceWindow instantiates a new CentralMaintenanceWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralMaintenanceWindow() *CentralMaintenanceWindow {
	this := CentralMaintenanceWindow{}
	return &this
}

// NewCentralMaintenanceWindowWithDefaults instantiates a new CentralMaintenanceWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralMaintenanceWindowWithDefaults() *CentralMaintenanceWindow {
	this := CentralMaintenanceWindow{}
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *CentralMaintenanceWindow) GetDayOfWeek() int32 {
	if o == nil || IsNil(o.DayOfWeek) {
		var ret int32
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceWindow) GetDayOfWeekOk() (*int32, bool) {
	if o == nil || IsNil(o.DayOfWeek) {
		return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *CentralMaintenanceWindow) HasDayOfWeek() bool {
	if o != nil && !IsNil(o.DayOfWeek) {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given int32 and assigns it to the DayOfWeek field.
func (o *CentralMaintenanceWindow) SetDayOfWeek(v int32) {
	o.DayOfWeek = &v
}

// GetHourOfDay returns the HourOfDay field value if set, zero value otherwise.
func (o *CentralMaintenanceWindow) GetHourOfDay() int32 {
	if o == nil || IsNil(o.HourOfDay) {
		var ret int32
		return ret
	}
	return *o.HourOfDay
}

// GetHourOfDayOk returns a tuple with the HourOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceWindow) GetHourOfDayOk() (*int32, bool) {
	if o == nil || IsNil(o.HourOfDay) {
		return nil, false
	}
	return o.HourOfDay, true
}

// HasHourOfDay returns a boolean if a field has been set.
func (o *CentralMaintenanceWindow) HasHourOfDay() bool {
	if o != nil && !IsNil(o.HourOfDay) {
		return true
	}

	return false
}

// SetHourOfDay gets a reference to the given int32 and assigns it to the HourOfDay field.
func (o *CentralMaintenanceWindow) SetHourOfDay(v int32) {
	o.HourOfDay = &v
}

// GetMinuteOfHour returns the MinuteOfHour field value if set, zero value otherwise.
func (o *CentralMaintenanceWindow) GetMinuteOfHour() int32 {
	if o == nil || IsNil(o.MinuteOfHour) {
		var ret int32
		return ret
	}
	return *o.MinuteOfHour
}

// GetMinuteOfHourOk returns a tuple with the MinuteOfHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceWindow) GetMinuteOfHourOk() (*int32, bool) {
	if o == nil || IsNil(o.MinuteOfHour) {
		return nil, false
	}
	return o.MinuteOfHour, true
}

// HasMinuteOfHour returns a boolean if a field has been set.
func (o *CentralMaintenanceWindow) HasMinuteOfHour() bool {
	if o != nil && !IsNil(o.MinuteOfHour) {
		return true
	}

	return false
}

// SetMinuteOfHour gets a reference to the given int32 and assigns it to the MinuteOfHour field.
func (o *CentralMaintenanceWindow) SetMinuteOfHour(v int32) {
	o.MinuteOfHour = &v
}

func (o CentralMaintenanceWindow) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralMaintenanceWindow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DayOfWeek) {
		toSerialize["day_of_week"] = o.DayOfWeek
	}
	if !IsNil(o.HourOfDay) {
		toSerialize["hour_of_day"] = o.HourOfDay
	}
	if !IsNil(o.MinuteOfHour) {
		toSerialize["minute_of_hour"] = o.MinuteOfHour
	}
	return toSerialize, nil
}

type NullableCentralMaintenanceWindow struct {
	value *CentralMaintenanceWindow
	isSet bool
}

func (v NullableCentralMaintenanceWindow) Get() *CentralMaintenanceWindow {
	return v.value
}

func (v *NullableCentralMaintenanceWindow) Set(val *CentralMaintenanceWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralMaintenanceWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralMaintenanceWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralMaintenanceWindow(val *CentralMaintenanceWindow) *NullableCentralMaintenanceWindow {
	return &NullableCentralMaintenanceWindow{value: val, isSet: true}
}

func (v NullableCentralMaintenanceWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralMaintenanceWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
