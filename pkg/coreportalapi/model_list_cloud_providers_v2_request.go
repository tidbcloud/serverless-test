/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ListCloudProvidersV2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCloudProvidersV2Request{}

// ListCloudProvidersV2Request struct for ListCloudProvidersV2Request
type ListCloudProvidersV2Request struct {
	IsDevTier bool `json:"is_dev_tier"`
}

type _ListCloudProvidersV2Request ListCloudProvidersV2Request

// NewListCloudProvidersV2Request instantiates a new ListCloudProvidersV2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCloudProvidersV2Request(isDevTier bool) *ListCloudProvidersV2Request {
	this := ListCloudProvidersV2Request{}
	this.IsDevTier = isDevTier
	return &this
}

// NewListCloudProvidersV2RequestWithDefaults instantiates a new ListCloudProvidersV2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCloudProvidersV2RequestWithDefaults() *ListCloudProvidersV2Request {
	this := ListCloudProvidersV2Request{}
	return &this
}

// GetIsDevTier returns the IsDevTier field value
func (o *ListCloudProvidersV2Request) GetIsDevTier() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDevTier
}

// GetIsDevTierOk returns a tuple with the IsDevTier field value
// and a boolean to check if the value has been set.
func (o *ListCloudProvidersV2Request) GetIsDevTierOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDevTier, true
}

// SetIsDevTier sets field value
func (o *ListCloudProvidersV2Request) SetIsDevTier(v bool) {
	o.IsDevTier = v
}

func (o ListCloudProvidersV2Request) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCloudProvidersV2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_dev_tier"] = o.IsDevTier
	return toSerialize, nil
}

func (o *ListCloudProvidersV2Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_dev_tier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListCloudProvidersV2Request := _ListCloudProvidersV2Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListCloudProvidersV2Request)

	if err != nil {
		return err
	}

	*o = ListCloudProvidersV2Request(varListCloudProvidersV2Request)

	return err
}

type NullableListCloudProvidersV2Request struct {
	value *ListCloudProvidersV2Request
	isSet bool
}

func (v NullableListCloudProvidersV2Request) Get() *ListCloudProvidersV2Request {
	return v.value
}

func (v *NullableListCloudProvidersV2Request) Set(val *ListCloudProvidersV2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableListCloudProvidersV2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableListCloudProvidersV2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCloudProvidersV2Request(val *ListCloudProvidersV2Request) *NullableListCloudProvidersV2Request {
	return &NullableListCloudProvidersV2Request{value: val, isSet: true}
}

func (v NullableListCloudProvidersV2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCloudProvidersV2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
