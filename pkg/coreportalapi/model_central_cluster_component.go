/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CentralClusterComponent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralClusterComponent{}

// CentralClusterComponent struct for CentralClusterComponent
type CentralClusterComponent struct {
	ComponentType CentralComponentType `json:"component_type"`
	// required when creating/updating a cluster
	NodeProfileName string `json:"node_profile_name"`
	Replicas        int32  `json:"replicas"`
	StorageSizeGi   int32  `json:"storage_size_gi"`
}

type _CentralClusterComponent CentralClusterComponent

// NewCentralClusterComponent instantiates a new CentralClusterComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralClusterComponent(componentType CentralComponentType, nodeProfileName string, replicas int32, storageSizeGi int32) *CentralClusterComponent {
	this := CentralClusterComponent{}
	this.ComponentType = componentType
	this.NodeProfileName = nodeProfileName
	this.Replicas = replicas
	this.StorageSizeGi = storageSizeGi
	return &this
}

// NewCentralClusterComponentWithDefaults instantiates a new CentralClusterComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralClusterComponentWithDefaults() *CentralClusterComponent {
	this := CentralClusterComponent{}
	var componentType CentralComponentType = CENTRALCOMPONENTTYPE_COMPONENT_TYPE_UNSPECIFIED
	this.ComponentType = componentType
	return &this
}

// GetComponentType returns the ComponentType field value
func (o *CentralClusterComponent) GetComponentType() CentralComponentType {
	if o == nil {
		var ret CentralComponentType
		return ret
	}

	return o.ComponentType
}

// GetComponentTypeOk returns a tuple with the ComponentType field value
// and a boolean to check if the value has been set.
func (o *CentralClusterComponent) GetComponentTypeOk() (*CentralComponentType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentType, true
}

// SetComponentType sets field value
func (o *CentralClusterComponent) SetComponentType(v CentralComponentType) {
	o.ComponentType = v
}

// GetNodeProfileName returns the NodeProfileName field value
func (o *CentralClusterComponent) GetNodeProfileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeProfileName
}

// GetNodeProfileNameOk returns a tuple with the NodeProfileName field value
// and a boolean to check if the value has been set.
func (o *CentralClusterComponent) GetNodeProfileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeProfileName, true
}

// SetNodeProfileName sets field value
func (o *CentralClusterComponent) SetNodeProfileName(v string) {
	o.NodeProfileName = v
}

// GetReplicas returns the Replicas field value
func (o *CentralClusterComponent) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *CentralClusterComponent) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *CentralClusterComponent) SetReplicas(v int32) {
	o.Replicas = v
}

// GetStorageSizeGi returns the StorageSizeGi field value
func (o *CentralClusterComponent) GetStorageSizeGi() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageSizeGi
}

// GetStorageSizeGiOk returns a tuple with the StorageSizeGi field value
// and a boolean to check if the value has been set.
func (o *CentralClusterComponent) GetStorageSizeGiOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageSizeGi, true
}

// SetStorageSizeGi sets field value
func (o *CentralClusterComponent) SetStorageSizeGi(v int32) {
	o.StorageSizeGi = v
}

func (o CentralClusterComponent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralClusterComponent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["component_type"] = o.ComponentType
	toSerialize["node_profile_name"] = o.NodeProfileName
	toSerialize["replicas"] = o.Replicas
	toSerialize["storage_size_gi"] = o.StorageSizeGi
	return toSerialize, nil
}

func (o *CentralClusterComponent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component_type",
		"node_profile_name",
		"replicas",
		"storage_size_gi",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralClusterComponent := _CentralClusterComponent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralClusterComponent)

	if err != nil {
		return err
	}

	*o = CentralClusterComponent(varCentralClusterComponent)

	return err
}

type NullableCentralClusterComponent struct {
	value *CentralClusterComponent
	isSet bool
}

func (v NullableCentralClusterComponent) Get() *CentralClusterComponent {
	return v.value
}

func (v *NullableCentralClusterComponent) Set(val *CentralClusterComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralClusterComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralClusterComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralClusterComponent(val *CentralClusterComponent) *NullableCentralClusterComponent {
	return &NullableCentralClusterComponent{value: val, isSet: true}
}

func (v NullableCentralClusterComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralClusterComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
