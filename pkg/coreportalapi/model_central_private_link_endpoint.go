/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralPrivateLinkEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralPrivateLinkEndpoint{}

// CentralPrivateLinkEndpoint struct for CentralPrivateLinkEndpoint
type CentralPrivateLinkEndpoint struct {
	CloudProvider *string                           `json:"cloud_provider,omitempty"`
	ClusterId     *string                           `json:"cluster_id,omitempty"`
	ClusterName   *string                           `json:"cluster_name,omitempty"`
	RegionName    *string                           `json:"region_name,omitempty"`
	EndpointId    *string                           `json:"endpoint_id,omitempty"`
	Status        *CentralPrivateLinkEndpointStatus `json:"status,omitempty"`
	Message       *string                           `json:"message,omitempty"`
	ServiceName   *string                           `json:"service_name,omitempty"`
	ServiceStatus *CentralPrivateLinkServiceStatus  `json:"service_status,omitempty"`
	ClusterStatus *CentralClusterStatus             `json:"cluster_status,omitempty"`
	Id            *string                           `json:"id,omitempty"`
	EndpointName  *string                           `json:"endpoint_name,omitempty"`
}

// NewCentralPrivateLinkEndpoint instantiates a new CentralPrivateLinkEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralPrivateLinkEndpoint() *CentralPrivateLinkEndpoint {
	this := CentralPrivateLinkEndpoint{}
	var status CentralPrivateLinkEndpointStatus = CENTRALPRIVATELINKENDPOINTSTATUS_NOT_CONFIGURE
	this.Status = &status
	var serviceStatus CentralPrivateLinkServiceStatus = CENTRALPRIVATELINKSERVICESTATUS_NOT_CONFIGURE
	this.ServiceStatus = &serviceStatus
	var clusterStatus CentralClusterStatus = CENTRALCLUSTERSTATUS_NORMAL
	this.ClusterStatus = &clusterStatus
	return &this
}

// NewCentralPrivateLinkEndpointWithDefaults instantiates a new CentralPrivateLinkEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralPrivateLinkEndpointWithDefaults() *CentralPrivateLinkEndpoint {
	this := CentralPrivateLinkEndpoint{}
	var status CentralPrivateLinkEndpointStatus = CENTRALPRIVATELINKENDPOINTSTATUS_NOT_CONFIGURE
	this.Status = &status
	var serviceStatus CentralPrivateLinkServiceStatus = CENTRALPRIVATELINKSERVICESTATUS_NOT_CONFIGURE
	this.ServiceStatus = &serviceStatus
	var clusterStatus CentralClusterStatus = CENTRALCLUSTERSTATUS_NORMAL
	this.ClusterStatus = &clusterStatus
	return &this
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *CentralPrivateLinkEndpoint) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *CentralPrivateLinkEndpoint) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *CentralPrivateLinkEndpoint) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetRegionName() string {
	if o == nil || IsNil(o.RegionName) {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetRegionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegionName) {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasRegionName() bool {
	if o != nil && !IsNil(o.RegionName) {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *CentralPrivateLinkEndpoint) SetRegionName(v string) {
	o.RegionName = &v
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetEndpointId() string {
	if o == nil || IsNil(o.EndpointId) {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetEndpointIdOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointId) {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasEndpointId() bool {
	if o != nil && !IsNil(o.EndpointId) {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *CentralPrivateLinkEndpoint) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetStatus() CentralPrivateLinkEndpointStatus {
	if o == nil || IsNil(o.Status) {
		var ret CentralPrivateLinkEndpointStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetStatusOk() (*CentralPrivateLinkEndpointStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CentralPrivateLinkEndpointStatus and assigns it to the Status field.
func (o *CentralPrivateLinkEndpoint) SetStatus(v CentralPrivateLinkEndpointStatus) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CentralPrivateLinkEndpoint) SetMessage(v string) {
	o.Message = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *CentralPrivateLinkEndpoint) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetServiceStatus returns the ServiceStatus field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetServiceStatus() CentralPrivateLinkServiceStatus {
	if o == nil || IsNil(o.ServiceStatus) {
		var ret CentralPrivateLinkServiceStatus
		return ret
	}
	return *o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetServiceStatusOk() (*CentralPrivateLinkServiceStatus, bool) {
	if o == nil || IsNil(o.ServiceStatus) {
		return nil, false
	}
	return o.ServiceStatus, true
}

// HasServiceStatus returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasServiceStatus() bool {
	if o != nil && !IsNil(o.ServiceStatus) {
		return true
	}

	return false
}

// SetServiceStatus gets a reference to the given CentralPrivateLinkServiceStatus and assigns it to the ServiceStatus field.
func (o *CentralPrivateLinkEndpoint) SetServiceStatus(v CentralPrivateLinkServiceStatus) {
	o.ServiceStatus = &v
}

// GetClusterStatus returns the ClusterStatus field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetClusterStatus() CentralClusterStatus {
	if o == nil || IsNil(o.ClusterStatus) {
		var ret CentralClusterStatus
		return ret
	}
	return *o.ClusterStatus
}

// GetClusterStatusOk returns a tuple with the ClusterStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetClusterStatusOk() (*CentralClusterStatus, bool) {
	if o == nil || IsNil(o.ClusterStatus) {
		return nil, false
	}
	return o.ClusterStatus, true
}

// HasClusterStatus returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasClusterStatus() bool {
	if o != nil && !IsNil(o.ClusterStatus) {
		return true
	}

	return false
}

// SetClusterStatus gets a reference to the given CentralClusterStatus and assigns it to the ClusterStatus field.
func (o *CentralPrivateLinkEndpoint) SetClusterStatus(v CentralClusterStatus) {
	o.ClusterStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CentralPrivateLinkEndpoint) SetId(v string) {
	o.Id = &v
}

// GetEndpointName returns the EndpointName field value if set, zero value otherwise.
func (o *CentralPrivateLinkEndpoint) GetEndpointName() string {
	if o == nil || IsNil(o.EndpointName) {
		var ret string
		return ret
	}
	return *o.EndpointName
}

// GetEndpointNameOk returns a tuple with the EndpointName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkEndpoint) GetEndpointNameOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointName) {
		return nil, false
	}
	return o.EndpointName, true
}

// HasEndpointName returns a boolean if a field has been set.
func (o *CentralPrivateLinkEndpoint) HasEndpointName() bool {
	if o != nil && !IsNil(o.EndpointName) {
		return true
	}

	return false
}

// SetEndpointName gets a reference to the given string and assigns it to the EndpointName field.
func (o *CentralPrivateLinkEndpoint) SetEndpointName(v string) {
	o.EndpointName = &v
}

func (o CentralPrivateLinkEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralPrivateLinkEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !IsNil(o.RegionName) {
		toSerialize["region_name"] = o.RegionName
	}
	if !IsNil(o.EndpointId) {
		toSerialize["endpoint_id"] = o.EndpointId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ServiceName) {
		toSerialize["service_name"] = o.ServiceName
	}
	if !IsNil(o.ServiceStatus) {
		toSerialize["service_status"] = o.ServiceStatus
	}
	if !IsNil(o.ClusterStatus) {
		toSerialize["cluster_status"] = o.ClusterStatus
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.EndpointName) {
		toSerialize["endpoint_name"] = o.EndpointName
	}
	return toSerialize, nil
}

type NullableCentralPrivateLinkEndpoint struct {
	value *CentralPrivateLinkEndpoint
	isSet bool
}

func (v NullableCentralPrivateLinkEndpoint) Get() *CentralPrivateLinkEndpoint {
	return v.value
}

func (v *NullableCentralPrivateLinkEndpoint) Set(val *CentralPrivateLinkEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralPrivateLinkEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralPrivateLinkEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralPrivateLinkEndpoint(val *CentralPrivateLinkEndpoint) *NullableCentralPrivateLinkEndpoint {
	return &NullableCentralPrivateLinkEndpoint{value: val, isSet: true}
}

func (v NullableCentralPrivateLinkEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralPrivateLinkEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
