/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralPrivateLinkService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralPrivateLinkService{}

// CentralPrivateLinkService struct for CentralPrivateLinkService
type CentralPrivateLinkService struct {
	CloudProvider *string                          `json:"cloud_provider,omitempty"`
	Name          *string                          `json:"name,omitempty"`
	Status        *CentralPrivateLinkServiceStatus `json:"status,omitempty"`
	DnsName       *string                          `json:"dns_name,omitempty"`
	Port          *int32                           `json:"port,omitempty"`
	AzIds         []string                         `json:"az_ids,omitempty"`
}

// NewCentralPrivateLinkService instantiates a new CentralPrivateLinkService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralPrivateLinkService() *CentralPrivateLinkService {
	this := CentralPrivateLinkService{}
	var status CentralPrivateLinkServiceStatus = CENTRALPRIVATELINKSERVICESTATUS_NOT_CONFIGURE
	this.Status = &status
	return &this
}

// NewCentralPrivateLinkServiceWithDefaults instantiates a new CentralPrivateLinkService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralPrivateLinkServiceWithDefaults() *CentralPrivateLinkService {
	this := CentralPrivateLinkService{}
	var status CentralPrivateLinkServiceStatus = CENTRALPRIVATELINKSERVICESTATUS_NOT_CONFIGURE
	this.Status = &status
	return &this
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *CentralPrivateLinkService) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkService) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *CentralPrivateLinkService) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *CentralPrivateLinkService) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CentralPrivateLinkService) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkService) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CentralPrivateLinkService) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CentralPrivateLinkService) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CentralPrivateLinkService) GetStatus() CentralPrivateLinkServiceStatus {
	if o == nil || IsNil(o.Status) {
		var ret CentralPrivateLinkServiceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkService) GetStatusOk() (*CentralPrivateLinkServiceStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CentralPrivateLinkService) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CentralPrivateLinkServiceStatus and assigns it to the Status field.
func (o *CentralPrivateLinkService) SetStatus(v CentralPrivateLinkServiceStatus) {
	o.Status = &v
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *CentralPrivateLinkService) GetDnsName() string {
	if o == nil || IsNil(o.DnsName) {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkService) GetDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.DnsName) {
		return nil, false
	}
	return o.DnsName, true
}

// HasDnsName returns a boolean if a field has been set.
func (o *CentralPrivateLinkService) HasDnsName() bool {
	if o != nil && !IsNil(o.DnsName) {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *CentralPrivateLinkService) SetDnsName(v string) {
	o.DnsName = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CentralPrivateLinkService) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkService) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CentralPrivateLinkService) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *CentralPrivateLinkService) SetPort(v int32) {
	o.Port = &v
}

// GetAzIds returns the AzIds field value if set, zero value otherwise.
func (o *CentralPrivateLinkService) GetAzIds() []string {
	if o == nil || IsNil(o.AzIds) {
		var ret []string
		return ret
	}
	return o.AzIds
}

// GetAzIdsOk returns a tuple with the AzIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrivateLinkService) GetAzIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AzIds) {
		return nil, false
	}
	return o.AzIds, true
}

// HasAzIds returns a boolean if a field has been set.
func (o *CentralPrivateLinkService) HasAzIds() bool {
	if o != nil && !IsNil(o.AzIds) {
		return true
	}

	return false
}

// SetAzIds gets a reference to the given []string and assigns it to the AzIds field.
func (o *CentralPrivateLinkService) SetAzIds(v []string) {
	o.AzIds = v
}

func (o CentralPrivateLinkService) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralPrivateLinkService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.DnsName) {
		toSerialize["dns_name"] = o.DnsName
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.AzIds) {
		toSerialize["az_ids"] = o.AzIds
	}
	return toSerialize, nil
}

type NullableCentralPrivateLinkService struct {
	value *CentralPrivateLinkService
	isSet bool
}

func (v NullableCentralPrivateLinkService) Get() *CentralPrivateLinkService {
	return v.value
}

func (v *NullableCentralPrivateLinkService) Set(val *CentralPrivateLinkService) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralPrivateLinkService) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralPrivateLinkService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralPrivateLinkService(val *CentralPrivateLinkService) *NullableCentralPrivateLinkService {
	return &NullableCentralPrivateLinkService{value: val, isSet: true}
}

func (v NullableCentralPrivateLinkService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralPrivateLinkService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
