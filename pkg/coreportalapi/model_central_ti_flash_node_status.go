/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
	"fmt"
)

// CentralTiFlashNodeStatus the model 'CentralTiFlashNodeStatus'
type CentralTiFlashNodeStatus string

// List of centralTiFlashNodeStatus
const (
	CENTRALTIFLASHNODESTATUS_AVAILABLE   CentralTiFlashNodeStatus = "AVAILABLE"
	CENTRALTIFLASHNODESTATUS_CREATING    CentralTiFlashNodeStatus = "CREATING"
	CENTRALTIFLASHNODESTATUS_UNAVAILABLE CentralTiFlashNodeStatus = "UNAVAILABLE"
	CENTRALTIFLASHNODESTATUS_DELETING    CentralTiFlashNodeStatus = "DELETING"
)

// All allowed values of CentralTiFlashNodeStatus enum
var AllowedCentralTiFlashNodeStatusEnumValues = []CentralTiFlashNodeStatus{
	"AVAILABLE",
	"CREATING",
	"UNAVAILABLE",
	"DELETING",
}

func (v *CentralTiFlashNodeStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CentralTiFlashNodeStatus(value)
	for _, existing := range AllowedCentralTiFlashNodeStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CentralTiFlashNodeStatus", value)
}

// NewCentralTiFlashNodeStatusFromValue returns a pointer to a valid CentralTiFlashNodeStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCentralTiFlashNodeStatusFromValue(v string) (*CentralTiFlashNodeStatus, error) {
	ev := CentralTiFlashNodeStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CentralTiFlashNodeStatus: valid values are %v", v, AllowedCentralTiFlashNodeStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CentralTiFlashNodeStatus) IsValid() bool {
	for _, existing := range AllowedCentralTiFlashNodeStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to centralTiFlashNodeStatus value
func (v CentralTiFlashNodeStatus) Ptr() *CentralTiFlashNodeStatus {
	return &v
}

type NullableCentralTiFlashNodeStatus struct {
	value *CentralTiFlashNodeStatus
	isSet bool
}

func (v NullableCentralTiFlashNodeStatus) Get() *CentralTiFlashNodeStatus {
	return v.value
}

func (v *NullableCentralTiFlashNodeStatus) Set(val *CentralTiFlashNodeStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralTiFlashNodeStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralTiFlashNodeStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralTiFlashNodeStatus(val *CentralTiFlashNodeStatus) *NullableCentralTiFlashNodeStatus {
	return &NullableCentralTiFlashNodeStatus{value: val, isSet: true}
}

func (v NullableCentralTiFlashNodeStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralTiFlashNodeStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
