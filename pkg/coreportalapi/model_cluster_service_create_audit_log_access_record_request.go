/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ClusterServiceCreateAuditLogAccessRecordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterServiceCreateAuditLogAccessRecordRequest{}

// ClusterServiceCreateAuditLogAccessRecordRequest struct for ClusterServiceCreateAuditLogAccessRecordRequest
type ClusterServiceCreateAuditLogAccessRecordRequest struct {
	Record CentralAuditLogAccessRecord `json:"record"`
}

type _ClusterServiceCreateAuditLogAccessRecordRequest ClusterServiceCreateAuditLogAccessRecordRequest

// NewClusterServiceCreateAuditLogAccessRecordRequest instantiates a new ClusterServiceCreateAuditLogAccessRecordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterServiceCreateAuditLogAccessRecordRequest(record CentralAuditLogAccessRecord) *ClusterServiceCreateAuditLogAccessRecordRequest {
	this := ClusterServiceCreateAuditLogAccessRecordRequest{}
	this.Record = record
	return &this
}

// NewClusterServiceCreateAuditLogAccessRecordRequestWithDefaults instantiates a new ClusterServiceCreateAuditLogAccessRecordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterServiceCreateAuditLogAccessRecordRequestWithDefaults() *ClusterServiceCreateAuditLogAccessRecordRequest {
	this := ClusterServiceCreateAuditLogAccessRecordRequest{}
	return &this
}

// GetRecord returns the Record field value
func (o *ClusterServiceCreateAuditLogAccessRecordRequest) GetRecord() CentralAuditLogAccessRecord {
	if o == nil {
		var ret CentralAuditLogAccessRecord
		return ret
	}

	return o.Record
}

// GetRecordOk returns a tuple with the Record field value
// and a boolean to check if the value has been set.
func (o *ClusterServiceCreateAuditLogAccessRecordRequest) GetRecordOk() (*CentralAuditLogAccessRecord, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Record, true
}

// SetRecord sets field value
func (o *ClusterServiceCreateAuditLogAccessRecordRequest) SetRecord(v CentralAuditLogAccessRecord) {
	o.Record = v
}

func (o ClusterServiceCreateAuditLogAccessRecordRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterServiceCreateAuditLogAccessRecordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["record"] = o.Record
	return toSerialize, nil
}

func (o *ClusterServiceCreateAuditLogAccessRecordRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"record",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterServiceCreateAuditLogAccessRecordRequest := _ClusterServiceCreateAuditLogAccessRecordRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterServiceCreateAuditLogAccessRecordRequest)

	if err != nil {
		return err
	}

	*o = ClusterServiceCreateAuditLogAccessRecordRequest(varClusterServiceCreateAuditLogAccessRecordRequest)

	return err
}

type NullableClusterServiceCreateAuditLogAccessRecordRequest struct {
	value *ClusterServiceCreateAuditLogAccessRecordRequest
	isSet bool
}

func (v NullableClusterServiceCreateAuditLogAccessRecordRequest) Get() *ClusterServiceCreateAuditLogAccessRecordRequest {
	return v.value
}

func (v *NullableClusterServiceCreateAuditLogAccessRecordRequest) Set(val *ClusterServiceCreateAuditLogAccessRecordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterServiceCreateAuditLogAccessRecordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterServiceCreateAuditLogAccessRecordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterServiceCreateAuditLogAccessRecordRequest(val *ClusterServiceCreateAuditLogAccessRecordRequest) *NullableClusterServiceCreateAuditLogAccessRecordRequest {
	return &NullableClusterServiceCreateAuditLogAccessRecordRequest{value: val, isSet: true}
}

func (v NullableClusterServiceCreateAuditLogAccessRecordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterServiceCreateAuditLogAccessRecordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
