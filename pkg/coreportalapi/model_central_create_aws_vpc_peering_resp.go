/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CentralCreateAWSVpcPeeringResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralCreateAWSVpcPeeringResp{}

// CentralCreateAWSVpcPeeringResp struct for CentralCreateAWSVpcPeeringResp
type CentralCreateAWSVpcPeeringResp struct {
	VpcPeeringId    string           `json:"vpc_peering_id"`
	VpcCidr         string           `json:"vpc_cidr"`
	PrivateHostZone string           `json:"private_host_zone"`
	Region          string           `json:"region"`
	Id              string           `json:"id"`
	BaseResp        *CentralBaseResp `json:"base_resp,omitempty"`
}

type _CentralCreateAWSVpcPeeringResp CentralCreateAWSVpcPeeringResp

// NewCentralCreateAWSVpcPeeringResp instantiates a new CentralCreateAWSVpcPeeringResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralCreateAWSVpcPeeringResp(vpcPeeringId string, vpcCidr string, privateHostZone string, region string, id string) *CentralCreateAWSVpcPeeringResp {
	this := CentralCreateAWSVpcPeeringResp{}
	this.VpcPeeringId = vpcPeeringId
	this.VpcCidr = vpcCidr
	this.PrivateHostZone = privateHostZone
	this.Region = region
	this.Id = id
	return &this
}

// NewCentralCreateAWSVpcPeeringRespWithDefaults instantiates a new CentralCreateAWSVpcPeeringResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralCreateAWSVpcPeeringRespWithDefaults() *CentralCreateAWSVpcPeeringResp {
	this := CentralCreateAWSVpcPeeringResp{}
	return &this
}

// GetVpcPeeringId returns the VpcPeeringId field value
func (o *CentralCreateAWSVpcPeeringResp) GetVpcPeeringId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcPeeringId
}

// GetVpcPeeringIdOk returns a tuple with the VpcPeeringId field value
// and a boolean to check if the value has been set.
func (o *CentralCreateAWSVpcPeeringResp) GetVpcPeeringIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcPeeringId, true
}

// SetVpcPeeringId sets field value
func (o *CentralCreateAWSVpcPeeringResp) SetVpcPeeringId(v string) {
	o.VpcPeeringId = v
}

// GetVpcCidr returns the VpcCidr field value
func (o *CentralCreateAWSVpcPeeringResp) GetVpcCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcCidr
}

// GetVpcCidrOk returns a tuple with the VpcCidr field value
// and a boolean to check if the value has been set.
func (o *CentralCreateAWSVpcPeeringResp) GetVpcCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcCidr, true
}

// SetVpcCidr sets field value
func (o *CentralCreateAWSVpcPeeringResp) SetVpcCidr(v string) {
	o.VpcCidr = v
}

// GetPrivateHostZone returns the PrivateHostZone field value
func (o *CentralCreateAWSVpcPeeringResp) GetPrivateHostZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateHostZone
}

// GetPrivateHostZoneOk returns a tuple with the PrivateHostZone field value
// and a boolean to check if the value has been set.
func (o *CentralCreateAWSVpcPeeringResp) GetPrivateHostZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateHostZone, true
}

// SetPrivateHostZone sets field value
func (o *CentralCreateAWSVpcPeeringResp) SetPrivateHostZone(v string) {
	o.PrivateHostZone = v
}

// GetRegion returns the Region field value
func (o *CentralCreateAWSVpcPeeringResp) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CentralCreateAWSVpcPeeringResp) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CentralCreateAWSVpcPeeringResp) SetRegion(v string) {
	o.Region = v
}

// GetId returns the Id field value
func (o *CentralCreateAWSVpcPeeringResp) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CentralCreateAWSVpcPeeringResp) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CentralCreateAWSVpcPeeringResp) SetId(v string) {
	o.Id = v
}

// GetBaseResp returns the BaseResp field value if set, zero value otherwise.
func (o *CentralCreateAWSVpcPeeringResp) GetBaseResp() CentralBaseResp {
	if o == nil || IsNil(o.BaseResp) {
		var ret CentralBaseResp
		return ret
	}
	return *o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCreateAWSVpcPeeringResp) GetBaseRespOk() (*CentralBaseResp, bool) {
	if o == nil || IsNil(o.BaseResp) {
		return nil, false
	}
	return o.BaseResp, true
}

// HasBaseResp returns a boolean if a field has been set.
func (o *CentralCreateAWSVpcPeeringResp) HasBaseResp() bool {
	if o != nil && !IsNil(o.BaseResp) {
		return true
	}

	return false
}

// SetBaseResp gets a reference to the given CentralBaseResp and assigns it to the BaseResp field.
func (o *CentralCreateAWSVpcPeeringResp) SetBaseResp(v CentralBaseResp) {
	o.BaseResp = &v
}

func (o CentralCreateAWSVpcPeeringResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralCreateAWSVpcPeeringResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vpc_peering_id"] = o.VpcPeeringId
	toSerialize["vpc_cidr"] = o.VpcCidr
	toSerialize["private_host_zone"] = o.PrivateHostZone
	toSerialize["region"] = o.Region
	toSerialize["id"] = o.Id
	if !IsNil(o.BaseResp) {
		toSerialize["base_resp"] = o.BaseResp
	}
	return toSerialize, nil
}

func (o *CentralCreateAWSVpcPeeringResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vpc_peering_id",
		"vpc_cidr",
		"private_host_zone",
		"region",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralCreateAWSVpcPeeringResp := _CentralCreateAWSVpcPeeringResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralCreateAWSVpcPeeringResp)

	if err != nil {
		return err
	}

	*o = CentralCreateAWSVpcPeeringResp(varCentralCreateAWSVpcPeeringResp)

	return err
}

type NullableCentralCreateAWSVpcPeeringResp struct {
	value *CentralCreateAWSVpcPeeringResp
	isSet bool
}

func (v NullableCentralCreateAWSVpcPeeringResp) Get() *CentralCreateAWSVpcPeeringResp {
	return v.value
}

func (v *NullableCentralCreateAWSVpcPeeringResp) Set(val *CentralCreateAWSVpcPeeringResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralCreateAWSVpcPeeringResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralCreateAWSVpcPeeringResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralCreateAWSVpcPeeringResp(val *CentralCreateAWSVpcPeeringResp) *NullableCentralCreateAWSVpcPeeringResp {
	return &NullableCentralCreateAWSVpcPeeringResp{value: val, isSet: true}
}

func (v NullableCentralCreateAWSVpcPeeringResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralCreateAWSVpcPeeringResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
