/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralGenerateTestTokenResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralGenerateTestTokenResp{}

// CentralGenerateTestTokenResp struct for CentralGenerateTestTokenResp
type CentralGenerateTestTokenResp struct {
	Token    *string `json:"token,omitempty"`
	ExpireAt *string `json:"expire_at,omitempty"`
}

// NewCentralGenerateTestTokenResp instantiates a new CentralGenerateTestTokenResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralGenerateTestTokenResp() *CentralGenerateTestTokenResp {
	this := CentralGenerateTestTokenResp{}
	return &this
}

// NewCentralGenerateTestTokenRespWithDefaults instantiates a new CentralGenerateTestTokenResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralGenerateTestTokenRespWithDefaults() *CentralGenerateTestTokenResp {
	this := CentralGenerateTestTokenResp{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CentralGenerateTestTokenResp) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralGenerateTestTokenResp) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CentralGenerateTestTokenResp) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CentralGenerateTestTokenResp) SetToken(v string) {
	o.Token = &v
}

// GetExpireAt returns the ExpireAt field value if set, zero value otherwise.
func (o *CentralGenerateTestTokenResp) GetExpireAt() string {
	if o == nil || IsNil(o.ExpireAt) {
		var ret string
		return ret
	}
	return *o.ExpireAt
}

// GetExpireAtOk returns a tuple with the ExpireAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralGenerateTestTokenResp) GetExpireAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireAt) {
		return nil, false
	}
	return o.ExpireAt, true
}

// HasExpireAt returns a boolean if a field has been set.
func (o *CentralGenerateTestTokenResp) HasExpireAt() bool {
	if o != nil && !IsNil(o.ExpireAt) {
		return true
	}

	return false
}

// SetExpireAt gets a reference to the given string and assigns it to the ExpireAt field.
func (o *CentralGenerateTestTokenResp) SetExpireAt(v string) {
	o.ExpireAt = &v
}

func (o CentralGenerateTestTokenResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralGenerateTestTokenResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.ExpireAt) {
		toSerialize["expire_at"] = o.ExpireAt
	}
	return toSerialize, nil
}

type NullableCentralGenerateTestTokenResp struct {
	value *CentralGenerateTestTokenResp
	isSet bool
}

func (v NullableCentralGenerateTestTokenResp) Get() *CentralGenerateTestTokenResp {
	return v.value
}

func (v *NullableCentralGenerateTestTokenResp) Set(val *CentralGenerateTestTokenResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralGenerateTestTokenResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralGenerateTestTokenResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralGenerateTestTokenResp(val *CentralGenerateTestTokenResp) *NullableCentralGenerateTestTokenResp {
	return &NullableCentralGenerateTestTokenResp{value: val, isSet: true}
}

func (v NullableCentralGenerateTestTokenResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralGenerateTestTokenResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
