/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the ClusterListReqFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterListReqFilter{}

// ClusterListReqFilter struct for ClusterListReqFilter
type ClusterListReqFilter struct {
	Statuses     []CentralClusterStatus `json:"statuses,omitempty"`
	IsServerless *bool                  `json:"is_serverless,omitempty"`
}

// NewClusterListReqFilter instantiates a new ClusterListReqFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterListReqFilter() *ClusterListReqFilter {
	this := ClusterListReqFilter{}
	return &this
}

// NewClusterListReqFilterWithDefaults instantiates a new ClusterListReqFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterListReqFilterWithDefaults() *ClusterListReqFilter {
	this := ClusterListReqFilter{}
	return &this
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *ClusterListReqFilter) GetStatuses() []CentralClusterStatus {
	if o == nil || IsNil(o.Statuses) {
		var ret []CentralClusterStatus
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterListReqFilter) GetStatusesOk() ([]CentralClusterStatus, bool) {
	if o == nil || IsNil(o.Statuses) {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *ClusterListReqFilter) HasStatuses() bool {
	if o != nil && !IsNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []CentralClusterStatus and assigns it to the Statuses field.
func (o *ClusterListReqFilter) SetStatuses(v []CentralClusterStatus) {
	o.Statuses = v
}

// GetIsServerless returns the IsServerless field value if set, zero value otherwise.
func (o *ClusterListReqFilter) GetIsServerless() bool {
	if o == nil || IsNil(o.IsServerless) {
		var ret bool
		return ret
	}
	return *o.IsServerless
}

// GetIsServerlessOk returns a tuple with the IsServerless field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterListReqFilter) GetIsServerlessOk() (*bool, bool) {
	if o == nil || IsNil(o.IsServerless) {
		return nil, false
	}
	return o.IsServerless, true
}

// HasIsServerless returns a boolean if a field has been set.
func (o *ClusterListReqFilter) HasIsServerless() bool {
	if o != nil && !IsNil(o.IsServerless) {
		return true
	}

	return false
}

// SetIsServerless gets a reference to the given bool and assigns it to the IsServerless field.
func (o *ClusterListReqFilter) SetIsServerless(v bool) {
	o.IsServerless = &v
}

func (o ClusterListReqFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterListReqFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Statuses) {
		toSerialize["statuses"] = o.Statuses
	}
	if !IsNil(o.IsServerless) {
		toSerialize["is_serverless"] = o.IsServerless
	}
	return toSerialize, nil
}

type NullableClusterListReqFilter struct {
	value *ClusterListReqFilter
	isSet bool
}

func (v NullableClusterListReqFilter) Get() *ClusterListReqFilter {
	return v.value
}

func (v *NullableClusterListReqFilter) Set(val *ClusterListReqFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterListReqFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterListReqFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterListReqFilter(val *ClusterListReqFilter) *NullableClusterListReqFilter {
	return &NullableClusterListReqFilter{value: val, isSet: true}
}

func (v NullableClusterListReqFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterListReqFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
