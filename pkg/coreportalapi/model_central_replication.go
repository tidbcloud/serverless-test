/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
	"time"
)

// checks if the CentralReplication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralReplication{}

// CentralReplication struct for CentralReplication
type CentralReplication struct {
	PrimaryClusterName   *string                `json:"primary_cluster_name,omitempty"`
	SecondaryClusterName *string                `json:"secondary_cluster_name,omitempty"`
	Status               *string                `json:"status,omitempty"`
	CreationTime         *time.Time             `json:"creation_time,omitempty"`
	DetachedTime         *time.Time             `json:"detached_time,omitempty"`
	DetachedTso          *string                `json:"detached_tso,omitempty"`
	ReplicationLag       *string                `json:"replication_lag,omitempty"`
	PrimaryClusterId     *string                `json:"primary_cluster_id,omitempty"`
	SecondaryClusterId   *string                `json:"secondary_cluster_id,omitempty"`
	ReplicationId        *string                `json:"replication_id,omitempty"`
	DetachUser           *string                `json:"detach_user,omitempty"`
	Creator              *string                `json:"creator,omitempty"`
	PrimaryWriteStatus   *CentralWriteStatus    `json:"primary_write_status,omitempty"`
	SecondaryWriteStatus *CentralWriteStatus    `json:"secondary_write_status,omitempty"`
	CreateProgress       *ClusterCreateProgress `json:"create_progress,omitempty"`
}

// NewCentralReplication instantiates a new CentralReplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralReplication() *CentralReplication {
	this := CentralReplication{}
	var primaryWriteStatus CentralWriteStatus = CENTRALWRITESTATUS_WRITABLE
	this.PrimaryWriteStatus = &primaryWriteStatus
	var secondaryWriteStatus CentralWriteStatus = CENTRALWRITESTATUS_WRITABLE
	this.SecondaryWriteStatus = &secondaryWriteStatus
	var createProgress ClusterCreateProgress = CLUSTERCREATEPROGRESS_INITIALIZING
	this.CreateProgress = &createProgress
	return &this
}

// NewCentralReplicationWithDefaults instantiates a new CentralReplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralReplicationWithDefaults() *CentralReplication {
	this := CentralReplication{}
	var primaryWriteStatus CentralWriteStatus = CENTRALWRITESTATUS_WRITABLE
	this.PrimaryWriteStatus = &primaryWriteStatus
	var secondaryWriteStatus CentralWriteStatus = CENTRALWRITESTATUS_WRITABLE
	this.SecondaryWriteStatus = &secondaryWriteStatus
	var createProgress ClusterCreateProgress = CLUSTERCREATEPROGRESS_INITIALIZING
	this.CreateProgress = &createProgress
	return &this
}

// GetPrimaryClusterName returns the PrimaryClusterName field value if set, zero value otherwise.
func (o *CentralReplication) GetPrimaryClusterName() string {
	if o == nil || IsNil(o.PrimaryClusterName) {
		var ret string
		return ret
	}
	return *o.PrimaryClusterName
}

// GetPrimaryClusterNameOk returns a tuple with the PrimaryClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetPrimaryClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryClusterName) {
		return nil, false
	}
	return o.PrimaryClusterName, true
}

// HasPrimaryClusterName returns a boolean if a field has been set.
func (o *CentralReplication) HasPrimaryClusterName() bool {
	if o != nil && !IsNil(o.PrimaryClusterName) {
		return true
	}

	return false
}

// SetPrimaryClusterName gets a reference to the given string and assigns it to the PrimaryClusterName field.
func (o *CentralReplication) SetPrimaryClusterName(v string) {
	o.PrimaryClusterName = &v
}

// GetSecondaryClusterName returns the SecondaryClusterName field value if set, zero value otherwise.
func (o *CentralReplication) GetSecondaryClusterName() string {
	if o == nil || IsNil(o.SecondaryClusterName) {
		var ret string
		return ret
	}
	return *o.SecondaryClusterName
}

// GetSecondaryClusterNameOk returns a tuple with the SecondaryClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetSecondaryClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryClusterName) {
		return nil, false
	}
	return o.SecondaryClusterName, true
}

// HasSecondaryClusterName returns a boolean if a field has been set.
func (o *CentralReplication) HasSecondaryClusterName() bool {
	if o != nil && !IsNil(o.SecondaryClusterName) {
		return true
	}

	return false
}

// SetSecondaryClusterName gets a reference to the given string and assigns it to the SecondaryClusterName field.
func (o *CentralReplication) SetSecondaryClusterName(v string) {
	o.SecondaryClusterName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CentralReplication) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CentralReplication) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CentralReplication) SetStatus(v string) {
	o.Status = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *CentralReplication) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *CentralReplication) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *CentralReplication) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetDetachedTime returns the DetachedTime field value if set, zero value otherwise.
func (o *CentralReplication) GetDetachedTime() time.Time {
	if o == nil || IsNil(o.DetachedTime) {
		var ret time.Time
		return ret
	}
	return *o.DetachedTime
}

// GetDetachedTimeOk returns a tuple with the DetachedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetDetachedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DetachedTime) {
		return nil, false
	}
	return o.DetachedTime, true
}

// HasDetachedTime returns a boolean if a field has been set.
func (o *CentralReplication) HasDetachedTime() bool {
	if o != nil && !IsNil(o.DetachedTime) {
		return true
	}

	return false
}

// SetDetachedTime gets a reference to the given time.Time and assigns it to the DetachedTime field.
func (o *CentralReplication) SetDetachedTime(v time.Time) {
	o.DetachedTime = &v
}

// GetDetachedTso returns the DetachedTso field value if set, zero value otherwise.
func (o *CentralReplication) GetDetachedTso() string {
	if o == nil || IsNil(o.DetachedTso) {
		var ret string
		return ret
	}
	return *o.DetachedTso
}

// GetDetachedTsoOk returns a tuple with the DetachedTso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetDetachedTsoOk() (*string, bool) {
	if o == nil || IsNil(o.DetachedTso) {
		return nil, false
	}
	return o.DetachedTso, true
}

// HasDetachedTso returns a boolean if a field has been set.
func (o *CentralReplication) HasDetachedTso() bool {
	if o != nil && !IsNil(o.DetachedTso) {
		return true
	}

	return false
}

// SetDetachedTso gets a reference to the given string and assigns it to the DetachedTso field.
func (o *CentralReplication) SetDetachedTso(v string) {
	o.DetachedTso = &v
}

// GetReplicationLag returns the ReplicationLag field value if set, zero value otherwise.
func (o *CentralReplication) GetReplicationLag() string {
	if o == nil || IsNil(o.ReplicationLag) {
		var ret string
		return ret
	}
	return *o.ReplicationLag
}

// GetReplicationLagOk returns a tuple with the ReplicationLag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetReplicationLagOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationLag) {
		return nil, false
	}
	return o.ReplicationLag, true
}

// HasReplicationLag returns a boolean if a field has been set.
func (o *CentralReplication) HasReplicationLag() bool {
	if o != nil && !IsNil(o.ReplicationLag) {
		return true
	}

	return false
}

// SetReplicationLag gets a reference to the given string and assigns it to the ReplicationLag field.
func (o *CentralReplication) SetReplicationLag(v string) {
	o.ReplicationLag = &v
}

// GetPrimaryClusterId returns the PrimaryClusterId field value if set, zero value otherwise.
func (o *CentralReplication) GetPrimaryClusterId() string {
	if o == nil || IsNil(o.PrimaryClusterId) {
		var ret string
		return ret
	}
	return *o.PrimaryClusterId
}

// GetPrimaryClusterIdOk returns a tuple with the PrimaryClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetPrimaryClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryClusterId) {
		return nil, false
	}
	return o.PrimaryClusterId, true
}

// HasPrimaryClusterId returns a boolean if a field has been set.
func (o *CentralReplication) HasPrimaryClusterId() bool {
	if o != nil && !IsNil(o.PrimaryClusterId) {
		return true
	}

	return false
}

// SetPrimaryClusterId gets a reference to the given string and assigns it to the PrimaryClusterId field.
func (o *CentralReplication) SetPrimaryClusterId(v string) {
	o.PrimaryClusterId = &v
}

// GetSecondaryClusterId returns the SecondaryClusterId field value if set, zero value otherwise.
func (o *CentralReplication) GetSecondaryClusterId() string {
	if o == nil || IsNil(o.SecondaryClusterId) {
		var ret string
		return ret
	}
	return *o.SecondaryClusterId
}

// GetSecondaryClusterIdOk returns a tuple with the SecondaryClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetSecondaryClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryClusterId) {
		return nil, false
	}
	return o.SecondaryClusterId, true
}

// HasSecondaryClusterId returns a boolean if a field has been set.
func (o *CentralReplication) HasSecondaryClusterId() bool {
	if o != nil && !IsNil(o.SecondaryClusterId) {
		return true
	}

	return false
}

// SetSecondaryClusterId gets a reference to the given string and assigns it to the SecondaryClusterId field.
func (o *CentralReplication) SetSecondaryClusterId(v string) {
	o.SecondaryClusterId = &v
}

// GetReplicationId returns the ReplicationId field value if set, zero value otherwise.
func (o *CentralReplication) GetReplicationId() string {
	if o == nil || IsNil(o.ReplicationId) {
		var ret string
		return ret
	}
	return *o.ReplicationId
}

// GetReplicationIdOk returns a tuple with the ReplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetReplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationId) {
		return nil, false
	}
	return o.ReplicationId, true
}

// HasReplicationId returns a boolean if a field has been set.
func (o *CentralReplication) HasReplicationId() bool {
	if o != nil && !IsNil(o.ReplicationId) {
		return true
	}

	return false
}

// SetReplicationId gets a reference to the given string and assigns it to the ReplicationId field.
func (o *CentralReplication) SetReplicationId(v string) {
	o.ReplicationId = &v
}

// GetDetachUser returns the DetachUser field value if set, zero value otherwise.
func (o *CentralReplication) GetDetachUser() string {
	if o == nil || IsNil(o.DetachUser) {
		var ret string
		return ret
	}
	return *o.DetachUser
}

// GetDetachUserOk returns a tuple with the DetachUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetDetachUserOk() (*string, bool) {
	if o == nil || IsNil(o.DetachUser) {
		return nil, false
	}
	return o.DetachUser, true
}

// HasDetachUser returns a boolean if a field has been set.
func (o *CentralReplication) HasDetachUser() bool {
	if o != nil && !IsNil(o.DetachUser) {
		return true
	}

	return false
}

// SetDetachUser gets a reference to the given string and assigns it to the DetachUser field.
func (o *CentralReplication) SetDetachUser(v string) {
	o.DetachUser = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *CentralReplication) GetCreator() string {
	if o == nil || IsNil(o.Creator) {
		var ret string
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetCreatorOk() (*string, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *CentralReplication) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given string and assigns it to the Creator field.
func (o *CentralReplication) SetCreator(v string) {
	o.Creator = &v
}

// GetPrimaryWriteStatus returns the PrimaryWriteStatus field value if set, zero value otherwise.
func (o *CentralReplication) GetPrimaryWriteStatus() CentralWriteStatus {
	if o == nil || IsNil(o.PrimaryWriteStatus) {
		var ret CentralWriteStatus
		return ret
	}
	return *o.PrimaryWriteStatus
}

// GetPrimaryWriteStatusOk returns a tuple with the PrimaryWriteStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetPrimaryWriteStatusOk() (*CentralWriteStatus, bool) {
	if o == nil || IsNil(o.PrimaryWriteStatus) {
		return nil, false
	}
	return o.PrimaryWriteStatus, true
}

// HasPrimaryWriteStatus returns a boolean if a field has been set.
func (o *CentralReplication) HasPrimaryWriteStatus() bool {
	if o != nil && !IsNil(o.PrimaryWriteStatus) {
		return true
	}

	return false
}

// SetPrimaryWriteStatus gets a reference to the given CentralWriteStatus and assigns it to the PrimaryWriteStatus field.
func (o *CentralReplication) SetPrimaryWriteStatus(v CentralWriteStatus) {
	o.PrimaryWriteStatus = &v
}

// GetSecondaryWriteStatus returns the SecondaryWriteStatus field value if set, zero value otherwise.
func (o *CentralReplication) GetSecondaryWriteStatus() CentralWriteStatus {
	if o == nil || IsNil(o.SecondaryWriteStatus) {
		var ret CentralWriteStatus
		return ret
	}
	return *o.SecondaryWriteStatus
}

// GetSecondaryWriteStatusOk returns a tuple with the SecondaryWriteStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetSecondaryWriteStatusOk() (*CentralWriteStatus, bool) {
	if o == nil || IsNil(o.SecondaryWriteStatus) {
		return nil, false
	}
	return o.SecondaryWriteStatus, true
}

// HasSecondaryWriteStatus returns a boolean if a field has been set.
func (o *CentralReplication) HasSecondaryWriteStatus() bool {
	if o != nil && !IsNil(o.SecondaryWriteStatus) {
		return true
	}

	return false
}

// SetSecondaryWriteStatus gets a reference to the given CentralWriteStatus and assigns it to the SecondaryWriteStatus field.
func (o *CentralReplication) SetSecondaryWriteStatus(v CentralWriteStatus) {
	o.SecondaryWriteStatus = &v
}

// GetCreateProgress returns the CreateProgress field value if set, zero value otherwise.
func (o *CentralReplication) GetCreateProgress() ClusterCreateProgress {
	if o == nil || IsNil(o.CreateProgress) {
		var ret ClusterCreateProgress
		return ret
	}
	return *o.CreateProgress
}

// GetCreateProgressOk returns a tuple with the CreateProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralReplication) GetCreateProgressOk() (*ClusterCreateProgress, bool) {
	if o == nil || IsNil(o.CreateProgress) {
		return nil, false
	}
	return o.CreateProgress, true
}

// HasCreateProgress returns a boolean if a field has been set.
func (o *CentralReplication) HasCreateProgress() bool {
	if o != nil && !IsNil(o.CreateProgress) {
		return true
	}

	return false
}

// SetCreateProgress gets a reference to the given ClusterCreateProgress and assigns it to the CreateProgress field.
func (o *CentralReplication) SetCreateProgress(v ClusterCreateProgress) {
	o.CreateProgress = &v
}

func (o CentralReplication) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralReplication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrimaryClusterName) {
		toSerialize["primary_cluster_name"] = o.PrimaryClusterName
	}
	if !IsNil(o.SecondaryClusterName) {
		toSerialize["secondary_cluster_name"] = o.SecondaryClusterName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creation_time"] = o.CreationTime
	}
	if !IsNil(o.DetachedTime) {
		toSerialize["detached_time"] = o.DetachedTime
	}
	if !IsNil(o.DetachedTso) {
		toSerialize["detached_tso"] = o.DetachedTso
	}
	if !IsNil(o.ReplicationLag) {
		toSerialize["replication_lag"] = o.ReplicationLag
	}
	if !IsNil(o.PrimaryClusterId) {
		toSerialize["primary_cluster_id"] = o.PrimaryClusterId
	}
	if !IsNil(o.SecondaryClusterId) {
		toSerialize["secondary_cluster_id"] = o.SecondaryClusterId
	}
	if !IsNil(o.ReplicationId) {
		toSerialize["replication_id"] = o.ReplicationId
	}
	if !IsNil(o.DetachUser) {
		toSerialize["detach_user"] = o.DetachUser
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.PrimaryWriteStatus) {
		toSerialize["primary_write_status"] = o.PrimaryWriteStatus
	}
	if !IsNil(o.SecondaryWriteStatus) {
		toSerialize["secondary_write_status"] = o.SecondaryWriteStatus
	}
	if !IsNil(o.CreateProgress) {
		toSerialize["create_progress"] = o.CreateProgress
	}
	return toSerialize, nil
}

type NullableCentralReplication struct {
	value *CentralReplication
	isSet bool
}

func (v NullableCentralReplication) Get() *CentralReplication {
	return v.value
}

func (v *NullableCentralReplication) Set(val *CentralReplication) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralReplication) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralReplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralReplication(val *CentralReplication) *NullableCentralReplication {
	return &NullableCentralReplication{value: val, isSet: true}
}

func (v NullableCentralReplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralReplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
