/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CentralCrossAccountDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralCrossAccountDeployment{}

// CentralCrossAccountDeployment struct for CentralCrossAccountDeployment
type CentralCrossAccountDeployment struct {
	Id                      string    `json:"id"`
	CreatedAt               time.Time `json:"created_at"`
	ProjectId               string    `json:"project_id"`
	Provider                string    `json:"provider"`
	Region                  string    `json:"region"`
	VpcId                   string    `json:"vpc_id"`
	SecurityGroupId         string    `json:"security_group_id"`
	SubnetIds               []string  `json:"subnet_ids"`
	BucketName              string    `json:"bucket_name"`
	KmsKeyArn               string    `json:"kms_key_arn"`
	PcaArnClusterComponents string    `json:"pca_arn_cluster_components"`
	PcaArnClient            string    `json:"pca_arn_client"`
	RoleArnTidbCloud        string    `json:"role_arn_tidb_cloud"`
	RoleArnEks              string    `json:"role_arn_eks"`
	RoleArnNode             string    `json:"role_arn_node"`
	Status                  string    `json:"status"`
	RegionName              string    `json:"region_name"`
	TidbCacert              *string   `json:"tidb_cacert,omitempty"`
	TidbClientCert          *string   `json:"tidb_client_cert,omitempty"`
	TidbClientKey           *string   `json:"tidb_client_key,omitempty"`
	IsMtlsOn                *bool     `json:"is_mtls_on,omitempty"`
}

type _CentralCrossAccountDeployment CentralCrossAccountDeployment

// NewCentralCrossAccountDeployment instantiates a new CentralCrossAccountDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralCrossAccountDeployment(id string, createdAt time.Time, projectId string, provider string, region string, vpcId string, securityGroupId string, subnetIds []string, bucketName string, kmsKeyArn string, pcaArnClusterComponents string, pcaArnClient string, roleArnTidbCloud string, roleArnEks string, roleArnNode string, status string, regionName string) *CentralCrossAccountDeployment {
	this := CentralCrossAccountDeployment{}
	this.Id = id
	this.CreatedAt = createdAt
	this.ProjectId = projectId
	this.Provider = provider
	this.Region = region
	this.VpcId = vpcId
	this.SecurityGroupId = securityGroupId
	this.SubnetIds = subnetIds
	this.BucketName = bucketName
	this.KmsKeyArn = kmsKeyArn
	this.PcaArnClusterComponents = pcaArnClusterComponents
	this.PcaArnClient = pcaArnClient
	this.RoleArnTidbCloud = roleArnTidbCloud
	this.RoleArnEks = roleArnEks
	this.RoleArnNode = roleArnNode
	this.Status = status
	this.RegionName = regionName
	return &this
}

// NewCentralCrossAccountDeploymentWithDefaults instantiates a new CentralCrossAccountDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralCrossAccountDeploymentWithDefaults() *CentralCrossAccountDeployment {
	this := CentralCrossAccountDeployment{}
	return &this
}

// GetId returns the Id field value
func (o *CentralCrossAccountDeployment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CentralCrossAccountDeployment) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CentralCrossAccountDeployment) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CentralCrossAccountDeployment) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetProjectId returns the ProjectId field value
func (o *CentralCrossAccountDeployment) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *CentralCrossAccountDeployment) SetProjectId(v string) {
	o.ProjectId = v
}

// GetProvider returns the Provider field value
func (o *CentralCrossAccountDeployment) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *CentralCrossAccountDeployment) SetProvider(v string) {
	o.Provider = v
}

// GetRegion returns the Region field value
func (o *CentralCrossAccountDeployment) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CentralCrossAccountDeployment) SetRegion(v string) {
	o.Region = v
}

// GetVpcId returns the VpcId field value
func (o *CentralCrossAccountDeployment) GetVpcId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VpcId, true
}

// SetVpcId sets field value
func (o *CentralCrossAccountDeployment) SetVpcId(v string) {
	o.VpcId = v
}

// GetSecurityGroupId returns the SecurityGroupId field value
func (o *CentralCrossAccountDeployment) GetSecurityGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityGroupId, true
}

// SetSecurityGroupId sets field value
func (o *CentralCrossAccountDeployment) SetSecurityGroupId(v string) {
	o.SecurityGroupId = v
}

// GetSubnetIds returns the SubnetIds field value
func (o *CentralCrossAccountDeployment) GetSubnetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SubnetIds
}

// GetSubnetIdsOk returns a tuple with the SubnetIds field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetSubnetIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetIds, true
}

// SetSubnetIds sets field value
func (o *CentralCrossAccountDeployment) SetSubnetIds(v []string) {
	o.SubnetIds = v
}

// GetBucketName returns the BucketName field value
func (o *CentralCrossAccountDeployment) GetBucketName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetBucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BucketName, true
}

// SetBucketName sets field value
func (o *CentralCrossAccountDeployment) SetBucketName(v string) {
	o.BucketName = v
}

// GetKmsKeyArn returns the KmsKeyArn field value
func (o *CentralCrossAccountDeployment) GetKmsKeyArn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KmsKeyArn
}

// GetKmsKeyArnOk returns a tuple with the KmsKeyArn field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetKmsKeyArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KmsKeyArn, true
}

// SetKmsKeyArn sets field value
func (o *CentralCrossAccountDeployment) SetKmsKeyArn(v string) {
	o.KmsKeyArn = v
}

// GetPcaArnClusterComponents returns the PcaArnClusterComponents field value
func (o *CentralCrossAccountDeployment) GetPcaArnClusterComponents() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PcaArnClusterComponents
}

// GetPcaArnClusterComponentsOk returns a tuple with the PcaArnClusterComponents field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetPcaArnClusterComponentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PcaArnClusterComponents, true
}

// SetPcaArnClusterComponents sets field value
func (o *CentralCrossAccountDeployment) SetPcaArnClusterComponents(v string) {
	o.PcaArnClusterComponents = v
}

// GetPcaArnClient returns the PcaArnClient field value
func (o *CentralCrossAccountDeployment) GetPcaArnClient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PcaArnClient
}

// GetPcaArnClientOk returns a tuple with the PcaArnClient field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetPcaArnClientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PcaArnClient, true
}

// SetPcaArnClient sets field value
func (o *CentralCrossAccountDeployment) SetPcaArnClient(v string) {
	o.PcaArnClient = v
}

// GetRoleArnTidbCloud returns the RoleArnTidbCloud field value
func (o *CentralCrossAccountDeployment) GetRoleArnTidbCloud() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleArnTidbCloud
}

// GetRoleArnTidbCloudOk returns a tuple with the RoleArnTidbCloud field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetRoleArnTidbCloudOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleArnTidbCloud, true
}

// SetRoleArnTidbCloud sets field value
func (o *CentralCrossAccountDeployment) SetRoleArnTidbCloud(v string) {
	o.RoleArnTidbCloud = v
}

// GetRoleArnEks returns the RoleArnEks field value
func (o *CentralCrossAccountDeployment) GetRoleArnEks() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleArnEks
}

// GetRoleArnEksOk returns a tuple with the RoleArnEks field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetRoleArnEksOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleArnEks, true
}

// SetRoleArnEks sets field value
func (o *CentralCrossAccountDeployment) SetRoleArnEks(v string) {
	o.RoleArnEks = v
}

// GetRoleArnNode returns the RoleArnNode field value
func (o *CentralCrossAccountDeployment) GetRoleArnNode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleArnNode
}

// GetRoleArnNodeOk returns a tuple with the RoleArnNode field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetRoleArnNodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleArnNode, true
}

// SetRoleArnNode sets field value
func (o *CentralCrossAccountDeployment) SetRoleArnNode(v string) {
	o.RoleArnNode = v
}

// GetStatus returns the Status field value
func (o *CentralCrossAccountDeployment) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CentralCrossAccountDeployment) SetStatus(v string) {
	o.Status = v
}

// GetRegionName returns the RegionName field value
func (o *CentralCrossAccountDeployment) GetRegionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetRegionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegionName, true
}

// SetRegionName sets field value
func (o *CentralCrossAccountDeployment) SetRegionName(v string) {
	o.RegionName = v
}

// GetTidbCacert returns the TidbCacert field value if set, zero value otherwise.
func (o *CentralCrossAccountDeployment) GetTidbCacert() string {
	if o == nil || IsNil(o.TidbCacert) {
		var ret string
		return ret
	}
	return *o.TidbCacert
}

// GetTidbCacertOk returns a tuple with the TidbCacert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetTidbCacertOk() (*string, bool) {
	if o == nil || IsNil(o.TidbCacert) {
		return nil, false
	}
	return o.TidbCacert, true
}

// HasTidbCacert returns a boolean if a field has been set.
func (o *CentralCrossAccountDeployment) HasTidbCacert() bool {
	if o != nil && !IsNil(o.TidbCacert) {
		return true
	}

	return false
}

// SetTidbCacert gets a reference to the given string and assigns it to the TidbCacert field.
func (o *CentralCrossAccountDeployment) SetTidbCacert(v string) {
	o.TidbCacert = &v
}

// GetTidbClientCert returns the TidbClientCert field value if set, zero value otherwise.
func (o *CentralCrossAccountDeployment) GetTidbClientCert() string {
	if o == nil || IsNil(o.TidbClientCert) {
		var ret string
		return ret
	}
	return *o.TidbClientCert
}

// GetTidbClientCertOk returns a tuple with the TidbClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetTidbClientCertOk() (*string, bool) {
	if o == nil || IsNil(o.TidbClientCert) {
		return nil, false
	}
	return o.TidbClientCert, true
}

// HasTidbClientCert returns a boolean if a field has been set.
func (o *CentralCrossAccountDeployment) HasTidbClientCert() bool {
	if o != nil && !IsNil(o.TidbClientCert) {
		return true
	}

	return false
}

// SetTidbClientCert gets a reference to the given string and assigns it to the TidbClientCert field.
func (o *CentralCrossAccountDeployment) SetTidbClientCert(v string) {
	o.TidbClientCert = &v
}

// GetTidbClientKey returns the TidbClientKey field value if set, zero value otherwise.
func (o *CentralCrossAccountDeployment) GetTidbClientKey() string {
	if o == nil || IsNil(o.TidbClientKey) {
		var ret string
		return ret
	}
	return *o.TidbClientKey
}

// GetTidbClientKeyOk returns a tuple with the TidbClientKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetTidbClientKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TidbClientKey) {
		return nil, false
	}
	return o.TidbClientKey, true
}

// HasTidbClientKey returns a boolean if a field has been set.
func (o *CentralCrossAccountDeployment) HasTidbClientKey() bool {
	if o != nil && !IsNil(o.TidbClientKey) {
		return true
	}

	return false
}

// SetTidbClientKey gets a reference to the given string and assigns it to the TidbClientKey field.
func (o *CentralCrossAccountDeployment) SetTidbClientKey(v string) {
	o.TidbClientKey = &v
}

// GetIsMtlsOn returns the IsMtlsOn field value if set, zero value otherwise.
func (o *CentralCrossAccountDeployment) GetIsMtlsOn() bool {
	if o == nil || IsNil(o.IsMtlsOn) {
		var ret bool
		return ret
	}
	return *o.IsMtlsOn
}

// GetIsMtlsOnOk returns a tuple with the IsMtlsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCrossAccountDeployment) GetIsMtlsOnOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMtlsOn) {
		return nil, false
	}
	return o.IsMtlsOn, true
}

// HasIsMtlsOn returns a boolean if a field has been set.
func (o *CentralCrossAccountDeployment) HasIsMtlsOn() bool {
	if o != nil && !IsNil(o.IsMtlsOn) {
		return true
	}

	return false
}

// SetIsMtlsOn gets a reference to the given bool and assigns it to the IsMtlsOn field.
func (o *CentralCrossAccountDeployment) SetIsMtlsOn(v bool) {
	o.IsMtlsOn = &v
}

func (o CentralCrossAccountDeployment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralCrossAccountDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["project_id"] = o.ProjectId
	toSerialize["provider"] = o.Provider
	toSerialize["region"] = o.Region
	toSerialize["vpc_id"] = o.VpcId
	toSerialize["security_group_id"] = o.SecurityGroupId
	toSerialize["subnet_ids"] = o.SubnetIds
	toSerialize["bucket_name"] = o.BucketName
	toSerialize["kms_key_arn"] = o.KmsKeyArn
	toSerialize["pca_arn_cluster_components"] = o.PcaArnClusterComponents
	toSerialize["pca_arn_client"] = o.PcaArnClient
	toSerialize["role_arn_tidb_cloud"] = o.RoleArnTidbCloud
	toSerialize["role_arn_eks"] = o.RoleArnEks
	toSerialize["role_arn_node"] = o.RoleArnNode
	toSerialize["status"] = o.Status
	toSerialize["region_name"] = o.RegionName
	if !IsNil(o.TidbCacert) {
		toSerialize["tidb_cacert"] = o.TidbCacert
	}
	if !IsNil(o.TidbClientCert) {
		toSerialize["tidb_client_cert"] = o.TidbClientCert
	}
	if !IsNil(o.TidbClientKey) {
		toSerialize["tidb_client_key"] = o.TidbClientKey
	}
	if !IsNil(o.IsMtlsOn) {
		toSerialize["is_mtls_on"] = o.IsMtlsOn
	}
	return toSerialize, nil
}

func (o *CentralCrossAccountDeployment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"project_id",
		"provider",
		"region",
		"vpc_id",
		"security_group_id",
		"subnet_ids",
		"bucket_name",
		"kms_key_arn",
		"pca_arn_cluster_components",
		"pca_arn_client",
		"role_arn_tidb_cloud",
		"role_arn_eks",
		"role_arn_node",
		"status",
		"region_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralCrossAccountDeployment := _CentralCrossAccountDeployment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralCrossAccountDeployment)

	if err != nil {
		return err
	}

	*o = CentralCrossAccountDeployment(varCentralCrossAccountDeployment)

	return err
}

type NullableCentralCrossAccountDeployment struct {
	value *CentralCrossAccountDeployment
	isSet bool
}

func (v NullableCentralCrossAccountDeployment) Get() *CentralCrossAccountDeployment {
	return v.value
}

func (v *NullableCentralCrossAccountDeployment) Set(val *CentralCrossAccountDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralCrossAccountDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralCrossAccountDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralCrossAccountDeployment(val *CentralCrossAccountDeployment) *NullableCentralCrossAccountDeployment {
	return &NullableCentralCrossAccountDeployment{value: val, isSet: true}
}

func (v NullableCentralCrossAccountDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralCrossAccountDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
