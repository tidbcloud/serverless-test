/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralCalcClusterFeeRespComponentCost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralCalcClusterFeeRespComponentCost{}

// CentralCalcClusterFeeRespComponentCost struct for CentralCalcClusterFeeRespComponentCost
type CentralCalcClusterFeeRespComponentCost struct {
	ComponentType *CentralComponentType `json:"component_type,omitempty"`
	Compute       *float64              `json:"compute,omitempty"`
	Storage       *float64              `json:"storage,omitempty"`
	RawCompute    *float64              `json:"raw_compute,omitempty"`
	RawStorage    *float64              `json:"raw_storage,omitempty"`
}

// NewCentralCalcClusterFeeRespComponentCost instantiates a new CentralCalcClusterFeeRespComponentCost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralCalcClusterFeeRespComponentCost() *CentralCalcClusterFeeRespComponentCost {
	this := CentralCalcClusterFeeRespComponentCost{}
	var componentType CentralComponentType = CENTRALCOMPONENTTYPE_COMPONENT_TYPE_UNSPECIFIED
	this.ComponentType = &componentType
	return &this
}

// NewCentralCalcClusterFeeRespComponentCostWithDefaults instantiates a new CentralCalcClusterFeeRespComponentCost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralCalcClusterFeeRespComponentCostWithDefaults() *CentralCalcClusterFeeRespComponentCost {
	this := CentralCalcClusterFeeRespComponentCost{}
	var componentType CentralComponentType = CENTRALCOMPONENTTYPE_COMPONENT_TYPE_UNSPECIFIED
	this.ComponentType = &componentType
	return &this
}

// GetComponentType returns the ComponentType field value if set, zero value otherwise.
func (o *CentralCalcClusterFeeRespComponentCost) GetComponentType() CentralComponentType {
	if o == nil || IsNil(o.ComponentType) {
		var ret CentralComponentType
		return ret
	}
	return *o.ComponentType
}

// GetComponentTypeOk returns a tuple with the ComponentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCalcClusterFeeRespComponentCost) GetComponentTypeOk() (*CentralComponentType, bool) {
	if o == nil || IsNil(o.ComponentType) {
		return nil, false
	}
	return o.ComponentType, true
}

// HasComponentType returns a boolean if a field has been set.
func (o *CentralCalcClusterFeeRespComponentCost) HasComponentType() bool {
	if o != nil && !IsNil(o.ComponentType) {
		return true
	}

	return false
}

// SetComponentType gets a reference to the given CentralComponentType and assigns it to the ComponentType field.
func (o *CentralCalcClusterFeeRespComponentCost) SetComponentType(v CentralComponentType) {
	o.ComponentType = &v
}

// GetCompute returns the Compute field value if set, zero value otherwise.
func (o *CentralCalcClusterFeeRespComponentCost) GetCompute() float64 {
	if o == nil || IsNil(o.Compute) {
		var ret float64
		return ret
	}
	return *o.Compute
}

// GetComputeOk returns a tuple with the Compute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCalcClusterFeeRespComponentCost) GetComputeOk() (*float64, bool) {
	if o == nil || IsNil(o.Compute) {
		return nil, false
	}
	return o.Compute, true
}

// HasCompute returns a boolean if a field has been set.
func (o *CentralCalcClusterFeeRespComponentCost) HasCompute() bool {
	if o != nil && !IsNil(o.Compute) {
		return true
	}

	return false
}

// SetCompute gets a reference to the given float64 and assigns it to the Compute field.
func (o *CentralCalcClusterFeeRespComponentCost) SetCompute(v float64) {
	o.Compute = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *CentralCalcClusterFeeRespComponentCost) GetStorage() float64 {
	if o == nil || IsNil(o.Storage) {
		var ret float64
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCalcClusterFeeRespComponentCost) GetStorageOk() (*float64, bool) {
	if o == nil || IsNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *CentralCalcClusterFeeRespComponentCost) HasStorage() bool {
	if o != nil && !IsNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given float64 and assigns it to the Storage field.
func (o *CentralCalcClusterFeeRespComponentCost) SetStorage(v float64) {
	o.Storage = &v
}

// GetRawCompute returns the RawCompute field value if set, zero value otherwise.
func (o *CentralCalcClusterFeeRespComponentCost) GetRawCompute() float64 {
	if o == nil || IsNil(o.RawCompute) {
		var ret float64
		return ret
	}
	return *o.RawCompute
}

// GetRawComputeOk returns a tuple with the RawCompute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCalcClusterFeeRespComponentCost) GetRawComputeOk() (*float64, bool) {
	if o == nil || IsNil(o.RawCompute) {
		return nil, false
	}
	return o.RawCompute, true
}

// HasRawCompute returns a boolean if a field has been set.
func (o *CentralCalcClusterFeeRespComponentCost) HasRawCompute() bool {
	if o != nil && !IsNil(o.RawCompute) {
		return true
	}

	return false
}

// SetRawCompute gets a reference to the given float64 and assigns it to the RawCompute field.
func (o *CentralCalcClusterFeeRespComponentCost) SetRawCompute(v float64) {
	o.RawCompute = &v
}

// GetRawStorage returns the RawStorage field value if set, zero value otherwise.
func (o *CentralCalcClusterFeeRespComponentCost) GetRawStorage() float64 {
	if o == nil || IsNil(o.RawStorage) {
		var ret float64
		return ret
	}
	return *o.RawStorage
}

// GetRawStorageOk returns a tuple with the RawStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCalcClusterFeeRespComponentCost) GetRawStorageOk() (*float64, bool) {
	if o == nil || IsNil(o.RawStorage) {
		return nil, false
	}
	return o.RawStorage, true
}

// HasRawStorage returns a boolean if a field has been set.
func (o *CentralCalcClusterFeeRespComponentCost) HasRawStorage() bool {
	if o != nil && !IsNil(o.RawStorage) {
		return true
	}

	return false
}

// SetRawStorage gets a reference to the given float64 and assigns it to the RawStorage field.
func (o *CentralCalcClusterFeeRespComponentCost) SetRawStorage(v float64) {
	o.RawStorage = &v
}

func (o CentralCalcClusterFeeRespComponentCost) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralCalcClusterFeeRespComponentCost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComponentType) {
		toSerialize["component_type"] = o.ComponentType
	}
	if !IsNil(o.Compute) {
		toSerialize["compute"] = o.Compute
	}
	if !IsNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	if !IsNil(o.RawCompute) {
		toSerialize["raw_compute"] = o.RawCompute
	}
	if !IsNil(o.RawStorage) {
		toSerialize["raw_storage"] = o.RawStorage
	}
	return toSerialize, nil
}

type NullableCentralCalcClusterFeeRespComponentCost struct {
	value *CentralCalcClusterFeeRespComponentCost
	isSet bool
}

func (v NullableCentralCalcClusterFeeRespComponentCost) Get() *CentralCalcClusterFeeRespComponentCost {
	return v.value
}

func (v *NullableCentralCalcClusterFeeRespComponentCost) Set(val *CentralCalcClusterFeeRespComponentCost) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralCalcClusterFeeRespComponentCost) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralCalcClusterFeeRespComponentCost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralCalcClusterFeeRespComponentCost(val *CentralCalcClusterFeeRespComponentCost) *NullableCentralCalcClusterFeeRespComponentCost {
	return &NullableCentralCalcClusterFeeRespComponentCost{value: val, isSet: true}
}

func (v NullableCentralCalcClusterFeeRespComponentCost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralCalcClusterFeeRespComponentCost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
