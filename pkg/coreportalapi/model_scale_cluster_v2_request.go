/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ScaleClusterV2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScaleClusterV2Request{}

// ScaleClusterV2Request struct for ScaleClusterV2Request
type ScaleClusterV2Request struct {
	Components []CentralClusterComponent `json:"components"`
}

type _ScaleClusterV2Request ScaleClusterV2Request

// NewScaleClusterV2Request instantiates a new ScaleClusterV2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScaleClusterV2Request(components []CentralClusterComponent) *ScaleClusterV2Request {
	this := ScaleClusterV2Request{}
	this.Components = components
	return &this
}

// NewScaleClusterV2RequestWithDefaults instantiates a new ScaleClusterV2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScaleClusterV2RequestWithDefaults() *ScaleClusterV2Request {
	this := ScaleClusterV2Request{}
	return &this
}

// GetComponents returns the Components field value
func (o *ScaleClusterV2Request) GetComponents() []CentralClusterComponent {
	if o == nil {
		var ret []CentralClusterComponent
		return ret
	}

	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value
// and a boolean to check if the value has been set.
func (o *ScaleClusterV2Request) GetComponentsOk() ([]CentralClusterComponent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Components, true
}

// SetComponents sets field value
func (o *ScaleClusterV2Request) SetComponents(v []CentralClusterComponent) {
	o.Components = v
}

func (o ScaleClusterV2Request) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScaleClusterV2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["components"] = o.Components
	return toSerialize, nil
}

func (o *ScaleClusterV2Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"components",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varScaleClusterV2Request := _ScaleClusterV2Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varScaleClusterV2Request)

	if err != nil {
		return err
	}

	*o = ScaleClusterV2Request(varScaleClusterV2Request)

	return err
}

type NullableScaleClusterV2Request struct {
	value *ScaleClusterV2Request
	isSet bool
}

func (v NullableScaleClusterV2Request) Get() *ScaleClusterV2Request {
	return v.value
}

func (v *NullableScaleClusterV2Request) Set(val *ScaleClusterV2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableScaleClusterV2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableScaleClusterV2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScaleClusterV2Request(val *ScaleClusterV2Request) *NullableScaleClusterV2Request {
	return &NullableScaleClusterV2Request{value: val, isSet: true}
}

func (v NullableScaleClusterV2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScaleClusterV2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
