/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralAwsCmekSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralAwsCmekSpec{}

// CentralAwsCmekSpec struct for CentralAwsCmekSpec
type CentralAwsCmekSpec struct {
	RegionName *string `json:"region_name,omitempty"`
	KmsArn     *string `json:"kms_arn,omitempty"`
}

// NewCentralAwsCmekSpec instantiates a new CentralAwsCmekSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralAwsCmekSpec() *CentralAwsCmekSpec {
	this := CentralAwsCmekSpec{}
	return &this
}

// NewCentralAwsCmekSpecWithDefaults instantiates a new CentralAwsCmekSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralAwsCmekSpecWithDefaults() *CentralAwsCmekSpec {
	this := CentralAwsCmekSpec{}
	return &this
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *CentralAwsCmekSpec) GetRegionName() string {
	if o == nil || IsNil(o.RegionName) {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralAwsCmekSpec) GetRegionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegionName) {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *CentralAwsCmekSpec) HasRegionName() bool {
	if o != nil && !IsNil(o.RegionName) {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *CentralAwsCmekSpec) SetRegionName(v string) {
	o.RegionName = &v
}

// GetKmsArn returns the KmsArn field value if set, zero value otherwise.
func (o *CentralAwsCmekSpec) GetKmsArn() string {
	if o == nil || IsNil(o.KmsArn) {
		var ret string
		return ret
	}
	return *o.KmsArn
}

// GetKmsArnOk returns a tuple with the KmsArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralAwsCmekSpec) GetKmsArnOk() (*string, bool) {
	if o == nil || IsNil(o.KmsArn) {
		return nil, false
	}
	return o.KmsArn, true
}

// HasKmsArn returns a boolean if a field has been set.
func (o *CentralAwsCmekSpec) HasKmsArn() bool {
	if o != nil && !IsNil(o.KmsArn) {
		return true
	}

	return false
}

// SetKmsArn gets a reference to the given string and assigns it to the KmsArn field.
func (o *CentralAwsCmekSpec) SetKmsArn(v string) {
	o.KmsArn = &v
}

func (o CentralAwsCmekSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralAwsCmekSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RegionName) {
		toSerialize["region_name"] = o.RegionName
	}
	if !IsNil(o.KmsArn) {
		toSerialize["kms_arn"] = o.KmsArn
	}
	return toSerialize, nil
}

type NullableCentralAwsCmekSpec struct {
	value *CentralAwsCmekSpec
	isSet bool
}

func (v NullableCentralAwsCmekSpec) Get() *CentralAwsCmekSpec {
	return v.value
}

func (v *NullableCentralAwsCmekSpec) Set(val *CentralAwsCmekSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralAwsCmekSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralAwsCmekSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralAwsCmekSpec(val *CentralAwsCmekSpec) *NullableCentralAwsCmekSpec {
	return &NullableCentralAwsCmekSpec{value: val, isSet: true}
}

func (v NullableCentralAwsCmekSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralAwsCmekSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
