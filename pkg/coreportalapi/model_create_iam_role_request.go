/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CreateIamRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIamRoleRequest{}

// CreateIamRoleRequest struct for CreateIamRoleRequest
type CreateIamRoleRequest struct {
	RoleArn *string `json:"role_arn,omitempty"`
}

// NewCreateIamRoleRequest instantiates a new CreateIamRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIamRoleRequest() *CreateIamRoleRequest {
	this := CreateIamRoleRequest{}
	return &this
}

// NewCreateIamRoleRequestWithDefaults instantiates a new CreateIamRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIamRoleRequestWithDefaults() *CreateIamRoleRequest {
	this := CreateIamRoleRequest{}
	return &this
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *CreateIamRoleRequest) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIamRoleRequest) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *CreateIamRoleRequest) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *CreateIamRoleRequest) SetRoleArn(v string) {
	o.RoleArn = &v
}

func (o CreateIamRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIamRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleArn) {
		toSerialize["role_arn"] = o.RoleArn
	}
	return toSerialize, nil
}

type NullableCreateIamRoleRequest struct {
	value *CreateIamRoleRequest
	isSet bool
}

func (v NullableCreateIamRoleRequest) Get() *CreateIamRoleRequest {
	return v.value
}

func (v *NullableCreateIamRoleRequest) Set(val *CreateIamRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIamRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIamRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIamRoleRequest(val *CreateIamRoleRequest) *NullableCreateIamRoleRequest {
	return &NullableCreateIamRoleRequest{value: val, isSet: true}
}

func (v NullableCreateIamRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIamRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
