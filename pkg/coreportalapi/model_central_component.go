/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CentralComponent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralComponent{}

// CentralComponent struct for CentralComponent
type CentralComponent struct {
	Replicas       int64                           `json:"replicas"`
	NodeProfile    CentralNodeProfile              `json:"node_profile"`
	ModifyProgress *CentralComponentModifyProgress `json:"modify_progress,omitempty"`
}

type _CentralComponent CentralComponent

// NewCentralComponent instantiates a new CentralComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralComponent(replicas int64, nodeProfile CentralNodeProfile) *CentralComponent {
	this := CentralComponent{}
	this.Replicas = replicas
	this.NodeProfile = nodeProfile
	return &this
}

// NewCentralComponentWithDefaults instantiates a new CentralComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralComponentWithDefaults() *CentralComponent {
	this := CentralComponent{}
	return &this
}

// GetReplicas returns the Replicas field value
func (o *CentralComponent) GetReplicas() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *CentralComponent) GetReplicasOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *CentralComponent) SetReplicas(v int64) {
	o.Replicas = v
}

// GetNodeProfile returns the NodeProfile field value
func (o *CentralComponent) GetNodeProfile() CentralNodeProfile {
	if o == nil {
		var ret CentralNodeProfile
		return ret
	}

	return o.NodeProfile
}

// GetNodeProfileOk returns a tuple with the NodeProfile field value
// and a boolean to check if the value has been set.
func (o *CentralComponent) GetNodeProfileOk() (*CentralNodeProfile, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeProfile, true
}

// SetNodeProfile sets field value
func (o *CentralComponent) SetNodeProfile(v CentralNodeProfile) {
	o.NodeProfile = v
}

// GetModifyProgress returns the ModifyProgress field value if set, zero value otherwise.
func (o *CentralComponent) GetModifyProgress() CentralComponentModifyProgress {
	if o == nil || IsNil(o.ModifyProgress) {
		var ret CentralComponentModifyProgress
		return ret
	}
	return *o.ModifyProgress
}

// GetModifyProgressOk returns a tuple with the ModifyProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralComponent) GetModifyProgressOk() (*CentralComponentModifyProgress, bool) {
	if o == nil || IsNil(o.ModifyProgress) {
		return nil, false
	}
	return o.ModifyProgress, true
}

// HasModifyProgress returns a boolean if a field has been set.
func (o *CentralComponent) HasModifyProgress() bool {
	if o != nil && !IsNil(o.ModifyProgress) {
		return true
	}

	return false
}

// SetModifyProgress gets a reference to the given CentralComponentModifyProgress and assigns it to the ModifyProgress field.
func (o *CentralComponent) SetModifyProgress(v CentralComponentModifyProgress) {
	o.ModifyProgress = &v
}

func (o CentralComponent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralComponent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["replicas"] = o.Replicas
	toSerialize["node_profile"] = o.NodeProfile
	if !IsNil(o.ModifyProgress) {
		toSerialize["modify_progress"] = o.ModifyProgress
	}
	return toSerialize, nil
}

func (o *CentralComponent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"replicas",
		"node_profile",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralComponent := _CentralComponent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralComponent)

	if err != nil {
		return err
	}

	*o = CentralComponent(varCentralComponent)

	return err
}

type NullableCentralComponent struct {
	value *CentralComponent
	isSet bool
}

func (v NullableCentralComponent) Get() *CentralComponent {
	return v.value
}

func (v *NullableCentralComponent) Set(val *CentralComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralComponent(val *CentralComponent) *NullableCentralComponent {
	return &NullableCentralComponent{value: val, isSet: true}
}

func (v NullableCentralComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
