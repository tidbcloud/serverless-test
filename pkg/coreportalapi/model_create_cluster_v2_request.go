/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateClusterV2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateClusterV2Request{}

// CreateClusterV2Request struct for CreateClusterV2Request
type CreateClusterV2Request struct {
	Name                     string                    `json:"name"`
	RootPassword             *string                   `json:"root_password,omitempty"`
	Provider                 string                    `json:"provider"`
	Region                   string                    `json:"region"`
	IsDevTier                bool                      `json:"is_dev_tier"`
	Components               []CentralClusterComponent `json:"components"`
	PrimaryClusterId         string                    `json:"primary_cluster_id"`
	IgnoreReplication        *bool                     `json:"ignore_replication,omitempty"`
	Port                     int32                     `json:"port"`
	CrossAccountDeploymentId *string                   `json:"cross_account_deployment_id,omitempty"`
	SpendLimits              *float32                  `json:"spend_limits,omitempty"`
	SpendLimit               *int64                    `json:"spend_limit,omitempty"`
}

type _CreateClusterV2Request CreateClusterV2Request

// NewCreateClusterV2Request instantiates a new CreateClusterV2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterV2Request(name string, provider string, region string, isDevTier bool, components []CentralClusterComponent, primaryClusterId string, port int32) *CreateClusterV2Request {
	this := CreateClusterV2Request{}
	this.Name = name
	this.Provider = provider
	this.Region = region
	this.IsDevTier = isDevTier
	this.Components = components
	this.PrimaryClusterId = primaryClusterId
	this.Port = port
	return &this
}

// NewCreateClusterV2RequestWithDefaults instantiates a new CreateClusterV2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterV2RequestWithDefaults() *CreateClusterV2Request {
	this := CreateClusterV2Request{}
	return &this
}

// GetName returns the Name field value
func (o *CreateClusterV2Request) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateClusterV2Request) SetName(v string) {
	o.Name = v
}

// GetRootPassword returns the RootPassword field value if set, zero value otherwise.
func (o *CreateClusterV2Request) GetRootPassword() string {
	if o == nil || IsNil(o.RootPassword) {
		var ret string
		return ret
	}
	return *o.RootPassword
}

// GetRootPasswordOk returns a tuple with the RootPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetRootPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.RootPassword) {
		return nil, false
	}
	return o.RootPassword, true
}

// HasRootPassword returns a boolean if a field has been set.
func (o *CreateClusterV2Request) HasRootPassword() bool {
	if o != nil && !IsNil(o.RootPassword) {
		return true
	}

	return false
}

// SetRootPassword gets a reference to the given string and assigns it to the RootPassword field.
func (o *CreateClusterV2Request) SetRootPassword(v string) {
	o.RootPassword = &v
}

// GetProvider returns the Provider field value
func (o *CreateClusterV2Request) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *CreateClusterV2Request) SetProvider(v string) {
	o.Provider = v
}

// GetRegion returns the Region field value
func (o *CreateClusterV2Request) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CreateClusterV2Request) SetRegion(v string) {
	o.Region = v
}

// GetIsDevTier returns the IsDevTier field value
func (o *CreateClusterV2Request) GetIsDevTier() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDevTier
}

// GetIsDevTierOk returns a tuple with the IsDevTier field value
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetIsDevTierOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDevTier, true
}

// SetIsDevTier sets field value
func (o *CreateClusterV2Request) SetIsDevTier(v bool) {
	o.IsDevTier = v
}

// GetComponents returns the Components field value
func (o *CreateClusterV2Request) GetComponents() []CentralClusterComponent {
	if o == nil {
		var ret []CentralClusterComponent
		return ret
	}

	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetComponentsOk() ([]CentralClusterComponent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Components, true
}

// SetComponents sets field value
func (o *CreateClusterV2Request) SetComponents(v []CentralClusterComponent) {
	o.Components = v
}

// GetPrimaryClusterId returns the PrimaryClusterId field value
func (o *CreateClusterV2Request) GetPrimaryClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrimaryClusterId
}

// GetPrimaryClusterIdOk returns a tuple with the PrimaryClusterId field value
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetPrimaryClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryClusterId, true
}

// SetPrimaryClusterId sets field value
func (o *CreateClusterV2Request) SetPrimaryClusterId(v string) {
	o.PrimaryClusterId = v
}

// GetIgnoreReplication returns the IgnoreReplication field value if set, zero value otherwise.
func (o *CreateClusterV2Request) GetIgnoreReplication() bool {
	if o == nil || IsNil(o.IgnoreReplication) {
		var ret bool
		return ret
	}
	return *o.IgnoreReplication
}

// GetIgnoreReplicationOk returns a tuple with the IgnoreReplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetIgnoreReplicationOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreReplication) {
		return nil, false
	}
	return o.IgnoreReplication, true
}

// HasIgnoreReplication returns a boolean if a field has been set.
func (o *CreateClusterV2Request) HasIgnoreReplication() bool {
	if o != nil && !IsNil(o.IgnoreReplication) {
		return true
	}

	return false
}

// SetIgnoreReplication gets a reference to the given bool and assigns it to the IgnoreReplication field.
func (o *CreateClusterV2Request) SetIgnoreReplication(v bool) {
	o.IgnoreReplication = &v
}

// GetPort returns the Port field value
func (o *CreateClusterV2Request) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *CreateClusterV2Request) SetPort(v int32) {
	o.Port = v
}

// GetCrossAccountDeploymentId returns the CrossAccountDeploymentId field value if set, zero value otherwise.
func (o *CreateClusterV2Request) GetCrossAccountDeploymentId() string {
	if o == nil || IsNil(o.CrossAccountDeploymentId) {
		var ret string
		return ret
	}
	return *o.CrossAccountDeploymentId
}

// GetCrossAccountDeploymentIdOk returns a tuple with the CrossAccountDeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetCrossAccountDeploymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.CrossAccountDeploymentId) {
		return nil, false
	}
	return o.CrossAccountDeploymentId, true
}

// HasCrossAccountDeploymentId returns a boolean if a field has been set.
func (o *CreateClusterV2Request) HasCrossAccountDeploymentId() bool {
	if o != nil && !IsNil(o.CrossAccountDeploymentId) {
		return true
	}

	return false
}

// SetCrossAccountDeploymentId gets a reference to the given string and assigns it to the CrossAccountDeploymentId field.
func (o *CreateClusterV2Request) SetCrossAccountDeploymentId(v string) {
	o.CrossAccountDeploymentId = &v
}

// GetSpendLimits returns the SpendLimits field value if set, zero value otherwise.
func (o *CreateClusterV2Request) GetSpendLimits() float32 {
	if o == nil || IsNil(o.SpendLimits) {
		var ret float32
		return ret
	}
	return *o.SpendLimits
}

// GetSpendLimitsOk returns a tuple with the SpendLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetSpendLimitsOk() (*float32, bool) {
	if o == nil || IsNil(o.SpendLimits) {
		return nil, false
	}
	return o.SpendLimits, true
}

// HasSpendLimits returns a boolean if a field has been set.
func (o *CreateClusterV2Request) HasSpendLimits() bool {
	if o != nil && !IsNil(o.SpendLimits) {
		return true
	}

	return false
}

// SetSpendLimits gets a reference to the given float32 and assigns it to the SpendLimits field.
func (o *CreateClusterV2Request) SetSpendLimits(v float32) {
	o.SpendLimits = &v
}

// GetSpendLimit returns the SpendLimit field value if set, zero value otherwise.
func (o *CreateClusterV2Request) GetSpendLimit() int64 {
	if o == nil || IsNil(o.SpendLimit) {
		var ret int64
		return ret
	}
	return *o.SpendLimit
}

// GetSpendLimitOk returns a tuple with the SpendLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterV2Request) GetSpendLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.SpendLimit) {
		return nil, false
	}
	return o.SpendLimit, true
}

// HasSpendLimit returns a boolean if a field has been set.
func (o *CreateClusterV2Request) HasSpendLimit() bool {
	if o != nil && !IsNil(o.SpendLimit) {
		return true
	}

	return false
}

// SetSpendLimit gets a reference to the given int64 and assigns it to the SpendLimit field.
func (o *CreateClusterV2Request) SetSpendLimit(v int64) {
	o.SpendLimit = &v
}

func (o CreateClusterV2Request) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateClusterV2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.RootPassword) {
		toSerialize["root_password"] = o.RootPassword
	}
	toSerialize["provider"] = o.Provider
	toSerialize["region"] = o.Region
	toSerialize["is_dev_tier"] = o.IsDevTier
	toSerialize["components"] = o.Components
	toSerialize["primary_cluster_id"] = o.PrimaryClusterId
	if !IsNil(o.IgnoreReplication) {
		toSerialize["ignore_replication"] = o.IgnoreReplication
	}
	toSerialize["port"] = o.Port
	if !IsNil(o.CrossAccountDeploymentId) {
		toSerialize["cross_account_deployment_id"] = o.CrossAccountDeploymentId
	}
	if !IsNil(o.SpendLimits) {
		toSerialize["spend_limits"] = o.SpendLimits
	}
	if !IsNil(o.SpendLimit) {
		toSerialize["spend_limit"] = o.SpendLimit
	}
	return toSerialize, nil
}

func (o *CreateClusterV2Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"provider",
		"region",
		"is_dev_tier",
		"components",
		"primary_cluster_id",
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateClusterV2Request := _CreateClusterV2Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateClusterV2Request)

	if err != nil {
		return err
	}

	*o = CreateClusterV2Request(varCreateClusterV2Request)

	return err
}

type NullableCreateClusterV2Request struct {
	value *CreateClusterV2Request
	isSet bool
}

func (v NullableCreateClusterV2Request) Get() *CreateClusterV2Request {
	return v.value
}

func (v *NullableCreateClusterV2Request) Set(val *CreateClusterV2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterV2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterV2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterV2Request(val *CreateClusterV2Request) *NullableCreateClusterV2Request {
	return &NullableCreateClusterV2Request{value: val, isSet: true}
}

func (v NullableCreateClusterV2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterV2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
