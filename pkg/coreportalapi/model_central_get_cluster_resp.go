/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CentralGetClusterResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralGetClusterResp{}

// CentralGetClusterResp struct for CentralGetClusterResp
type CentralGetClusterResp struct {
	Cluster  CentralCluster  `json:"cluster"`
	BaseResp CentralBaseResp `json:"base_resp"`
}

type _CentralGetClusterResp CentralGetClusterResp

// NewCentralGetClusterResp instantiates a new CentralGetClusterResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralGetClusterResp(cluster CentralCluster, baseResp CentralBaseResp) *CentralGetClusterResp {
	this := CentralGetClusterResp{}
	this.Cluster = cluster
	this.BaseResp = baseResp
	return &this
}

// NewCentralGetClusterRespWithDefaults instantiates a new CentralGetClusterResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralGetClusterRespWithDefaults() *CentralGetClusterResp {
	this := CentralGetClusterResp{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *CentralGetClusterResp) GetCluster() CentralCluster {
	if o == nil {
		var ret CentralCluster
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *CentralGetClusterResp) GetClusterOk() (*CentralCluster, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *CentralGetClusterResp) SetCluster(v CentralCluster) {
	o.Cluster = v
}

// GetBaseResp returns the BaseResp field value
func (o *CentralGetClusterResp) GetBaseResp() CentralBaseResp {
	if o == nil {
		var ret CentralBaseResp
		return ret
	}

	return o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value
// and a boolean to check if the value has been set.
func (o *CentralGetClusterResp) GetBaseRespOk() (*CentralBaseResp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseResp, true
}

// SetBaseResp sets field value
func (o *CentralGetClusterResp) SetBaseResp(v CentralBaseResp) {
	o.BaseResp = v
}

func (o CentralGetClusterResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralGetClusterResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	toSerialize["base_resp"] = o.BaseResp
	return toSerialize, nil
}

func (o *CentralGetClusterResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cluster",
		"base_resp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralGetClusterResp := _CentralGetClusterResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralGetClusterResp)

	if err != nil {
		return err
	}

	*o = CentralGetClusterResp(varCentralGetClusterResp)

	return err
}

type NullableCentralGetClusterResp struct {
	value *CentralGetClusterResp
	isSet bool
}

func (v NullableCentralGetClusterResp) Get() *CentralGetClusterResp {
	return v.value
}

func (v *NullableCentralGetClusterResp) Set(val *CentralGetClusterResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralGetClusterResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralGetClusterResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralGetClusterResp(val *CentralGetClusterResp) *NullableCentralGetClusterResp {
	return &NullableCentralGetClusterResp{value: val, isSet: true}
}

func (v NullableCentralGetClusterResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralGetClusterResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
