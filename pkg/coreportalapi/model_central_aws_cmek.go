/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
	"time"
)

// checks if the CentralAwsCmek type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralAwsCmek{}

// CentralAwsCmek struct for CentralAwsCmek
type CentralAwsCmek struct {
	Id         *string    `json:"id,omitempty"`
	ProjectId  *string    `json:"project_id,omitempty"`
	RegionName *string    `json:"region_name,omitempty"`
	KmsArn     *string    `json:"kms_arn,omitempty"`
	CreatedAt  *time.Time `json:"created_at,omitempty"`
}

// NewCentralAwsCmek instantiates a new CentralAwsCmek object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralAwsCmek() *CentralAwsCmek {
	this := CentralAwsCmek{}
	return &this
}

// NewCentralAwsCmekWithDefaults instantiates a new CentralAwsCmek object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralAwsCmekWithDefaults() *CentralAwsCmek {
	this := CentralAwsCmek{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CentralAwsCmek) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralAwsCmek) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CentralAwsCmek) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CentralAwsCmek) SetId(v string) {
	o.Id = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CentralAwsCmek) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralAwsCmek) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CentralAwsCmek) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CentralAwsCmek) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *CentralAwsCmek) GetRegionName() string {
	if o == nil || IsNil(o.RegionName) {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralAwsCmek) GetRegionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegionName) {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *CentralAwsCmek) HasRegionName() bool {
	if o != nil && !IsNil(o.RegionName) {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *CentralAwsCmek) SetRegionName(v string) {
	o.RegionName = &v
}

// GetKmsArn returns the KmsArn field value if set, zero value otherwise.
func (o *CentralAwsCmek) GetKmsArn() string {
	if o == nil || IsNil(o.KmsArn) {
		var ret string
		return ret
	}
	return *o.KmsArn
}

// GetKmsArnOk returns a tuple with the KmsArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralAwsCmek) GetKmsArnOk() (*string, bool) {
	if o == nil || IsNil(o.KmsArn) {
		return nil, false
	}
	return o.KmsArn, true
}

// HasKmsArn returns a boolean if a field has been set.
func (o *CentralAwsCmek) HasKmsArn() bool {
	if o != nil && !IsNil(o.KmsArn) {
		return true
	}

	return false
}

// SetKmsArn gets a reference to the given string and assigns it to the KmsArn field.
func (o *CentralAwsCmek) SetKmsArn(v string) {
	o.KmsArn = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CentralAwsCmek) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralAwsCmek) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CentralAwsCmek) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CentralAwsCmek) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o CentralAwsCmek) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralAwsCmek) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.RegionName) {
		toSerialize["region_name"] = o.RegionName
	}
	if !IsNil(o.KmsArn) {
		toSerialize["kms_arn"] = o.KmsArn
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableCentralAwsCmek struct {
	value *CentralAwsCmek
	isSet bool
}

func (v NullableCentralAwsCmek) Get() *CentralAwsCmek {
	return v.value
}

func (v *NullableCentralAwsCmek) Set(val *CentralAwsCmek) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralAwsCmek) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralAwsCmek) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralAwsCmek(val *CentralAwsCmek) *NullableCentralAwsCmek {
	return &NullableCentralAwsCmek{value: val, isSet: true}
}

func (v NullableCentralAwsCmek) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralAwsCmek) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
