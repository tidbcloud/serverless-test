/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CentralGetPrivateEndpointResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralGetPrivateEndpointResp{}

// CentralGetPrivateEndpointResp struct for CentralGetPrivateEndpointResp
type CentralGetPrivateEndpointResp struct {
	Status CentralPrivateEndpointStatus `json:"status"`
	Domain string                       `json:"domain"`
	Port   string                       `json:"port"`
}

type _CentralGetPrivateEndpointResp CentralGetPrivateEndpointResp

// NewCentralGetPrivateEndpointResp instantiates a new CentralGetPrivateEndpointResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralGetPrivateEndpointResp(status CentralPrivateEndpointStatus, domain string, port string) *CentralGetPrivateEndpointResp {
	this := CentralGetPrivateEndpointResp{}
	this.Status = status
	this.Domain = domain
	this.Port = port
	return &this
}

// NewCentralGetPrivateEndpointRespWithDefaults instantiates a new CentralGetPrivateEndpointResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralGetPrivateEndpointRespWithDefaults() *CentralGetPrivateEndpointResp {
	this := CentralGetPrivateEndpointResp{}
	var status CentralPrivateEndpointStatus = CENTRALPRIVATEENDPOINTSTATUS_NO_VPC_PEERING
	this.Status = status
	return &this
}

// GetStatus returns the Status field value
func (o *CentralGetPrivateEndpointResp) GetStatus() CentralPrivateEndpointStatus {
	if o == nil {
		var ret CentralPrivateEndpointStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CentralGetPrivateEndpointResp) GetStatusOk() (*CentralPrivateEndpointStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CentralGetPrivateEndpointResp) SetStatus(v CentralPrivateEndpointStatus) {
	o.Status = v
}

// GetDomain returns the Domain field value
func (o *CentralGetPrivateEndpointResp) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *CentralGetPrivateEndpointResp) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *CentralGetPrivateEndpointResp) SetDomain(v string) {
	o.Domain = v
}

// GetPort returns the Port field value
func (o *CentralGetPrivateEndpointResp) GetPort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *CentralGetPrivateEndpointResp) GetPortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *CentralGetPrivateEndpointResp) SetPort(v string) {
	o.Port = v
}

func (o CentralGetPrivateEndpointResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralGetPrivateEndpointResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["domain"] = o.Domain
	toSerialize["port"] = o.Port
	return toSerialize, nil
}

func (o *CentralGetPrivateEndpointResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"domain",
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralGetPrivateEndpointResp := _CentralGetPrivateEndpointResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralGetPrivateEndpointResp)

	if err != nil {
		return err
	}

	*o = CentralGetPrivateEndpointResp(varCentralGetPrivateEndpointResp)

	return err
}

type NullableCentralGetPrivateEndpointResp struct {
	value *CentralGetPrivateEndpointResp
	isSet bool
}

func (v NullableCentralGetPrivateEndpointResp) Get() *CentralGetPrivateEndpointResp {
	return v.value
}

func (v *NullableCentralGetPrivateEndpointResp) Set(val *CentralGetPrivateEndpointResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralGetPrivateEndpointResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralGetPrivateEndpointResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralGetPrivateEndpointResp(val *CentralGetPrivateEndpointResp) *NullableCentralGetPrivateEndpointResp {
	return &NullableCentralGetPrivateEndpointResp{value: val, isSet: true}
}

func (v NullableCentralGetPrivateEndpointResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralGetPrivateEndpointResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
