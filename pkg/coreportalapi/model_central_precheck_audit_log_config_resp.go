/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CentralPrecheckAuditLogConfigResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralPrecheckAuditLogConfigResp{}

// CentralPrecheckAuditLogConfigResp struct for CentralPrecheckAuditLogConfigResp
type CentralPrecheckAuditLogConfigResp struct {
	Valid    bool             `json:"valid"`
	Message  string           `json:"message"`
	BaseResp *CentralBaseResp `json:"base_resp,omitempty"`
}

type _CentralPrecheckAuditLogConfigResp CentralPrecheckAuditLogConfigResp

// NewCentralPrecheckAuditLogConfigResp instantiates a new CentralPrecheckAuditLogConfigResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralPrecheckAuditLogConfigResp(valid bool, message string) *CentralPrecheckAuditLogConfigResp {
	this := CentralPrecheckAuditLogConfigResp{}
	this.Valid = valid
	this.Message = message
	return &this
}

// NewCentralPrecheckAuditLogConfigRespWithDefaults instantiates a new CentralPrecheckAuditLogConfigResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralPrecheckAuditLogConfigRespWithDefaults() *CentralPrecheckAuditLogConfigResp {
	this := CentralPrecheckAuditLogConfigResp{}
	return &this
}

// GetValid returns the Valid field value
func (o *CentralPrecheckAuditLogConfigResp) GetValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Valid
}

// GetValidOk returns a tuple with the Valid field value
// and a boolean to check if the value has been set.
func (o *CentralPrecheckAuditLogConfigResp) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Valid, true
}

// SetValid sets field value
func (o *CentralPrecheckAuditLogConfigResp) SetValid(v bool) {
	o.Valid = v
}

// GetMessage returns the Message field value
func (o *CentralPrecheckAuditLogConfigResp) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *CentralPrecheckAuditLogConfigResp) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *CentralPrecheckAuditLogConfigResp) SetMessage(v string) {
	o.Message = v
}

// GetBaseResp returns the BaseResp field value if set, zero value otherwise.
func (o *CentralPrecheckAuditLogConfigResp) GetBaseResp() CentralBaseResp {
	if o == nil || IsNil(o.BaseResp) {
		var ret CentralBaseResp
		return ret
	}
	return *o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralPrecheckAuditLogConfigResp) GetBaseRespOk() (*CentralBaseResp, bool) {
	if o == nil || IsNil(o.BaseResp) {
		return nil, false
	}
	return o.BaseResp, true
}

// HasBaseResp returns a boolean if a field has been set.
func (o *CentralPrecheckAuditLogConfigResp) HasBaseResp() bool {
	if o != nil && !IsNil(o.BaseResp) {
		return true
	}

	return false
}

// SetBaseResp gets a reference to the given CentralBaseResp and assigns it to the BaseResp field.
func (o *CentralPrecheckAuditLogConfigResp) SetBaseResp(v CentralBaseResp) {
	o.BaseResp = &v
}

func (o CentralPrecheckAuditLogConfigResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralPrecheckAuditLogConfigResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["valid"] = o.Valid
	toSerialize["message"] = o.Message
	if !IsNil(o.BaseResp) {
		toSerialize["base_resp"] = o.BaseResp
	}
	return toSerialize, nil
}

func (o *CentralPrecheckAuditLogConfigResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"valid",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralPrecheckAuditLogConfigResp := _CentralPrecheckAuditLogConfigResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralPrecheckAuditLogConfigResp)

	if err != nil {
		return err
	}

	*o = CentralPrecheckAuditLogConfigResp(varCentralPrecheckAuditLogConfigResp)

	return err
}

type NullableCentralPrecheckAuditLogConfigResp struct {
	value *CentralPrecheckAuditLogConfigResp
	isSet bool
}

func (v NullableCentralPrecheckAuditLogConfigResp) Get() *CentralPrecheckAuditLogConfigResp {
	return v.value
}

func (v *NullableCentralPrecheckAuditLogConfigResp) Set(val *CentralPrecheckAuditLogConfigResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralPrecheckAuditLogConfigResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralPrecheckAuditLogConfigResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralPrecheckAuditLogConfigResp(val *CentralPrecheckAuditLogConfigResp) *NullableCentralPrecheckAuditLogConfigResp {
	return &NullableCentralPrecheckAuditLogConfigResp{value: val, isSet: true}
}

func (v NullableCentralPrecheckAuditLogConfigResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralPrecheckAuditLogConfigResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
