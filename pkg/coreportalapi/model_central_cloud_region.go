/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralCloudRegion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralCloudRegion{}

// CentralCloudRegion Message for describing a region for deploying TiDB Dedicated clusters.
type CentralCloudRegion struct {
	// Required. Immutable. The unique name of the region.
	Name *string `json:"name,omitempty"`
	// Output_only. Immutable. User-friendly display name of the region.
	DisplayName *string                          `json:"display_name,omitempty"`
	Provider    *CentralCloudRegionCloudProvider `json:"provider,omitempty"`
}

// NewCentralCloudRegion instantiates a new CentralCloudRegion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralCloudRegion() *CentralCloudRegion {
	this := CentralCloudRegion{}
	var provider CentralCloudRegionCloudProvider = CENTRALCLOUDREGIONCLOUDPROVIDER_CLOUD_PROVIDER_UNSPECIFIED
	this.Provider = &provider
	return &this
}

// NewCentralCloudRegionWithDefaults instantiates a new CentralCloudRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralCloudRegionWithDefaults() *CentralCloudRegion {
	this := CentralCloudRegion{}
	var provider CentralCloudRegionCloudProvider = CENTRALCLOUDREGIONCLOUDPROVIDER_CLOUD_PROVIDER_UNSPECIFIED
	this.Provider = &provider
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CentralCloudRegion) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCloudRegion) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CentralCloudRegion) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CentralCloudRegion) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CentralCloudRegion) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCloudRegion) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CentralCloudRegion) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CentralCloudRegion) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CentralCloudRegion) GetProvider() CentralCloudRegionCloudProvider {
	if o == nil || IsNil(o.Provider) {
		var ret CentralCloudRegionCloudProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralCloudRegion) GetProviderOk() (*CentralCloudRegionCloudProvider, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CentralCloudRegion) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given CentralCloudRegionCloudProvider and assigns it to the Provider field.
func (o *CentralCloudRegion) SetProvider(v CentralCloudRegionCloudProvider) {
	o.Provider = &v
}

func (o CentralCloudRegion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralCloudRegion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	return toSerialize, nil
}

type NullableCentralCloudRegion struct {
	value *CentralCloudRegion
	isSet bool
}

func (v NullableCentralCloudRegion) Get() *CentralCloudRegion {
	return v.value
}

func (v *NullableCentralCloudRegion) Set(val *CentralCloudRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralCloudRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralCloudRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralCloudRegion(val *CentralCloudRegion) *NullableCentralCloudRegion {
	return &NullableCentralCloudRegion{value: val, isSet: true}
}

func (v NullableCentralCloudRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralCloudRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
