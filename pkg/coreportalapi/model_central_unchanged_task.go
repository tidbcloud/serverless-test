/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralUnchangedTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralUnchangedTask{}

// CentralUnchangedTask struct for CentralUnchangedTask
type CentralUnchangedTask struct {
	Id          *string `json:"id,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewCentralUnchangedTask instantiates a new CentralUnchangedTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralUnchangedTask() *CentralUnchangedTask {
	this := CentralUnchangedTask{}
	return &this
}

// NewCentralUnchangedTaskWithDefaults instantiates a new CentralUnchangedTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralUnchangedTaskWithDefaults() *CentralUnchangedTask {
	this := CentralUnchangedTask{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CentralUnchangedTask) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralUnchangedTask) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CentralUnchangedTask) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CentralUnchangedTask) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CentralUnchangedTask) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralUnchangedTask) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CentralUnchangedTask) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CentralUnchangedTask) SetDescription(v string) {
	o.Description = &v
}

func (o CentralUnchangedTask) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralUnchangedTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableCentralUnchangedTask struct {
	value *CentralUnchangedTask
	isSet bool
}

func (v NullableCentralUnchangedTask) Get() *CentralUnchangedTask {
	return v.value
}

func (v *NullableCentralUnchangedTask) Set(val *CentralUnchangedTask) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralUnchangedTask) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralUnchangedTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralUnchangedTask(val *CentralUnchangedTask) *NullableCentralUnchangedTask {
	return &NullableCentralUnchangedTask{value: val, isSet: true}
}

func (v NullableCentralUnchangedTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralUnchangedTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
