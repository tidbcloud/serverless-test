/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralBaseResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralBaseResp{}

// CentralBaseResp struct for CentralBaseResp
type CentralBaseResp struct {
	ErrCode *string `json:"err_code,omitempty"`
	ErrMsg  *string `json:"err_msg,omitempty"`
}

// NewCentralBaseResp instantiates a new CentralBaseResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralBaseResp() *CentralBaseResp {
	this := CentralBaseResp{}
	return &this
}

// NewCentralBaseRespWithDefaults instantiates a new CentralBaseResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralBaseRespWithDefaults() *CentralBaseResp {
	this := CentralBaseResp{}
	return &this
}

// GetErrCode returns the ErrCode field value if set, zero value otherwise.
func (o *CentralBaseResp) GetErrCode() string {
	if o == nil || IsNil(o.ErrCode) {
		var ret string
		return ret
	}
	return *o.ErrCode
}

// GetErrCodeOk returns a tuple with the ErrCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralBaseResp) GetErrCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrCode) {
		return nil, false
	}
	return o.ErrCode, true
}

// HasErrCode returns a boolean if a field has been set.
func (o *CentralBaseResp) HasErrCode() bool {
	if o != nil && !IsNil(o.ErrCode) {
		return true
	}

	return false
}

// SetErrCode gets a reference to the given string and assigns it to the ErrCode field.
func (o *CentralBaseResp) SetErrCode(v string) {
	o.ErrCode = &v
}

// GetErrMsg returns the ErrMsg field value if set, zero value otherwise.
func (o *CentralBaseResp) GetErrMsg() string {
	if o == nil || IsNil(o.ErrMsg) {
		var ret string
		return ret
	}
	return *o.ErrMsg
}

// GetErrMsgOk returns a tuple with the ErrMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralBaseResp) GetErrMsgOk() (*string, bool) {
	if o == nil || IsNil(o.ErrMsg) {
		return nil, false
	}
	return o.ErrMsg, true
}

// HasErrMsg returns a boolean if a field has been set.
func (o *CentralBaseResp) HasErrMsg() bool {
	if o != nil && !IsNil(o.ErrMsg) {
		return true
	}

	return false
}

// SetErrMsg gets a reference to the given string and assigns it to the ErrMsg field.
func (o *CentralBaseResp) SetErrMsg(v string) {
	o.ErrMsg = &v
}

func (o CentralBaseResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralBaseResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrCode) {
		toSerialize["err_code"] = o.ErrCode
	}
	if !IsNil(o.ErrMsg) {
		toSerialize["err_msg"] = o.ErrMsg
	}
	return toSerialize, nil
}

type NullableCentralBaseResp struct {
	value *CentralBaseResp
	isSet bool
}

func (v NullableCentralBaseResp) Get() *CentralBaseResp {
	return v.value
}

func (v *NullableCentralBaseResp) Set(val *CentralBaseResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralBaseResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralBaseResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralBaseResp(val *CentralBaseResp) *NullableCentralBaseResp {
	return &NullableCentralBaseResp{value: val, isSet: true}
}

func (v NullableCentralBaseResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralBaseResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
