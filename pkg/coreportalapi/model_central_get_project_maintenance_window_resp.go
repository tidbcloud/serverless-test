/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CentralGetProjectMaintenanceWindowResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralGetProjectMaintenanceWindowResp{}

// CentralGetProjectMaintenanceWindowResp struct for CentralGetProjectMaintenanceWindowResp
type CentralGetProjectMaintenanceWindowResp struct {
	MaintenanceWindow   CentralMaintenanceWindow `json:"maintenance_window"`
	NextMaintenanceDate time.Time                `json:"next_maintenance_date"`
	BaseResp            CentralBaseResp          `json:"base_resp"`
}

type _CentralGetProjectMaintenanceWindowResp CentralGetProjectMaintenanceWindowResp

// NewCentralGetProjectMaintenanceWindowResp instantiates a new CentralGetProjectMaintenanceWindowResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralGetProjectMaintenanceWindowResp(maintenanceWindow CentralMaintenanceWindow, nextMaintenanceDate time.Time, baseResp CentralBaseResp) *CentralGetProjectMaintenanceWindowResp {
	this := CentralGetProjectMaintenanceWindowResp{}
	this.MaintenanceWindow = maintenanceWindow
	this.NextMaintenanceDate = nextMaintenanceDate
	this.BaseResp = baseResp
	return &this
}

// NewCentralGetProjectMaintenanceWindowRespWithDefaults instantiates a new CentralGetProjectMaintenanceWindowResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralGetProjectMaintenanceWindowRespWithDefaults() *CentralGetProjectMaintenanceWindowResp {
	this := CentralGetProjectMaintenanceWindowResp{}
	return &this
}

// GetMaintenanceWindow returns the MaintenanceWindow field value
func (o *CentralGetProjectMaintenanceWindowResp) GetMaintenanceWindow() CentralMaintenanceWindow {
	if o == nil {
		var ret CentralMaintenanceWindow
		return ret
	}

	return o.MaintenanceWindow
}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value
// and a boolean to check if the value has been set.
func (o *CentralGetProjectMaintenanceWindowResp) GetMaintenanceWindowOk() (*CentralMaintenanceWindow, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaintenanceWindow, true
}

// SetMaintenanceWindow sets field value
func (o *CentralGetProjectMaintenanceWindowResp) SetMaintenanceWindow(v CentralMaintenanceWindow) {
	o.MaintenanceWindow = v
}

// GetNextMaintenanceDate returns the NextMaintenanceDate field value
func (o *CentralGetProjectMaintenanceWindowResp) GetNextMaintenanceDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.NextMaintenanceDate
}

// GetNextMaintenanceDateOk returns a tuple with the NextMaintenanceDate field value
// and a boolean to check if the value has been set.
func (o *CentralGetProjectMaintenanceWindowResp) GetNextMaintenanceDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextMaintenanceDate, true
}

// SetNextMaintenanceDate sets field value
func (o *CentralGetProjectMaintenanceWindowResp) SetNextMaintenanceDate(v time.Time) {
	o.NextMaintenanceDate = v
}

// GetBaseResp returns the BaseResp field value
func (o *CentralGetProjectMaintenanceWindowResp) GetBaseResp() CentralBaseResp {
	if o == nil {
		var ret CentralBaseResp
		return ret
	}

	return o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value
// and a boolean to check if the value has been set.
func (o *CentralGetProjectMaintenanceWindowResp) GetBaseRespOk() (*CentralBaseResp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseResp, true
}

// SetBaseResp sets field value
func (o *CentralGetProjectMaintenanceWindowResp) SetBaseResp(v CentralBaseResp) {
	o.BaseResp = v
}

func (o CentralGetProjectMaintenanceWindowResp) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralGetProjectMaintenanceWindowResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["maintenance_window"] = o.MaintenanceWindow
	toSerialize["next_maintenance_date"] = o.NextMaintenanceDate
	toSerialize["base_resp"] = o.BaseResp
	return toSerialize, nil
}

func (o *CentralGetProjectMaintenanceWindowResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"maintenance_window",
		"next_maintenance_date",
		"base_resp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCentralGetProjectMaintenanceWindowResp := _CentralGetProjectMaintenanceWindowResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCentralGetProjectMaintenanceWindowResp)

	if err != nil {
		return err
	}

	*o = CentralGetProjectMaintenanceWindowResp(varCentralGetProjectMaintenanceWindowResp)

	return err
}

type NullableCentralGetProjectMaintenanceWindowResp struct {
	value *CentralGetProjectMaintenanceWindowResp
	isSet bool
}

func (v NullableCentralGetProjectMaintenanceWindowResp) Get() *CentralGetProjectMaintenanceWindowResp {
	return v.value
}

func (v *NullableCentralGetProjectMaintenanceWindowResp) Set(val *CentralGetProjectMaintenanceWindowResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralGetProjectMaintenanceWindowResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralGetProjectMaintenanceWindowResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralGetProjectMaintenanceWindowResp(val *CentralGetProjectMaintenanceWindowResp) *NullableCentralGetProjectMaintenanceWindowResp {
	return &NullableCentralGetProjectMaintenanceWindowResp{value: val, isSet: true}
}

func (v NullableCentralGetProjectMaintenanceWindowResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralGetProjectMaintenanceWindowResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
