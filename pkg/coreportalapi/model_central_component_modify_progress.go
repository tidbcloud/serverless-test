/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralComponentModifyProgress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralComponentModifyProgress{}

// CentralComponentModifyProgress struct for CentralComponentModifyProgress
type CentralComponentModifyProgress struct {
	// the following fields SHOULDN't be used if `pending` is true.
	Pending                   *bool  `json:"pending,omitempty"`
	ExpectedQuantity          *int32 `json:"expected_quantity,omitempty"`
	UptodateQuantity          *int32 `json:"uptodate_quantity,omitempty"`
	RemainingDeletionQuantity *int32 `json:"remaining_deletion_quantity,omitempty"`
}

// NewCentralComponentModifyProgress instantiates a new CentralComponentModifyProgress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralComponentModifyProgress() *CentralComponentModifyProgress {
	this := CentralComponentModifyProgress{}
	return &this
}

// NewCentralComponentModifyProgressWithDefaults instantiates a new CentralComponentModifyProgress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralComponentModifyProgressWithDefaults() *CentralComponentModifyProgress {
	this := CentralComponentModifyProgress{}
	return &this
}

// GetPending returns the Pending field value if set, zero value otherwise.
func (o *CentralComponentModifyProgress) GetPending() bool {
	if o == nil || IsNil(o.Pending) {
		var ret bool
		return ret
	}
	return *o.Pending
}

// GetPendingOk returns a tuple with the Pending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralComponentModifyProgress) GetPendingOk() (*bool, bool) {
	if o == nil || IsNil(o.Pending) {
		return nil, false
	}
	return o.Pending, true
}

// HasPending returns a boolean if a field has been set.
func (o *CentralComponentModifyProgress) HasPending() bool {
	if o != nil && !IsNil(o.Pending) {
		return true
	}

	return false
}

// SetPending gets a reference to the given bool and assigns it to the Pending field.
func (o *CentralComponentModifyProgress) SetPending(v bool) {
	o.Pending = &v
}

// GetExpectedQuantity returns the ExpectedQuantity field value if set, zero value otherwise.
func (o *CentralComponentModifyProgress) GetExpectedQuantity() int32 {
	if o == nil || IsNil(o.ExpectedQuantity) {
		var ret int32
		return ret
	}
	return *o.ExpectedQuantity
}

// GetExpectedQuantityOk returns a tuple with the ExpectedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralComponentModifyProgress) GetExpectedQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedQuantity) {
		return nil, false
	}
	return o.ExpectedQuantity, true
}

// HasExpectedQuantity returns a boolean if a field has been set.
func (o *CentralComponentModifyProgress) HasExpectedQuantity() bool {
	if o != nil && !IsNil(o.ExpectedQuantity) {
		return true
	}

	return false
}

// SetExpectedQuantity gets a reference to the given int32 and assigns it to the ExpectedQuantity field.
func (o *CentralComponentModifyProgress) SetExpectedQuantity(v int32) {
	o.ExpectedQuantity = &v
}

// GetUptodateQuantity returns the UptodateQuantity field value if set, zero value otherwise.
func (o *CentralComponentModifyProgress) GetUptodateQuantity() int32 {
	if o == nil || IsNil(o.UptodateQuantity) {
		var ret int32
		return ret
	}
	return *o.UptodateQuantity
}

// GetUptodateQuantityOk returns a tuple with the UptodateQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralComponentModifyProgress) GetUptodateQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.UptodateQuantity) {
		return nil, false
	}
	return o.UptodateQuantity, true
}

// HasUptodateQuantity returns a boolean if a field has been set.
func (o *CentralComponentModifyProgress) HasUptodateQuantity() bool {
	if o != nil && !IsNil(o.UptodateQuantity) {
		return true
	}

	return false
}

// SetUptodateQuantity gets a reference to the given int32 and assigns it to the UptodateQuantity field.
func (o *CentralComponentModifyProgress) SetUptodateQuantity(v int32) {
	o.UptodateQuantity = &v
}

// GetRemainingDeletionQuantity returns the RemainingDeletionQuantity field value if set, zero value otherwise.
func (o *CentralComponentModifyProgress) GetRemainingDeletionQuantity() int32 {
	if o == nil || IsNil(o.RemainingDeletionQuantity) {
		var ret int32
		return ret
	}
	return *o.RemainingDeletionQuantity
}

// GetRemainingDeletionQuantityOk returns a tuple with the RemainingDeletionQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralComponentModifyProgress) GetRemainingDeletionQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.RemainingDeletionQuantity) {
		return nil, false
	}
	return o.RemainingDeletionQuantity, true
}

// HasRemainingDeletionQuantity returns a boolean if a field has been set.
func (o *CentralComponentModifyProgress) HasRemainingDeletionQuantity() bool {
	if o != nil && !IsNil(o.RemainingDeletionQuantity) {
		return true
	}

	return false
}

// SetRemainingDeletionQuantity gets a reference to the given int32 and assigns it to the RemainingDeletionQuantity field.
func (o *CentralComponentModifyProgress) SetRemainingDeletionQuantity(v int32) {
	o.RemainingDeletionQuantity = &v
}

func (o CentralComponentModifyProgress) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralComponentModifyProgress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pending) {
		toSerialize["pending"] = o.Pending
	}
	if !IsNil(o.ExpectedQuantity) {
		toSerialize["expected_quantity"] = o.ExpectedQuantity
	}
	if !IsNil(o.UptodateQuantity) {
		toSerialize["uptodate_quantity"] = o.UptodateQuantity
	}
	if !IsNil(o.RemainingDeletionQuantity) {
		toSerialize["remaining_deletion_quantity"] = o.RemainingDeletionQuantity
	}
	return toSerialize, nil
}

type NullableCentralComponentModifyProgress struct {
	value *CentralComponentModifyProgress
	isSet bool
}

func (v NullableCentralComponentModifyProgress) Get() *CentralComponentModifyProgress {
	return v.value
}

func (v *NullableCentralComponentModifyProgress) Set(val *CentralComponentModifyProgress) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralComponentModifyProgress) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralComponentModifyProgress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralComponentModifyProgress(val *CentralComponentModifyProgress) *NullableCentralComponentModifyProgress {
	return &NullableCentralComponentModifyProgress{value: val, isSet: true}
}

func (v NullableCentralComponentModifyProgress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralComponentModifyProgress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
