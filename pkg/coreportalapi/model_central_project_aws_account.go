/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
)

// checks if the CentralProjectAWSAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralProjectAWSAccount{}

// CentralProjectAWSAccount struct for CentralProjectAWSAccount
type CentralProjectAWSAccount struct {
	AwsAccount *string          `json:"aws_account,omitempty"`
	BaseResp   *CentralBaseResp `json:"base_resp,omitempty"`
}

// NewCentralProjectAWSAccount instantiates a new CentralProjectAWSAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralProjectAWSAccount() *CentralProjectAWSAccount {
	this := CentralProjectAWSAccount{}
	return &this
}

// NewCentralProjectAWSAccountWithDefaults instantiates a new CentralProjectAWSAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralProjectAWSAccountWithDefaults() *CentralProjectAWSAccount {
	this := CentralProjectAWSAccount{}
	return &this
}

// GetAwsAccount returns the AwsAccount field value if set, zero value otherwise.
func (o *CentralProjectAWSAccount) GetAwsAccount() string {
	if o == nil || IsNil(o.AwsAccount) {
		var ret string
		return ret
	}
	return *o.AwsAccount
}

// GetAwsAccountOk returns a tuple with the AwsAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralProjectAWSAccount) GetAwsAccountOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccount) {
		return nil, false
	}
	return o.AwsAccount, true
}

// HasAwsAccount returns a boolean if a field has been set.
func (o *CentralProjectAWSAccount) HasAwsAccount() bool {
	if o != nil && !IsNil(o.AwsAccount) {
		return true
	}

	return false
}

// SetAwsAccount gets a reference to the given string and assigns it to the AwsAccount field.
func (o *CentralProjectAWSAccount) SetAwsAccount(v string) {
	o.AwsAccount = &v
}

// GetBaseResp returns the BaseResp field value if set, zero value otherwise.
func (o *CentralProjectAWSAccount) GetBaseResp() CentralBaseResp {
	if o == nil || IsNil(o.BaseResp) {
		var ret CentralBaseResp
		return ret
	}
	return *o.BaseResp
}

// GetBaseRespOk returns a tuple with the BaseResp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralProjectAWSAccount) GetBaseRespOk() (*CentralBaseResp, bool) {
	if o == nil || IsNil(o.BaseResp) {
		return nil, false
	}
	return o.BaseResp, true
}

// HasBaseResp returns a boolean if a field has been set.
func (o *CentralProjectAWSAccount) HasBaseResp() bool {
	if o != nil && !IsNil(o.BaseResp) {
		return true
	}

	return false
}

// SetBaseResp gets a reference to the given CentralBaseResp and assigns it to the BaseResp field.
func (o *CentralProjectAWSAccount) SetBaseResp(v CentralBaseResp) {
	o.BaseResp = &v
}

func (o CentralProjectAWSAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralProjectAWSAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsAccount) {
		toSerialize["aws_account"] = o.AwsAccount
	}
	if !IsNil(o.BaseResp) {
		toSerialize["base_resp"] = o.BaseResp
	}
	return toSerialize, nil
}

type NullableCentralProjectAWSAccount struct {
	value *CentralProjectAWSAccount
	isSet bool
}

func (v NullableCentralProjectAWSAccount) Get() *CentralProjectAWSAccount {
	return v.value
}

func (v *NullableCentralProjectAWSAccount) Set(val *CentralProjectAWSAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralProjectAWSAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralProjectAWSAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralProjectAWSAccount(val *CentralProjectAWSAccount) *NullableCentralProjectAWSAccount {
	return &NullableCentralProjectAWSAccount{value: val, isSet: true}
}

func (v NullableCentralProjectAWSAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralProjectAWSAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
