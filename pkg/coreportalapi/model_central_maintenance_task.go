/*
gRPC for our DBaaS central service

notably uses gRPC-Gateway with OpenAPI

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreportalapi

import (
	"encoding/json"
	"time"
)

// checks if the CentralMaintenanceTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralMaintenanceTask{}

// CentralMaintenanceTask struct for CentralMaintenanceTask
type CentralMaintenanceTask struct {
	Id                 *string                       `json:"id,omitempty"`
	ProjectId          *string                       `json:"project_id,omitempty"`
	CreatedAt          *time.Time                    `json:"created_at,omitempty"`
	Description        *string                       `json:"description,omitempty"`
	Status             *CentralMaintenanceTaskStatus `json:"status,omitempty"`
	ScheduledApplyTime *time.Time                    `json:"scheduled_apply_time,omitempty"`
	Deadline           *time.Time                    `json:"deadline,omitempty"`
}

// NewCentralMaintenanceTask instantiates a new CentralMaintenanceTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralMaintenanceTask() *CentralMaintenanceTask {
	this := CentralMaintenanceTask{}
	var status CentralMaintenanceTaskStatus = CENTRALMAINTENANCETASKSTATUS_STATUS_UNSPECIFIED
	this.Status = &status
	return &this
}

// NewCentralMaintenanceTaskWithDefaults instantiates a new CentralMaintenanceTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralMaintenanceTaskWithDefaults() *CentralMaintenanceTask {
	this := CentralMaintenanceTask{}
	var status CentralMaintenanceTaskStatus = CENTRALMAINTENANCETASKSTATUS_STATUS_UNSPECIFIED
	this.Status = &status
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CentralMaintenanceTask) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceTask) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CentralMaintenanceTask) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CentralMaintenanceTask) SetId(v string) {
	o.Id = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CentralMaintenanceTask) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceTask) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CentralMaintenanceTask) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CentralMaintenanceTask) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CentralMaintenanceTask) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceTask) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CentralMaintenanceTask) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CentralMaintenanceTask) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CentralMaintenanceTask) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceTask) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CentralMaintenanceTask) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CentralMaintenanceTask) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CentralMaintenanceTask) GetStatus() CentralMaintenanceTaskStatus {
	if o == nil || IsNil(o.Status) {
		var ret CentralMaintenanceTaskStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceTask) GetStatusOk() (*CentralMaintenanceTaskStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CentralMaintenanceTask) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CentralMaintenanceTaskStatus and assigns it to the Status field.
func (o *CentralMaintenanceTask) SetStatus(v CentralMaintenanceTaskStatus) {
	o.Status = &v
}

// GetScheduledApplyTime returns the ScheduledApplyTime field value if set, zero value otherwise.
func (o *CentralMaintenanceTask) GetScheduledApplyTime() time.Time {
	if o == nil || IsNil(o.ScheduledApplyTime) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledApplyTime
}

// GetScheduledApplyTimeOk returns a tuple with the ScheduledApplyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceTask) GetScheduledApplyTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ScheduledApplyTime) {
		return nil, false
	}
	return o.ScheduledApplyTime, true
}

// HasScheduledApplyTime returns a boolean if a field has been set.
func (o *CentralMaintenanceTask) HasScheduledApplyTime() bool {
	if o != nil && !IsNil(o.ScheduledApplyTime) {
		return true
	}

	return false
}

// SetScheduledApplyTime gets a reference to the given time.Time and assigns it to the ScheduledApplyTime field.
func (o *CentralMaintenanceTask) SetScheduledApplyTime(v time.Time) {
	o.ScheduledApplyTime = &v
}

// GetDeadline returns the Deadline field value if set, zero value otherwise.
func (o *CentralMaintenanceTask) GetDeadline() time.Time {
	if o == nil || IsNil(o.Deadline) {
		var ret time.Time
		return ret
	}
	return *o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralMaintenanceTask) GetDeadlineOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Deadline) {
		return nil, false
	}
	return o.Deadline, true
}

// HasDeadline returns a boolean if a field has been set.
func (o *CentralMaintenanceTask) HasDeadline() bool {
	if o != nil && !IsNil(o.Deadline) {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given time.Time and assigns it to the Deadline field.
func (o *CentralMaintenanceTask) SetDeadline(v time.Time) {
	o.Deadline = &v
}

func (o CentralMaintenanceTask) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CentralMaintenanceTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ScheduledApplyTime) {
		toSerialize["scheduled_apply_time"] = o.ScheduledApplyTime
	}
	if !IsNil(o.Deadline) {
		toSerialize["deadline"] = o.Deadline
	}
	return toSerialize, nil
}

type NullableCentralMaintenanceTask struct {
	value *CentralMaintenanceTask
	isSet bool
}

func (v NullableCentralMaintenanceTask) Get() *CentralMaintenanceTask {
	return v.value
}

func (v *NullableCentralMaintenanceTask) Set(val *CentralMaintenanceTask) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralMaintenanceTask) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralMaintenanceTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralMaintenanceTask(val *CentralMaintenanceTask) *NullableCentralMaintenanceTask {
	return &NullableCentralMaintenanceTask{value: val, isSet: true}
}

func (v NullableCentralMaintenanceTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralMaintenanceTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
